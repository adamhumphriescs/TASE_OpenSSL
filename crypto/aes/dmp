
aes_core.o:     file format elf64-x86-64
aes_core.o
architecture: i386:x86-64, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x0000000000000000

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00003bd0  0000000000000000  0000000000000000  00000040  2**4
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .rodata       00002130  0000000000000000  0000000000000000  00003c10  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .comment      000000aa  0000000000000000  0000000000000000  00005d40  2**0
                  CONTENTS, READONLY
  3 .note.GNU-stack 00000000  0000000000000000  0000000000000000  00005dea  2**0
                  CONTENTS, READONLY
  4 .rodata.tase_records 00000188  0000000000000000  0000000000000000  00005dea  2**0
                  CONTENTS, RELOC, READONLY
  5 .eh_frame     00000098  0000000000000000  0000000000000000  00005f78  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
  6 .llvm_addrsig 0000000e  0000000000000000  0000000000000000  00007b28  2**0
                  CONTENTS, READONLY, EXCLUDE
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 aes_core.c
0000000000001030 l     O .rodata	0000000000000400 Td0
0000000000001430 l     O .rodata	0000000000000400 Td1
0000000000001830 l     O .rodata	0000000000000400 Td2
0000000000001c30 l     O .rodata	0000000000000400 Td3
0000000000002030 l     O .rodata	0000000000000100 Td4
0000000000000800 l     O .rodata	0000000000000400 Te0
0000000000000c00 l     O .rodata	0000000000000400 Te1
0000000000000000 l     O .rodata	0000000000000400 Te2
0000000000000400 l     O .rodata	0000000000000400 Te3
0000000000001000 l     O .rodata	0000000000000028 rcon
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000002850 g     F .text	0000000000001380 AES_decrypt
0000000000002090 g     F .text	00000000000007bc AES_encrypt
0000000000001570 g     F .text	0000000000000b15 private_AES_set_decrypt_key
0000000000000000 g     F .text	000000000000156e private_AES_set_encrypt_key
0000000000000000         *UND*	0000000000000000 sb_disabled
0000000000000000         *UND*	0000000000000000 sb_modeled
0000000000000000         *UND*	0000000000000000 tase_springboard



Disassembly of section .text:

0000000000000000 <private_AES_set_encrypt_key>:
       0:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # e <private_AES_set_encrypt_key+0xe>
       7:	ff 24 25 00 00 00 00 	jmpq   *0x0
			a: R_X86_64_32S	tase_springboard
       e:	c4 63 81 22 7c 24 f8 	vpinsrq $0x0,-0x8(%rsp),%xmm15,%xmm15
      15:	00 
      16:	55                   	push   %rbp
      17:	48 89 e5             	mov    %rsp,%rbp
      1a:	c4 63 81 22 7d f0 01 	vpinsrq $0x1,-0x10(%rbp),%xmm15,%xmm15
      21:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
      25:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
      2a:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
      2f:	c4 63 01 22 7d ec 00 	vpinsrd $0x0,-0x14(%rbp),%xmm15,%xmm15
      36:	89 75 ec             	mov    %esi,-0x14(%rbp)
      39:	c4 63 81 22 7d e0 01 	vpinsrq $0x1,-0x20(%rbp),%xmm15,%xmm15
      40:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
      44:	c4 63 01 22 7d d4 01 	vpinsrd $0x1,-0x2c(%rbp),%xmm15,%xmm15
      4b:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
      52:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
      56:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
      5b:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
      60:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
      66:	48 83 fa 00          	cmp    $0x0,%rdx
      6a:	0f 84 22 00 00 00    	je     92 <private_AES_set_encrypt_key+0x92>
      70:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 7e <private_AES_set_encrypt_key+0x7e>
      77:	ff 24 25 00 00 00 00 	jmpq   *0x0
			7a: R_X86_64_32S	tase_springboard
      7e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
      82:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
      88:	48 83 f8 00          	cmp    $0x0,%rax
      8c:	0f 85 21 00 00 00    	jne    b3 <private_AES_set_encrypt_key+0xb3>
      92:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # a0 <private_AES_set_encrypt_key+0xa0>
      99:	ff 24 25 00 00 00 00 	jmpq   *0x0
			9c: R_X86_64_32S	tase_springboard
      a0:	c4 63 01 22 7d fc 00 	vpinsrd $0x0,-0x4(%rbp),%xmm15,%xmm15
      a7:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
      ae:	e9 9c 14 00 00       	jmpq   154f <private_AES_set_encrypt_key+0x154f>
      b3:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # c1 <private_AES_set_encrypt_key+0xc1>
      ba:	ff 24 25 00 00 00 00 	jmpq   *0x0
			bd: R_X86_64_32S	tase_springboard
      c1:	8b 45 ec             	mov    -0x14(%rbp),%eax
      c4:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
      ca:	3d 80 00 00 00       	cmp    $0x80,%eax
      cf:	0f 84 65 00 00 00    	je     13a <private_AES_set_encrypt_key+0x13a>
      d5:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # e3 <private_AES_set_encrypt_key+0xe3>
      dc:	ff 24 25 00 00 00 00 	jmpq   *0x0
			df: R_X86_64_32S	tase_springboard
      e3:	8b 45 ec             	mov    -0x14(%rbp),%eax
      e6:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
      ec:	3d c0 00 00 00       	cmp    $0xc0,%eax
      f1:	0f 84 43 00 00 00    	je     13a <private_AES_set_encrypt_key+0x13a>
      f7:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 105 <private_AES_set_encrypt_key+0x105>
      fe:	ff 24 25 00 00 00 00 	jmpq   *0x0
			101: R_X86_64_32S	tase_springboard
     105:	8b 45 ec             	mov    -0x14(%rbp),%eax
     108:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
     10e:	3d 00 01 00 00       	cmp    $0x100,%eax
     113:	0f 84 21 00 00 00    	je     13a <private_AES_set_encrypt_key+0x13a>
     119:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 127 <private_AES_set_encrypt_key+0x127>
     120:	ff 24 25 00 00 00 00 	jmpq   *0x0
			123: R_X86_64_32S	tase_springboard
     127:	c4 63 01 22 7d fc 00 	vpinsrd $0x0,-0x4(%rbp),%xmm15,%xmm15
     12e:	c7 45 fc fe ff ff ff 	movl   $0xfffffffe,-0x4(%rbp)
     135:	e9 15 14 00 00       	jmpq   154f <private_AES_set_encrypt_key+0x154f>
     13a:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 148 <private_AES_set_encrypt_key+0x148>
     141:	ff 24 25 00 00 00 00 	jmpq   *0x0
			144: R_X86_64_32S	tase_springboard
     148:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     14c:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     152:	c4 63 81 22 7d d8 01 	vpinsrq $0x1,-0x28(%rbp),%xmm15,%xmm15
     159:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     15d:	8b 4d ec             	mov    -0x14(%rbp),%ecx
     160:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     165:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     16a:	c4 63 01 22 f9 00    	vpinsrd $0x0,%ecx,%xmm15,%xmm15
     170:	81 f9 80 00 00 00    	cmp    $0x80,%ecx
     176:	0f 85 31 00 00 00    	jne    1ad <private_AES_set_encrypt_key+0x1ad>
     17c:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 18a <private_AES_set_encrypt_key+0x18a>
     183:	ff 24 25 00 00 00 00 	jmpq   *0x0
			186: R_X86_64_32S	tase_springboard
     18a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     18e:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     194:	c4 63 01 22 b8 f0 00 	vpinsrd $0x2,0xf0(%rax),%xmm15,%xmm15
     19b:	00 00 02 
     19e:	c7 80 f0 00 00 00 0a 	movl   $0xa,0xf0(%rax)
     1a5:	00 00 00 
     1a8:	e9 92 00 00 00       	jmpq   23f <private_AES_set_encrypt_key+0x23f>
     1ad:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 1bb <private_AES_set_encrypt_key+0x1bb>
     1b4:	ff 24 25 00 00 00 00 	jmpq   *0x0
			1b7: R_X86_64_32S	tase_springboard
     1bb:	8b 45 ec             	mov    -0x14(%rbp),%eax
     1be:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
     1c4:	3d c0 00 00 00       	cmp    $0xc0,%eax
     1c9:	0f 85 31 00 00 00    	jne    200 <private_AES_set_encrypt_key+0x200>
     1cf:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 1dd <private_AES_set_encrypt_key+0x1dd>
     1d6:	ff 24 25 00 00 00 00 	jmpq   *0x0
			1d9: R_X86_64_32S	tase_springboard
     1dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     1e1:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     1e7:	c4 63 01 22 b8 f0 00 	vpinsrd $0x2,0xf0(%rax),%xmm15,%xmm15
     1ee:	00 00 02 
     1f1:	c7 80 f0 00 00 00 0c 	movl   $0xc,0xf0(%rax)
     1f8:	00 00 00 
     1fb:	e9 2c 00 00 00       	jmpq   22c <private_AES_set_encrypt_key+0x22c>
     200:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 20e <private_AES_set_encrypt_key+0x20e>
     207:	ff 24 25 00 00 00 00 	jmpq   *0x0
			20a: R_X86_64_32S	tase_springboard
     20e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     212:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     218:	c4 63 01 22 b8 f0 00 	vpinsrd $0x2,0xf0(%rax),%xmm15,%xmm15
     21f:	00 00 02 
     222:	c7 80 f0 00 00 00 0e 	movl   $0xe,0xf0(%rax)
     229:	00 00 00 
     22c:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 23a <private_AES_set_encrypt_key+0x23a>
     233:	ff 24 25 00 00 00 00 	jmpq   *0x0
			236: R_X86_64_32S	tase_springboard
     23a:	e9 00 00 00 00       	jmpq   23f <private_AES_set_encrypt_key+0x23f>
     23f:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 24d <private_AES_set_encrypt_key+0x24d>
     246:	ff 24 25 00 00 00 00 	jmpq   *0x0
			249: R_X86_64_32S	tase_springboard
     24d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     251:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     257:	4c 8d 30             	lea    (%rax),%r14
     25a:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     260:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     265:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     26c:	8a 08                	mov    (%rax),%cl
     26e:	0f b6 d1             	movzbl %cl,%edx
     271:	c1 e2 18             	shl    $0x18,%edx
     274:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     278:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     27d:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     282:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     288:	4c 8d 70 01          	lea    0x1(%rax),%r14
     28c:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     292:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     297:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     29e:	8a 48 01             	mov    0x1(%rax),%cl
     2a1:	0f b6 f1             	movzbl %cl,%esi
     2a4:	c1 e6 10             	shl    $0x10,%esi
     2a7:	31 f2                	xor    %esi,%edx
     2a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     2ad:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     2b2:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     2b7:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     2bd:	4c 8d 70 02          	lea    0x2(%rax),%r14
     2c1:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     2c7:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     2cc:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     2d3:	8a 48 02             	mov    0x2(%rax),%cl
     2d6:	0f b6 f1             	movzbl %cl,%esi
     2d9:	c1 e6 08             	shl    $0x8,%esi
     2dc:	31 f2                	xor    %esi,%edx
     2de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     2e2:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     2e7:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     2ec:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     2f2:	4c 8d 70 03          	lea    0x3(%rax),%r14
     2f6:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     2fc:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     301:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     308:	8a 48 03             	mov    0x3(%rax),%cl
     30b:	0f b6 f1             	movzbl %cl,%esi
     30e:	31 f2                	xor    %esi,%edx
     310:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     314:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     319:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     31e:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     324:	c4 63 01 22 38 02    	vpinsrd $0x2,(%rax),%xmm15,%xmm15
     32a:	89 10                	mov    %edx,(%rax)
     32c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     330:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     335:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     33a:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     340:	4c 8d 70 04          	lea    0x4(%rax),%r14
     344:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     34a:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     34f:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     356:	8a 48 04             	mov    0x4(%rax),%cl
     359:	0f b6 d1             	movzbl %cl,%edx
     35c:	c1 e2 18             	shl    $0x18,%edx
     35f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     363:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     368:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     36d:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     373:	4c 8d 70 05          	lea    0x5(%rax),%r14
     377:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     37d:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     382:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     389:	8a 48 05             	mov    0x5(%rax),%cl
     38c:	0f b6 f1             	movzbl %cl,%esi
     38f:	c1 e6 10             	shl    $0x10,%esi
     392:	31 f2                	xor    %esi,%edx
     394:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     398:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     39d:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     3a2:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     3a8:	4c 8d 70 06          	lea    0x6(%rax),%r14
     3ac:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     3b2:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     3b7:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     3be:	8a 48 06             	mov    0x6(%rax),%cl
     3c1:	0f b6 f1             	movzbl %cl,%esi
     3c4:	c1 e6 08             	shl    $0x8,%esi
     3c7:	31 f2                	xor    %esi,%edx
     3c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     3cd:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     3d2:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     3d7:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     3dd:	4c 8d 70 07          	lea    0x7(%rax),%r14
     3e1:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     3e7:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     3ec:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     3f3:	8a 48 07             	mov    0x7(%rax),%cl
     3f6:	0f b6 f1             	movzbl %cl,%esi
     3f9:	31 f2                	xor    %esi,%edx
     3fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     3ff:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     404:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     409:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     40f:	c4 63 01 22 78 04 02 	vpinsrd $0x2,0x4(%rax),%xmm15,%xmm15
     416:	89 50 04             	mov    %edx,0x4(%rax)
     419:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     41d:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     422:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     427:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     42d:	4c 8d 70 08          	lea    0x8(%rax),%r14
     431:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     437:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     43c:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     443:	8a 48 08             	mov    0x8(%rax),%cl
     446:	0f b6 d1             	movzbl %cl,%edx
     449:	c1 e2 18             	shl    $0x18,%edx
     44c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     450:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     455:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     45a:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     460:	4c 8d 70 09          	lea    0x9(%rax),%r14
     464:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     46a:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     46f:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     476:	8a 48 09             	mov    0x9(%rax),%cl
     479:	0f b6 f1             	movzbl %cl,%esi
     47c:	c1 e6 10             	shl    $0x10,%esi
     47f:	31 f2                	xor    %esi,%edx
     481:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     485:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     48a:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     48f:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     495:	4c 8d 70 0a          	lea    0xa(%rax),%r14
     499:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     49f:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     4a4:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     4ab:	8a 48 0a             	mov    0xa(%rax),%cl
     4ae:	0f b6 f1             	movzbl %cl,%esi
     4b1:	c1 e6 08             	shl    $0x8,%esi
     4b4:	31 f2                	xor    %esi,%edx
     4b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     4ba:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     4bf:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     4c4:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     4ca:	4c 8d 70 0b          	lea    0xb(%rax),%r14
     4ce:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     4d4:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     4d9:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     4e0:	8a 48 0b             	mov    0xb(%rax),%cl
     4e3:	0f b6 f1             	movzbl %cl,%esi
     4e6:	31 f2                	xor    %esi,%edx
     4e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     4ec:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     4f1:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     4f6:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     4fc:	c4 63 01 22 78 08 02 	vpinsrd $0x2,0x8(%rax),%xmm15,%xmm15
     503:	89 50 08             	mov    %edx,0x8(%rax)
     506:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     50a:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     50f:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     514:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     51a:	4c 8d 70 0c          	lea    0xc(%rax),%r14
     51e:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     524:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     529:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     530:	8a 48 0c             	mov    0xc(%rax),%cl
     533:	0f b6 d1             	movzbl %cl,%edx
     536:	c1 e2 18             	shl    $0x18,%edx
     539:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     53d:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     542:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     547:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     54d:	4c 8d 70 0d          	lea    0xd(%rax),%r14
     551:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     557:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     55c:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     563:	8a 48 0d             	mov    0xd(%rax),%cl
     566:	0f b6 f1             	movzbl %cl,%esi
     569:	c1 e6 10             	shl    $0x10,%esi
     56c:	31 f2                	xor    %esi,%edx
     56e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     572:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     577:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     57c:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     582:	4c 8d 70 0e          	lea    0xe(%rax),%r14
     586:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     58c:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     591:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     598:	8a 48 0e             	mov    0xe(%rax),%cl
     59b:	0f b6 f1             	movzbl %cl,%esi
     59e:	c1 e6 08             	shl    $0x8,%esi
     5a1:	31 f2                	xor    %esi,%edx
     5a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     5a7:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     5ac:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     5b1:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     5b7:	4c 8d 70 0f          	lea    0xf(%rax),%r14
     5bb:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     5c1:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     5c6:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     5cd:	8a 48 0f             	mov    0xf(%rax),%cl
     5d0:	0f b6 f1             	movzbl %cl,%esi
     5d3:	31 f2                	xor    %esi,%edx
     5d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     5d9:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     5de:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     5e3:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     5e9:	c4 63 01 22 78 0c 02 	vpinsrd $0x2,0xc(%rax),%xmm15,%xmm15
     5f0:	89 50 0c             	mov    %edx,0xc(%rax)
     5f3:	8b 55 ec             	mov    -0x14(%rbp),%edx
     5f6:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
     5fc:	81 fa 80 00 00 00    	cmp    $0x80,%edx
     602:	0f 85 ce 02 00 00    	jne    8d6 <private_AES_set_encrypt_key+0x8d6>
     608:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 616 <private_AES_set_encrypt_key+0x616>
     60f:	ff 24 25 00 00 00 00 	jmpq   *0x0
			612: R_X86_64_32S	tase_springboard
     616:	e9 00 00 00 00       	jmpq   61b <private_AES_set_encrypt_key+0x61b>
     61b:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 629 <private_AES_set_encrypt_key+0x629>
     622:	ff 24 25 00 00 00 00 	jmpq   *0x0
			625: R_X86_64_32S	tase_springboard
     629:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     62d:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     633:	8b 48 0c             	mov    0xc(%rax),%ecx
     636:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
     63c:	c4 63 01 22 7d d0 03 	vpinsrd $0x3,-0x30(%rbp),%xmm15,%xmm15
     643:	89 4d d0             	mov    %ecx,-0x30(%rbp)
     646:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     64a:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     64f:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     654:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     65a:	8b 08                	mov    (%rax),%ecx
     65c:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
     662:	8b 55 d0             	mov    -0x30(%rbp),%edx
     665:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
     66b:	c1 ea 10             	shr    $0x10,%edx
     66e:	81 e2 ff 00 00 00    	and    $0xff,%edx
     674:	89 d2                	mov    %edx,%edx
     676:	89 d0                	mov    %edx,%eax
     678:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			67b: R_X86_64_32S	.rodata
     67f:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     684:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     689:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
     68f:	81 e2 00 00 00 ff    	and    $0xff000000,%edx
     695:	31 d1                	xor    %edx,%ecx
     697:	8b 55 d0             	mov    -0x30(%rbp),%edx
     69a:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
     6a0:	c1 ea 08             	shr    $0x8,%edx
     6a3:	81 e2 ff 00 00 00    	and    $0xff,%edx
     6a9:	89 d2                	mov    %edx,%edx
     6ab:	89 d0                	mov    %edx,%eax
     6ad:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			6b0: R_X86_64_32S	.rodata+0x400
     6b4:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
     6ba:	81 e2 00 00 ff 00    	and    $0xff0000,%edx
     6c0:	31 d1                	xor    %edx,%ecx
     6c2:	8b 55 d0             	mov    -0x30(%rbp),%edx
     6c5:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
     6cb:	81 e2 ff 00 00 00    	and    $0xff,%edx
     6d1:	89 d2                	mov    %edx,%edx
     6d3:	89 d0                	mov    %edx,%eax
     6d5:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			6d8: R_X86_64_32S	.rodata+0x800
     6dc:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     6e1:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     6e6:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
     6ec:	81 e2 00 ff 00 00    	and    $0xff00,%edx
     6f2:	31 d1                	xor    %edx,%ecx
     6f4:	8b 55 d0             	mov    -0x30(%rbp),%edx
     6f7:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
     6fd:	c1 ea 18             	shr    $0x18,%edx
     700:	89 d2                	mov    %edx,%edx
     702:	89 d0                	mov    %edx,%eax
     704:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			707: R_X86_64_32S	.rodata+0xc00
     70b:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
     711:	81 e2 ff 00 00 00    	and    $0xff,%edx
     717:	31 d1                	xor    %edx,%ecx
     719:	8b 55 d4             	mov    -0x2c(%rbp),%edx
     71c:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
     722:	48 63 c2             	movslq %edx,%rax
     725:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			728: R_X86_64_32S	.rodata+0x1000
     72c:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     731:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     736:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
     73c:	31 d1                	xor    %edx,%ecx
     73e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     742:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
     748:	c4 63 01 22 78 10 01 	vpinsrd $0x1,0x10(%rax),%xmm15,%xmm15
     74f:	89 48 10             	mov    %ecx,0x10(%rax)
     752:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     756:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     75b:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     760:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     766:	8b 48 04             	mov    0x4(%rax),%ecx
     769:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
     76f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     773:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     778:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     77d:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     783:	8b 50 10             	mov    0x10(%rax),%edx
     786:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
     78c:	31 d1                	xor    %edx,%ecx
     78e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     792:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     797:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     79c:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     7a2:	c4 63 01 22 78 14 02 	vpinsrd $0x2,0x14(%rax),%xmm15,%xmm15
     7a9:	89 48 14             	mov    %ecx,0x14(%rax)
     7ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     7b0:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     7b5:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     7ba:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     7c0:	8b 48 08             	mov    0x8(%rax),%ecx
     7c3:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
     7c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     7cd:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     7d2:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     7d7:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     7dd:	8b 50 14             	mov    0x14(%rax),%edx
     7e0:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
     7e6:	31 d1                	xor    %edx,%ecx
     7e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     7ec:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     7f1:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     7f6:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     7fc:	c4 63 01 22 78 18 02 	vpinsrd $0x2,0x18(%rax),%xmm15,%xmm15
     803:	89 48 18             	mov    %ecx,0x18(%rax)
     806:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     80a:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     80f:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     814:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     81a:	8b 48 0c             	mov    0xc(%rax),%ecx
     81d:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
     823:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     827:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     82c:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     831:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     837:	8b 50 18             	mov    0x18(%rax),%edx
     83a:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
     840:	31 d1                	xor    %edx,%ecx
     842:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     846:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     84b:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     850:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     856:	c4 63 01 22 78 1c 02 	vpinsrd $0x2,0x1c(%rax),%xmm15,%xmm15
     85d:	89 48 1c             	mov    %ecx,0x1c(%rax)
     860:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
     863:	c4 63 01 22 f9 03    	vpinsrd $0x3,%ecx,%xmm15,%xmm15
     869:	83 c1 01             	add    $0x1,%ecx
     86c:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     871:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     876:	c4 63 01 22 7d d4 00 	vpinsrd $0x0,-0x2c(%rbp),%xmm15,%xmm15
     87d:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
     880:	83 f9 0a             	cmp    $0xa,%ecx
     883:	0f 85 21 00 00 00    	jne    8aa <private_AES_set_encrypt_key+0x8aa>
     889:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 897 <private_AES_set_encrypt_key+0x897>
     890:	ff 24 25 00 00 00 00 	jmpq   *0x0
			893: R_X86_64_32S	tase_springboard
     897:	c4 63 01 22 7d fc 00 	vpinsrd $0x0,-0x4(%rbp),%xmm15,%xmm15
     89e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
     8a5:	e9 a5 0c 00 00       	jmpq   154f <private_AES_set_encrypt_key+0x154f>
     8aa:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 8b8 <private_AES_set_encrypt_key+0x8b8>
     8b1:	ff 24 25 00 00 00 00 	jmpq   *0x0
			8b4: R_X86_64_32S	tase_springboard
     8b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     8bc:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     8c2:	48 83 c0 10          	add    $0x10,%rax
     8c6:	c4 63 81 22 7d d8 01 	vpinsrq $0x1,-0x28(%rbp),%xmm15,%xmm15
     8cd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     8d1:	e9 45 fd ff ff       	jmpq   61b <private_AES_set_encrypt_key+0x61b>
     8d6:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 8e4 <private_AES_set_encrypt_key+0x8e4>
     8dd:	ff 24 25 00 00 00 00 	jmpq   *0x0
			8e0: R_X86_64_32S	tase_springboard
     8e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     8e8:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     8ee:	4c 8d 70 10          	lea    0x10(%rax),%r14
     8f2:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     8f8:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     8fd:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     904:	8a 48 10             	mov    0x10(%rax),%cl
     907:	0f b6 d1             	movzbl %cl,%edx
     90a:	c1 e2 18             	shl    $0x18,%edx
     90d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     911:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     916:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     91b:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     921:	4c 8d 70 11          	lea    0x11(%rax),%r14
     925:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     92b:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     930:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     937:	8a 48 11             	mov    0x11(%rax),%cl
     93a:	0f b6 f1             	movzbl %cl,%esi
     93d:	c1 e6 10             	shl    $0x10,%esi
     940:	31 f2                	xor    %esi,%edx
     942:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     946:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     94b:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     950:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     956:	4c 8d 70 12          	lea    0x12(%rax),%r14
     95a:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     960:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     965:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     96c:	8a 48 12             	mov    0x12(%rax),%cl
     96f:	0f b6 f1             	movzbl %cl,%esi
     972:	c1 e6 08             	shl    $0x8,%esi
     975:	31 f2                	xor    %esi,%edx
     977:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     97b:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     980:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     985:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     98b:	4c 8d 70 13          	lea    0x13(%rax),%r14
     98f:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     995:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     99a:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     9a1:	8a 48 13             	mov    0x13(%rax),%cl
     9a4:	0f b6 f1             	movzbl %cl,%esi
     9a7:	31 f2                	xor    %esi,%edx
     9a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     9ad:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     9b2:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     9b7:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     9bd:	c4 63 01 22 78 10 02 	vpinsrd $0x2,0x10(%rax),%xmm15,%xmm15
     9c4:	89 50 10             	mov    %edx,0x10(%rax)
     9c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     9cb:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     9d0:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     9d5:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     9db:	4c 8d 70 14          	lea    0x14(%rax),%r14
     9df:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     9e5:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     9ea:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     9f1:	8a 48 14             	mov    0x14(%rax),%cl
     9f4:	0f b6 d1             	movzbl %cl,%edx
     9f7:	c1 e2 18             	shl    $0x18,%edx
     9fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     9fe:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     a03:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     a08:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     a0e:	4c 8d 70 15          	lea    0x15(%rax),%r14
     a12:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     a18:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     a1d:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     a24:	8a 48 15             	mov    0x15(%rax),%cl
     a27:	0f b6 f1             	movzbl %cl,%esi
     a2a:	c1 e6 10             	shl    $0x10,%esi
     a2d:	31 f2                	xor    %esi,%edx
     a2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     a33:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     a38:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     a3d:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     a43:	4c 8d 70 16          	lea    0x16(%rax),%r14
     a47:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     a4d:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     a52:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     a59:	8a 48 16             	mov    0x16(%rax),%cl
     a5c:	0f b6 f1             	movzbl %cl,%esi
     a5f:	c1 e6 08             	shl    $0x8,%esi
     a62:	31 f2                	xor    %esi,%edx
     a64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     a68:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     a6d:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     a72:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     a78:	4c 8d 70 17          	lea    0x17(%rax),%r14
     a7c:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     a82:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     a87:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     a8e:	8a 48 17             	mov    0x17(%rax),%cl
     a91:	0f b6 f1             	movzbl %cl,%esi
     a94:	31 f2                	xor    %esi,%edx
     a96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     a9a:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     a9f:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     aa4:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     aaa:	c4 63 01 22 78 14 02 	vpinsrd $0x2,0x14(%rax),%xmm15,%xmm15
     ab1:	89 50 14             	mov    %edx,0x14(%rax)
     ab4:	8b 55 ec             	mov    -0x14(%rbp),%edx
     ab7:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
     abd:	81 fa c0 00 00 00    	cmp    $0xc0,%edx
     ac3:	0f 85 82 03 00 00    	jne    e4b <private_AES_set_encrypt_key+0xe4b>
     ac9:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # ad7 <private_AES_set_encrypt_key+0xad7>
     ad0:	ff 24 25 00 00 00 00 	jmpq   *0x0
			ad3: R_X86_64_32S	tase_springboard
     ad7:	e9 00 00 00 00       	jmpq   adc <private_AES_set_encrypt_key+0xadc>
     adc:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # aea <private_AES_set_encrypt_key+0xaea>
     ae3:	ff 24 25 00 00 00 00 	jmpq   *0x0
			ae6: R_X86_64_32S	tase_springboard
     aea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     aee:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     af4:	8b 48 14             	mov    0x14(%rax),%ecx
     af7:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
     afd:	c4 63 01 22 7d d0 03 	vpinsrd $0x3,-0x30(%rbp),%xmm15,%xmm15
     b04:	89 4d d0             	mov    %ecx,-0x30(%rbp)
     b07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     b0b:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     b10:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     b15:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     b1b:	8b 08                	mov    (%rax),%ecx
     b1d:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
     b23:	8b 55 d0             	mov    -0x30(%rbp),%edx
     b26:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
     b2c:	c1 ea 10             	shr    $0x10,%edx
     b2f:	81 e2 ff 00 00 00    	and    $0xff,%edx
     b35:	89 d2                	mov    %edx,%edx
     b37:	89 d0                	mov    %edx,%eax
     b39:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			b3c: R_X86_64_32S	.rodata
     b40:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     b45:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     b4a:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
     b50:	81 e2 00 00 00 ff    	and    $0xff000000,%edx
     b56:	31 d1                	xor    %edx,%ecx
     b58:	8b 55 d0             	mov    -0x30(%rbp),%edx
     b5b:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
     b61:	c1 ea 08             	shr    $0x8,%edx
     b64:	81 e2 ff 00 00 00    	and    $0xff,%edx
     b6a:	89 d2                	mov    %edx,%edx
     b6c:	89 d0                	mov    %edx,%eax
     b6e:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			b71: R_X86_64_32S	.rodata+0x400
     b75:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
     b7b:	81 e2 00 00 ff 00    	and    $0xff0000,%edx
     b81:	31 d1                	xor    %edx,%ecx
     b83:	8b 55 d0             	mov    -0x30(%rbp),%edx
     b86:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
     b8c:	81 e2 ff 00 00 00    	and    $0xff,%edx
     b92:	89 d2                	mov    %edx,%edx
     b94:	89 d0                	mov    %edx,%eax
     b96:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			b99: R_X86_64_32S	.rodata+0x800
     b9d:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     ba2:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     ba7:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
     bad:	81 e2 00 ff 00 00    	and    $0xff00,%edx
     bb3:	31 d1                	xor    %edx,%ecx
     bb5:	8b 55 d0             	mov    -0x30(%rbp),%edx
     bb8:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
     bbe:	c1 ea 18             	shr    $0x18,%edx
     bc1:	89 d2                	mov    %edx,%edx
     bc3:	89 d0                	mov    %edx,%eax
     bc5:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			bc8: R_X86_64_32S	.rodata+0xc00
     bcc:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
     bd2:	81 e2 ff 00 00 00    	and    $0xff,%edx
     bd8:	31 d1                	xor    %edx,%ecx
     bda:	8b 55 d4             	mov    -0x2c(%rbp),%edx
     bdd:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
     be3:	48 63 c2             	movslq %edx,%rax
     be6:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			be9: R_X86_64_32S	.rodata+0x1000
     bed:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     bf2:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     bf7:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
     bfd:	31 d1                	xor    %edx,%ecx
     bff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     c03:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
     c09:	c4 63 01 22 78 18 01 	vpinsrd $0x1,0x18(%rax),%xmm15,%xmm15
     c10:	89 48 18             	mov    %ecx,0x18(%rax)
     c13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     c17:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     c1c:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     c21:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     c27:	8b 48 04             	mov    0x4(%rax),%ecx
     c2a:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
     c30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     c34:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     c39:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     c3e:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     c44:	8b 50 18             	mov    0x18(%rax),%edx
     c47:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
     c4d:	31 d1                	xor    %edx,%ecx
     c4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     c53:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     c58:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     c5d:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     c63:	c4 63 01 22 78 1c 02 	vpinsrd $0x2,0x1c(%rax),%xmm15,%xmm15
     c6a:	89 48 1c             	mov    %ecx,0x1c(%rax)
     c6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     c71:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     c76:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     c7b:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     c81:	8b 48 08             	mov    0x8(%rax),%ecx
     c84:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
     c8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     c8e:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     c93:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     c98:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     c9e:	8b 50 1c             	mov    0x1c(%rax),%edx
     ca1:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
     ca7:	31 d1                	xor    %edx,%ecx
     ca9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     cad:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     cb2:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     cb7:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     cbd:	c4 63 01 22 78 20 02 	vpinsrd $0x2,0x20(%rax),%xmm15,%xmm15
     cc4:	89 48 20             	mov    %ecx,0x20(%rax)
     cc7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     ccb:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     cd0:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     cd5:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     cdb:	8b 48 0c             	mov    0xc(%rax),%ecx
     cde:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
     ce4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     ce8:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     ced:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     cf2:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     cf8:	8b 50 20             	mov    0x20(%rax),%edx
     cfb:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
     d01:	31 d1                	xor    %edx,%ecx
     d03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     d07:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     d0c:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     d11:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     d17:	c4 63 01 22 78 24 02 	vpinsrd $0x2,0x24(%rax),%xmm15,%xmm15
     d1e:	89 48 24             	mov    %ecx,0x24(%rax)
     d21:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
     d24:	c4 63 01 22 f9 03    	vpinsrd $0x3,%ecx,%xmm15,%xmm15
     d2a:	83 c1 01             	add    $0x1,%ecx
     d2d:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     d32:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     d37:	c4 63 01 22 7d d4 00 	vpinsrd $0x0,-0x2c(%rbp),%xmm15,%xmm15
     d3e:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
     d41:	83 f9 08             	cmp    $0x8,%ecx
     d44:	0f 85 21 00 00 00    	jne    d6b <private_AES_set_encrypt_key+0xd6b>
     d4a:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # d58 <private_AES_set_encrypt_key+0xd58>
     d51:	ff 24 25 00 00 00 00 	jmpq   *0x0
			d54: R_X86_64_32S	tase_springboard
     d58:	c4 63 01 22 7d fc 00 	vpinsrd $0x0,-0x4(%rbp),%xmm15,%xmm15
     d5f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
     d66:	e9 e4 07 00 00       	jmpq   154f <private_AES_set_encrypt_key+0x154f>
     d6b:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # d79 <private_AES_set_encrypt_key+0xd79>
     d72:	ff 24 25 00 00 00 00 	jmpq   *0x0
			d75: R_X86_64_32S	tase_springboard
     d79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     d7d:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     d83:	8b 48 10             	mov    0x10(%rax),%ecx
     d86:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
     d8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     d90:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     d95:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     d9a:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     da0:	8b 50 24             	mov    0x24(%rax),%edx
     da3:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
     da9:	31 d1                	xor    %edx,%ecx
     dab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     daf:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     db4:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     db9:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     dbf:	c4 63 01 22 78 28 02 	vpinsrd $0x2,0x28(%rax),%xmm15,%xmm15
     dc6:	89 48 28             	mov    %ecx,0x28(%rax)
     dc9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     dcd:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     dd2:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     dd7:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     ddd:	8b 48 14             	mov    0x14(%rax),%ecx
     de0:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
     de6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     dea:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     def:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     df4:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     dfa:	8b 50 28             	mov    0x28(%rax),%edx
     dfd:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
     e03:	31 d1                	xor    %edx,%ecx
     e05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     e09:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     e0e:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     e13:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     e19:	c4 63 01 22 78 2c 02 	vpinsrd $0x2,0x2c(%rax),%xmm15,%xmm15
     e20:	89 48 2c             	mov    %ecx,0x2c(%rax)
     e23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     e27:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     e2c:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     e31:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     e37:	48 83 c0 18          	add    $0x18,%rax
     e3b:	c4 63 81 22 7d d8 01 	vpinsrq $0x1,-0x28(%rbp),%xmm15,%xmm15
     e42:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
     e46:	e9 91 fc ff ff       	jmpq   adc <private_AES_set_encrypt_key+0xadc>
     e4b:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # e59 <private_AES_set_encrypt_key+0xe59>
     e52:	ff 24 25 00 00 00 00 	jmpq   *0x0
			e55: R_X86_64_32S	tase_springboard
     e59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     e5d:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     e63:	4c 8d 70 18          	lea    0x18(%rax),%r14
     e67:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     e6d:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     e72:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     e79:	8a 48 18             	mov    0x18(%rax),%cl
     e7c:	0f b6 d1             	movzbl %cl,%edx
     e7f:	c1 e2 18             	shl    $0x18,%edx
     e82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     e86:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     e8b:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     e90:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     e96:	4c 8d 70 19          	lea    0x19(%rax),%r14
     e9a:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     ea0:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     ea5:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     eac:	8a 48 19             	mov    0x19(%rax),%cl
     eaf:	0f b6 f1             	movzbl %cl,%esi
     eb2:	c1 e6 10             	shl    $0x10,%esi
     eb5:	31 f2                	xor    %esi,%edx
     eb7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     ebb:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     ec0:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     ec5:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     ecb:	4c 8d 70 1a          	lea    0x1a(%rax),%r14
     ecf:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     ed5:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     eda:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     ee1:	8a 48 1a             	mov    0x1a(%rax),%cl
     ee4:	0f b6 f1             	movzbl %cl,%esi
     ee7:	c1 e6 08             	shl    $0x8,%esi
     eea:	31 f2                	xor    %esi,%edx
     eec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     ef0:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     ef5:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     efa:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     f00:	4c 8d 70 1b          	lea    0x1b(%rax),%r14
     f04:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     f0a:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     f0f:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     f16:	8a 48 1b             	mov    0x1b(%rax),%cl
     f19:	0f b6 f1             	movzbl %cl,%esi
     f1c:	31 f2                	xor    %esi,%edx
     f1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     f22:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     f27:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     f2c:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     f32:	c4 63 01 22 78 18 02 	vpinsrd $0x2,0x18(%rax),%xmm15,%xmm15
     f39:	89 50 18             	mov    %edx,0x18(%rax)
     f3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     f40:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     f45:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     f4a:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     f50:	4c 8d 70 1c          	lea    0x1c(%rax),%r14
     f54:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     f5a:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     f5f:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     f66:	8a 48 1c             	mov    0x1c(%rax),%cl
     f69:	0f b6 d1             	movzbl %cl,%edx
     f6c:	c1 e2 18             	shl    $0x18,%edx
     f6f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     f73:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     f78:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     f7d:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     f83:	4c 8d 70 1d          	lea    0x1d(%rax),%r14
     f87:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     f8d:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     f92:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     f99:	8a 48 1d             	mov    0x1d(%rax),%cl
     f9c:	0f b6 f1             	movzbl %cl,%esi
     f9f:	c1 e6 10             	shl    $0x10,%esi
     fa2:	31 f2                	xor    %esi,%edx
     fa4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     fa8:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     fad:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     fb2:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     fb8:	4c 8d 70 1e          	lea    0x1e(%rax),%r14
     fbc:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     fc2:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     fc7:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
     fce:	8a 48 1e             	mov    0x1e(%rax),%cl
     fd1:	0f b6 f1             	movzbl %cl,%esi
     fd4:	c1 e6 08             	shl    $0x8,%esi
     fd7:	31 f2                	xor    %esi,%edx
     fd9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
     fdd:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
     fe2:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
     fe7:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
     fed:	4c 8d 70 1f          	lea    0x1f(%rax),%r14
     ff1:	41 bf 01 00 00 00    	mov    $0x1,%r15d
     ff7:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
     ffc:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    1003:	8a 48 1f             	mov    0x1f(%rax),%cl
    1006:	0f b6 f1             	movzbl %cl,%esi
    1009:	31 f2                	xor    %esi,%edx
    100b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    100f:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1014:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1019:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    101f:	c4 63 01 22 78 1c 02 	vpinsrd $0x2,0x1c(%rax),%xmm15,%xmm15
    1026:	89 50 1c             	mov    %edx,0x1c(%rax)
    1029:	8b 55 ec             	mov    -0x14(%rbp),%edx
    102c:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    1032:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    1038:	0f 85 f5 04 00 00    	jne    1533 <private_AES_set_encrypt_key+0x1533>
    103e:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 104c <private_AES_set_encrypt_key+0x104c>
    1045:	ff 24 25 00 00 00 00 	jmpq   *0x0
			1048: R_X86_64_32S	tase_springboard
    104c:	e9 00 00 00 00       	jmpq   1051 <private_AES_set_encrypt_key+0x1051>
    1051:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 105f <private_AES_set_encrypt_key+0x105f>
    1058:	ff 24 25 00 00 00 00 	jmpq   *0x0
			105b: R_X86_64_32S	tase_springboard
    105f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1063:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1069:	8b 48 1c             	mov    0x1c(%rax),%ecx
    106c:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    1072:	c4 63 01 22 7d d0 03 	vpinsrd $0x3,-0x30(%rbp),%xmm15,%xmm15
    1079:	89 4d d0             	mov    %ecx,-0x30(%rbp)
    107c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1080:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1085:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    108a:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1090:	8b 08                	mov    (%rax),%ecx
    1092:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    1098:	8b 55 d0             	mov    -0x30(%rbp),%edx
    109b:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    10a1:	c1 ea 10             	shr    $0x10,%edx
    10a4:	81 e2 ff 00 00 00    	and    $0xff,%edx
    10aa:	89 d2                	mov    %edx,%edx
    10ac:	89 d0                	mov    %edx,%eax
    10ae:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			10b1: R_X86_64_32S	.rodata
    10b5:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    10ba:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    10bf:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    10c5:	81 e2 00 00 00 ff    	and    $0xff000000,%edx
    10cb:	31 d1                	xor    %edx,%ecx
    10cd:	8b 55 d0             	mov    -0x30(%rbp),%edx
    10d0:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    10d6:	c1 ea 08             	shr    $0x8,%edx
    10d9:	81 e2 ff 00 00 00    	and    $0xff,%edx
    10df:	89 d2                	mov    %edx,%edx
    10e1:	89 d0                	mov    %edx,%eax
    10e3:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			10e6: R_X86_64_32S	.rodata+0x400
    10ea:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    10f0:	81 e2 00 00 ff 00    	and    $0xff0000,%edx
    10f6:	31 d1                	xor    %edx,%ecx
    10f8:	8b 55 d0             	mov    -0x30(%rbp),%edx
    10fb:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    1101:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1107:	89 d2                	mov    %edx,%edx
    1109:	89 d0                	mov    %edx,%eax
    110b:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			110e: R_X86_64_32S	.rodata+0x800
    1112:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1117:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    111c:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    1122:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    1128:	31 d1                	xor    %edx,%ecx
    112a:	8b 55 d0             	mov    -0x30(%rbp),%edx
    112d:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    1133:	c1 ea 18             	shr    $0x18,%edx
    1136:	89 d2                	mov    %edx,%edx
    1138:	89 d0                	mov    %edx,%eax
    113a:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			113d: R_X86_64_32S	.rodata+0xc00
    1141:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    1147:	81 e2 ff 00 00 00    	and    $0xff,%edx
    114d:	31 d1                	xor    %edx,%ecx
    114f:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    1152:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    1158:	48 63 c2             	movslq %edx,%rax
    115b:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			115e: R_X86_64_32S	.rodata+0x1000
    1162:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1167:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    116c:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    1172:	31 d1                	xor    %edx,%ecx
    1174:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1178:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    117e:	c4 63 01 22 78 20 01 	vpinsrd $0x1,0x20(%rax),%xmm15,%xmm15
    1185:	89 48 20             	mov    %ecx,0x20(%rax)
    1188:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    118c:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1191:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1196:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    119c:	8b 48 04             	mov    0x4(%rax),%ecx
    119f:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    11a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    11a9:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    11ae:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    11b3:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    11b9:	8b 50 20             	mov    0x20(%rax),%edx
    11bc:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    11c2:	31 d1                	xor    %edx,%ecx
    11c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    11c8:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    11cd:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    11d2:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    11d8:	c4 63 01 22 78 24 02 	vpinsrd $0x2,0x24(%rax),%xmm15,%xmm15
    11df:	89 48 24             	mov    %ecx,0x24(%rax)
    11e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    11e6:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    11eb:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    11f0:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    11f6:	8b 48 08             	mov    0x8(%rax),%ecx
    11f9:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    11ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1203:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1208:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    120d:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1213:	8b 50 24             	mov    0x24(%rax),%edx
    1216:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    121c:	31 d1                	xor    %edx,%ecx
    121e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1222:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1227:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    122c:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1232:	c4 63 01 22 78 28 02 	vpinsrd $0x2,0x28(%rax),%xmm15,%xmm15
    1239:	89 48 28             	mov    %ecx,0x28(%rax)
    123c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1240:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1245:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    124a:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1250:	8b 48 0c             	mov    0xc(%rax),%ecx
    1253:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    1259:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    125d:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1262:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1267:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    126d:	8b 50 28             	mov    0x28(%rax),%edx
    1270:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    1276:	31 d1                	xor    %edx,%ecx
    1278:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    127c:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1281:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1286:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    128c:	c4 63 01 22 78 2c 02 	vpinsrd $0x2,0x2c(%rax),%xmm15,%xmm15
    1293:	89 48 2c             	mov    %ecx,0x2c(%rax)
    1296:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    1299:	c4 63 01 22 f9 03    	vpinsrd $0x3,%ecx,%xmm15,%xmm15
    129f:	83 c1 01             	add    $0x1,%ecx
    12a2:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    12a7:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    12ac:	c4 63 01 22 7d d4 00 	vpinsrd $0x0,-0x2c(%rbp),%xmm15,%xmm15
    12b3:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    12b6:	83 f9 07             	cmp    $0x7,%ecx
    12b9:	0f 85 21 00 00 00    	jne    12e0 <private_AES_set_encrypt_key+0x12e0>
    12bf:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 12cd <private_AES_set_encrypt_key+0x12cd>
    12c6:	ff 24 25 00 00 00 00 	jmpq   *0x0
			12c9: R_X86_64_32S	tase_springboard
    12cd:	c4 63 01 22 7d fc 00 	vpinsrd $0x0,-0x4(%rbp),%xmm15,%xmm15
    12d4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    12db:	e9 6f 02 00 00       	jmpq   154f <private_AES_set_encrypt_key+0x154f>
    12e0:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 12ee <private_AES_set_encrypt_key+0x12ee>
    12e7:	ff 24 25 00 00 00 00 	jmpq   *0x0
			12ea: R_X86_64_32S	tase_springboard
    12ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12f2:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    12f8:	8b 48 2c             	mov    0x2c(%rax),%ecx
    12fb:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    1301:	c4 63 01 22 7d d0 03 	vpinsrd $0x3,-0x30(%rbp),%xmm15,%xmm15
    1308:	89 4d d0             	mov    %ecx,-0x30(%rbp)
    130b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    130f:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1314:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1319:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    131f:	8b 48 10             	mov    0x10(%rax),%ecx
    1322:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    1328:	8b 55 d0             	mov    -0x30(%rbp),%edx
    132b:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    1331:	c1 ea 18             	shr    $0x18,%edx
    1334:	89 d2                	mov    %edx,%edx
    1336:	89 d0                	mov    %edx,%eax
    1338:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			133b: R_X86_64_32S	.rodata
    133f:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1344:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1349:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    134f:	81 e2 00 00 00 ff    	and    $0xff000000,%edx
    1355:	31 d1                	xor    %edx,%ecx
    1357:	8b 55 d0             	mov    -0x30(%rbp),%edx
    135a:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    1360:	c1 ea 10             	shr    $0x10,%edx
    1363:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1369:	89 d2                	mov    %edx,%edx
    136b:	89 d0                	mov    %edx,%eax
    136d:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1370: R_X86_64_32S	.rodata+0x400
    1374:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    137a:	81 e2 00 00 ff 00    	and    $0xff0000,%edx
    1380:	31 d1                	xor    %edx,%ecx
    1382:	8b 55 d0             	mov    -0x30(%rbp),%edx
    1385:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    138b:	c1 ea 08             	shr    $0x8,%edx
    138e:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1394:	89 d2                	mov    %edx,%edx
    1396:	89 d0                	mov    %edx,%eax
    1398:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			139b: R_X86_64_32S	.rodata+0x800
    139f:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    13a4:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    13a9:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    13af:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    13b5:	31 d1                	xor    %edx,%ecx
    13b7:	8b 55 d0             	mov    -0x30(%rbp),%edx
    13ba:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    13c0:	81 e2 ff 00 00 00    	and    $0xff,%edx
    13c6:	89 d2                	mov    %edx,%edx
    13c8:	89 d0                	mov    %edx,%eax
    13ca:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			13cd: R_X86_64_32S	.rodata+0xc00
    13d1:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    13d7:	81 e2 ff 00 00 00    	and    $0xff,%edx
    13dd:	31 d1                	xor    %edx,%ecx
    13df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    13e3:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    13e8:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    13ed:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    13f3:	c4 63 01 22 78 30 02 	vpinsrd $0x2,0x30(%rax),%xmm15,%xmm15
    13fa:	89 48 30             	mov    %ecx,0x30(%rax)
    13fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1401:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1406:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    140b:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1411:	8b 48 14             	mov    0x14(%rax),%ecx
    1414:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    141a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    141e:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1423:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1428:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    142e:	8b 50 30             	mov    0x30(%rax),%edx
    1431:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    1437:	31 d1                	xor    %edx,%ecx
    1439:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    143d:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1442:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1447:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    144d:	c4 63 01 22 78 34 02 	vpinsrd $0x2,0x34(%rax),%xmm15,%xmm15
    1454:	89 48 34             	mov    %ecx,0x34(%rax)
    1457:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    145b:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1460:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1465:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    146b:	8b 48 18             	mov    0x18(%rax),%ecx
    146e:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    1474:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1478:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    147d:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1482:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1488:	8b 50 34             	mov    0x34(%rax),%edx
    148b:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    1491:	31 d1                	xor    %edx,%ecx
    1493:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1497:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    149c:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    14a1:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    14a7:	c4 63 01 22 78 38 02 	vpinsrd $0x2,0x38(%rax),%xmm15,%xmm15
    14ae:	89 48 38             	mov    %ecx,0x38(%rax)
    14b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    14b5:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    14ba:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    14bf:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    14c5:	8b 48 1c             	mov    0x1c(%rax),%ecx
    14c8:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    14ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    14d2:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    14d7:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    14dc:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    14e2:	8b 50 38             	mov    0x38(%rax),%edx
    14e5:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    14eb:	31 d1                	xor    %edx,%ecx
    14ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    14f1:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    14f6:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    14fb:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1501:	c4 63 01 22 78 3c 02 	vpinsrd $0x2,0x3c(%rax),%xmm15,%xmm15
    1508:	89 48 3c             	mov    %ecx,0x3c(%rax)
    150b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    150f:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1514:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1519:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    151f:	48 83 c0 20          	add    $0x20,%rax
    1523:	c4 63 81 22 7d d8 01 	vpinsrq $0x1,-0x28(%rbp),%xmm15,%xmm15
    152a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    152e:	e9 1e fb ff ff       	jmpq   1051 <private_AES_set_encrypt_key+0x1051>
    1533:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 1541 <private_AES_set_encrypt_key+0x1541>
    153a:	ff 24 25 00 00 00 00 	jmpq   *0x0
			153d: R_X86_64_32S	tase_springboard
    1541:	c4 63 01 22 7d fc 00 	vpinsrd $0x0,-0x4(%rbp),%xmm15,%xmm15
    1548:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    154f:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 155d <private_AES_set_encrypt_key+0x155d>
    1556:	ff 24 25 00 00 00 00 	jmpq   *0x0
			1559: R_X86_64_32S	tase_springboard
    155d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1560:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    1566:	5d                   	pop    %rbp
    1567:	c4 63 81 22 fd 01    	vpinsrq $0x1,%rbp,%xmm15,%xmm15
    156d:	c3                   	retq   
    156e:	66 90                	xchg   %ax,%ax

0000000000001570 <private_AES_set_decrypt_key>:
    1570:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 157e <private_AES_set_decrypt_key+0xe>
    1577:	ff 24 25 00 00 00 00 	jmpq   *0x0
			157a: R_X86_64_32S	tase_springboard
    157e:	c4 63 81 22 7c 24 f8 	vpinsrq $0x0,-0x8(%rsp),%xmm15,%xmm15
    1585:	00 
    1586:	55                   	push   %rbp
    1587:	48 89 e5             	mov    %rsp,%rbp
    158a:	48 83 ec 40          	sub    $0x40,%rsp
    158e:	c4 63 81 22 7d f0 01 	vpinsrq $0x1,-0x10(%rbp),%xmm15,%xmm15
    1595:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    1599:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    159e:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    15a3:	c4 63 01 22 7d ec 00 	vpinsrd $0x0,-0x14(%rbp),%xmm15,%xmm15
    15aa:	89 75 ec             	mov    %esi,-0x14(%rbp)
    15ad:	c4 63 81 22 7d e0 01 	vpinsrq $0x1,-0x20(%rbp),%xmm15,%xmm15
    15b4:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    15b8:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
    15bc:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    15c1:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    15c6:	c4 63 81 22 ff 00    	vpinsrq $0x0,%rdi,%xmm15,%xmm15
    15cc:	8b 75 ec             	mov    -0x14(%rbp),%esi
    15cf:	c4 63 01 22 fe 02    	vpinsrd $0x2,%esi,%xmm15,%xmm15
    15d5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    15d9:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    15de:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    15e3:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    15e9:	e8 12 ea ff ff       	callq  0 <private_AES_set_encrypt_key>
    15ee:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 15fc <private_AES_set_decrypt_key+0x8c>
    15f5:	ff 24 25 00 00 00 00 	jmpq   *0x0
			15f8: R_X86_64_32S	tase_springboard
    15fc:	c4 63 01 22 7d cc 00 	vpinsrd $0x0,-0x34(%rbp),%xmm15,%xmm15
    1603:	89 45 cc             	mov    %eax,-0x34(%rbp)
    1606:	8b 45 cc             	mov    -0x34(%rbp),%eax
    1609:	c4 63 01 22 f8 01    	vpinsrd $0x1,%eax,%xmm15,%xmm15
    160f:	83 f8 00             	cmp    $0x0,%eax
    1612:	0f 8d 26 00 00 00    	jge    163e <private_AES_set_decrypt_key+0xce>
    1618:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 1626 <private_AES_set_decrypt_key+0xb6>
    161f:	ff 24 25 00 00 00 00 	jmpq   *0x0
			1622: R_X86_64_32S	tase_springboard
    1626:	8b 45 cc             	mov    -0x34(%rbp),%eax
    1629:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    162f:	c4 63 01 22 7d fc 01 	vpinsrd $0x1,-0x4(%rbp),%xmm15,%xmm15
    1636:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1639:	e9 24 0a 00 00       	jmpq   2062 <private_AES_set_decrypt_key+0xaf2>
    163e:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 164c <private_AES_set_decrypt_key+0xdc>
    1645:	ff 24 25 00 00 00 00 	jmpq   *0x0
			1648: R_X86_64_32S	tase_springboard
    164c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1650:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1656:	c4 63 81 22 7d d8 01 	vpinsrq $0x1,-0x28(%rbp),%xmm15,%xmm15
    165d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1661:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1666:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    166b:	c4 63 01 22 7d d4 00 	vpinsrd $0x0,-0x2c(%rbp),%xmm15,%xmm15
    1672:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    1679:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    167d:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1683:	8b 88 f0 00 00 00    	mov    0xf0(%rax),%ecx
    1689:	c4 63 01 22 f9 01    	vpinsrd $0x1,%ecx,%xmm15,%xmm15
    168f:	c1 e1 02             	shl    $0x2,%ecx
    1692:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1697:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    169c:	c4 63 01 22 7d d0 00 	vpinsrd $0x0,-0x30(%rbp),%xmm15,%xmm15
    16a3:	89 4d d0             	mov    %ecx,-0x30(%rbp)
    16a6:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 16b4 <private_AES_set_decrypt_key+0x144>
    16ad:	ff 24 25 00 00 00 00 	jmpq   *0x0
			16b0: R_X86_64_32S	tase_springboard
    16b4:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    16b7:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    16bd:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    16c0:	c4 63 01 22 f9 01    	vpinsrd $0x1,%ecx,%xmm15,%xmm15
    16c6:	39 c8                	cmp    %ecx,%eax
    16c8:	0f 8d 69 03 00 00    	jge    1a37 <private_AES_set_decrypt_key+0x4c7>
    16ce:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 16dc <private_AES_set_decrypt_key+0x16c>
    16d5:	ff 24 25 00 00 00 00 	jmpq   *0x0
			16d8: R_X86_64_32S	tase_springboard
    16dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    16e0:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    16e6:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    16e9:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    16ef:	48 63 d1             	movslq %ecx,%rdx
    16f2:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
    16f5:	c4 63 01 22 f9 03    	vpinsrd $0x3,%ecx,%xmm15,%xmm15
    16fb:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1700:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1705:	c4 63 01 22 7d c8 00 	vpinsrd $0x0,-0x38(%rbp),%xmm15,%xmm15
    170c:	89 4d c8             	mov    %ecx,-0x38(%rbp)
    170f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1713:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1719:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    171c:	c4 63 01 22 f9 01    	vpinsrd $0x1,%ecx,%xmm15,%xmm15
    1722:	48 63 d1             	movslq %ecx,%rdx
    1725:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
    1728:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    172d:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1732:	c4 63 01 22 f9 00    	vpinsrd $0x0,%ecx,%xmm15,%xmm15
    1738:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    173c:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1742:	8b 75 d4             	mov    -0x2c(%rbp),%esi
    1745:	c4 63 01 22 fe 01    	vpinsrd $0x1,%esi,%xmm15,%xmm15
    174b:	48 63 d6             	movslq %esi,%rdx
    174e:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1753:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1758:	c4 63 01 22 3c 90 00 	vpinsrd $0x0,(%rax,%rdx,4),%xmm15,%xmm15
    175f:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
    1762:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    1765:	c4 63 01 22 f9 01    	vpinsrd $0x1,%ecx,%xmm15,%xmm15
    176b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    176f:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1775:	8b 75 d0             	mov    -0x30(%rbp),%esi
    1778:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    177d:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1782:	c4 63 01 22 fe 00    	vpinsrd $0x0,%esi,%xmm15,%xmm15
    1788:	48 63 d6             	movslq %esi,%rdx
    178b:	c4 63 01 22 3c 90 01 	vpinsrd $0x1,(%rax,%rdx,4),%xmm15,%xmm15
    1792:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
    1795:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1799:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    179f:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    17a2:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    17a7:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    17ac:	c4 63 01 22 f9 00    	vpinsrd $0x0,%ecx,%xmm15,%xmm15
    17b2:	83 c1 01             	add    $0x1,%ecx
    17b5:	48 63 d1             	movslq %ecx,%rdx
    17b8:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
    17bb:	c4 63 01 22 f9 01    	vpinsrd $0x1,%ecx,%xmm15,%xmm15
    17c1:	c4 63 01 22 7d c8 02 	vpinsrd $0x2,-0x38(%rbp),%xmm15,%xmm15
    17c8:	89 4d c8             	mov    %ecx,-0x38(%rbp)
    17cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    17cf:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    17d4:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    17d9:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    17df:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    17e2:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    17e8:	83 c1 01             	add    $0x1,%ecx
    17eb:	48 63 d1             	movslq %ecx,%rdx
    17ee:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
    17f1:	c4 63 01 22 f9 03    	vpinsrd $0x3,%ecx,%xmm15,%xmm15
    17f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    17fb:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1800:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1805:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    180b:	8b 75 d4             	mov    -0x2c(%rbp),%esi
    180e:	c4 63 01 22 fe 02    	vpinsrd $0x2,%esi,%xmm15,%xmm15
    1814:	83 c6 01             	add    $0x1,%esi
    1817:	48 63 d6             	movslq %esi,%rdx
    181a:	c4 63 01 22 3c 90 03 	vpinsrd $0x3,(%rax,%rdx,4),%xmm15,%xmm15
    1821:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
    1824:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    1827:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    182c:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1831:	c4 63 01 22 f9 00    	vpinsrd $0x0,%ecx,%xmm15,%xmm15
    1837:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    183b:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1841:	8b 75 d0             	mov    -0x30(%rbp),%esi
    1844:	c4 63 01 22 fe 01    	vpinsrd $0x1,%esi,%xmm15,%xmm15
    184a:	83 c6 01             	add    $0x1,%esi
    184d:	48 63 d6             	movslq %esi,%rdx
    1850:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1855:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    185a:	c4 63 01 22 3c 90 00 	vpinsrd $0x0,(%rax,%rdx,4),%xmm15,%xmm15
    1861:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
    1864:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1868:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    186e:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    1871:	c4 63 01 22 f9 01    	vpinsrd $0x1,%ecx,%xmm15,%xmm15
    1877:	83 c1 02             	add    $0x2,%ecx
    187a:	48 63 d1             	movslq %ecx,%rdx
    187d:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
    1880:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1885:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    188a:	c4 63 01 22 f9 00    	vpinsrd $0x0,%ecx,%xmm15,%xmm15
    1890:	c4 63 01 22 7d c8 01 	vpinsrd $0x1,-0x38(%rbp),%xmm15,%xmm15
    1897:	89 4d c8             	mov    %ecx,-0x38(%rbp)
    189a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    189e:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    18a4:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    18a7:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    18ac:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    18b1:	c4 63 01 22 f9 00    	vpinsrd $0x0,%ecx,%xmm15,%xmm15
    18b7:	83 c1 02             	add    $0x2,%ecx
    18ba:	48 63 d1             	movslq %ecx,%rdx
    18bd:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
    18c0:	c4 63 01 22 f9 01    	vpinsrd $0x1,%ecx,%xmm15,%xmm15
    18c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18ca:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    18d0:	8b 75 d4             	mov    -0x2c(%rbp),%esi
    18d3:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    18d8:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    18dd:	c4 63 01 22 fe 00    	vpinsrd $0x0,%esi,%xmm15,%xmm15
    18e3:	83 c6 02             	add    $0x2,%esi
    18e6:	48 63 d6             	movslq %esi,%rdx
    18e9:	c4 63 01 22 3c 90 01 	vpinsrd $0x1,(%rax,%rdx,4),%xmm15,%xmm15
    18f0:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
    18f3:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    18f6:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    18fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1900:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1905:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    190a:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1910:	8b 75 d0             	mov    -0x30(%rbp),%esi
    1913:	c4 63 01 22 fe 02    	vpinsrd $0x2,%esi,%xmm15,%xmm15
    1919:	83 c6 02             	add    $0x2,%esi
    191c:	48 63 d6             	movslq %esi,%rdx
    191f:	c4 63 01 22 3c 90 03 	vpinsrd $0x3,(%rax,%rdx,4),%xmm15,%xmm15
    1926:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
    1929:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    192d:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1932:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1937:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    193d:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    1940:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    1946:	83 c1 03             	add    $0x3,%ecx
    1949:	48 63 d1             	movslq %ecx,%rdx
    194c:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
    194f:	c4 63 01 22 f9 03    	vpinsrd $0x3,%ecx,%xmm15,%xmm15
    1955:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    195a:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    195f:	c4 63 01 22 7d c8 00 	vpinsrd $0x0,-0x38(%rbp),%xmm15,%xmm15
    1966:	89 4d c8             	mov    %ecx,-0x38(%rbp)
    1969:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    196d:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1973:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    1976:	c4 63 01 22 f9 01    	vpinsrd $0x1,%ecx,%xmm15,%xmm15
    197c:	83 c1 03             	add    $0x3,%ecx
    197f:	48 63 d1             	movslq %ecx,%rdx
    1982:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
    1985:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    198a:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    198f:	c4 63 01 22 f9 00    	vpinsrd $0x0,%ecx,%xmm15,%xmm15
    1995:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1999:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    199f:	8b 75 d4             	mov    -0x2c(%rbp),%esi
    19a2:	c4 63 01 22 fe 01    	vpinsrd $0x1,%esi,%xmm15,%xmm15
    19a8:	83 c6 03             	add    $0x3,%esi
    19ab:	48 63 d6             	movslq %esi,%rdx
    19ae:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    19b3:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    19b8:	c4 63 01 22 3c 90 00 	vpinsrd $0x0,(%rax,%rdx,4),%xmm15,%xmm15
    19bf:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
    19c2:	8b 4d c8             	mov    -0x38(%rbp),%ecx
    19c5:	c4 63 01 22 f9 01    	vpinsrd $0x1,%ecx,%xmm15,%xmm15
    19cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    19cf:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    19d5:	8b 75 d0             	mov    -0x30(%rbp),%esi
    19d8:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    19dd:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    19e2:	c4 63 01 22 fe 00    	vpinsrd $0x0,%esi,%xmm15,%xmm15
    19e8:	83 c6 03             	add    $0x3,%esi
    19eb:	48 63 d6             	movslq %esi,%rdx
    19ee:	c4 63 01 22 3c 90 01 	vpinsrd $0x1,(%rax,%rdx,4),%xmm15,%xmm15
    19f5:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
    19f8:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 1a06 <private_AES_set_decrypt_key+0x496>
    19ff:	ff 24 25 00 00 00 00 	jmpq   *0x0
			1a02: R_X86_64_32S	tase_springboard
    1a06:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    1a09:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    1a0f:	83 c0 04             	add    $0x4,%eax
    1a12:	c4 63 01 22 7d d4 01 	vpinsrd $0x1,-0x2c(%rbp),%xmm15,%xmm15
    1a19:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    1a1c:	8b 45 d0             	mov    -0x30(%rbp),%eax
    1a1f:	c4 63 01 22 f8 02    	vpinsrd $0x2,%eax,%xmm15,%xmm15
    1a25:	83 e8 04             	sub    $0x4,%eax
    1a28:	c4 63 01 22 7d d0 03 	vpinsrd $0x3,-0x30(%rbp),%xmm15,%xmm15
    1a2f:	89 45 d0             	mov    %eax,-0x30(%rbp)
    1a32:	e9 6f fc ff ff       	jmpq   16a6 <private_AES_set_decrypt_key+0x136>
    1a37:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 1a45 <private_AES_set_decrypt_key+0x4d5>
    1a3e:	ff 24 25 00 00 00 00 	jmpq   *0x0
			1a41: R_X86_64_32S	tase_springboard
    1a45:	c4 63 01 22 7d d4 00 	vpinsrd $0x0,-0x2c(%rbp),%xmm15,%xmm15
    1a4c:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
    1a53:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 1a61 <private_AES_set_decrypt_key+0x4f1>
    1a5a:	ff 24 25 00 00 00 00 	jmpq   *0x0
			1a5d: R_X86_64_32S	tase_springboard
    1a61:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    1a64:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    1a6a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    1a6e:	c4 63 81 22 f9 01    	vpinsrq $0x1,%rcx,%xmm15,%xmm15
    1a74:	8b 91 f0 00 00 00    	mov    0xf0(%rcx),%edx
    1a7a:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    1a80:	39 d0                	cmp    %edx,%eax
    1a82:	0f 8d be 05 00 00    	jge    2046 <private_AES_set_decrypt_key+0xad6>
    1a88:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 1a96 <private_AES_set_decrypt_key+0x526>
    1a8f:	ff 24 25 00 00 00 00 	jmpq   *0x0
			1a92: R_X86_64_32S	tase_springboard
    1a96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1a9a:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1aa0:	48 83 c0 10          	add    $0x10,%rax
    1aa4:	c4 63 81 22 7d d8 01 	vpinsrq $0x1,-0x28(%rbp),%xmm15,%xmm15
    1aab:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1aaf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1ab3:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1ab8:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1abd:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1ac3:	8b 08                	mov    (%rax),%ecx
    1ac5:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    1acb:	c1 e9 18             	shr    $0x18,%ecx
    1ace:	89 c9                	mov    %ecx,%ecx
    1ad0:	89 c8                	mov    %ecx,%eax
    1ad2:	8b 0c 85 00 00 00 00 	mov    0x0(,%rax,4),%ecx
			1ad5: R_X86_64_32S	.rodata+0xc00
    1ad9:	c4 63 01 22 f9 03    	vpinsrd $0x3,%ecx,%xmm15,%xmm15
    1adf:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    1ae5:	89 c9                	mov    %ecx,%ecx
    1ae7:	89 c8                	mov    %ecx,%eax
    1ae9:	8b 0c 85 00 00 00 00 	mov    0x0(,%rax,4),%ecx
			1aec: R_X86_64_32S	.rodata+0x1030
    1af0:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1af5:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1afa:	c4 63 01 22 f9 00    	vpinsrd $0x0,%ecx,%xmm15,%xmm15
    1b00:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1b04:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1b0a:	8b 10                	mov    (%rax),%edx
    1b0c:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    1b12:	c1 ea 10             	shr    $0x10,%edx
    1b15:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1b1b:	89 d2                	mov    %edx,%edx
    1b1d:	89 d0                	mov    %edx,%eax
    1b1f:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1b22: R_X86_64_32S	.rodata+0xc00
    1b26:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1b2b:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1b30:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    1b36:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1b3c:	89 d2                	mov    %edx,%edx
    1b3e:	89 d0                	mov    %edx,%eax
    1b40:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1b43: R_X86_64_32S	.rodata+0x1430
    1b47:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    1b4d:	31 d1                	xor    %edx,%ecx
    1b4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1b53:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1b59:	8b 10                	mov    (%rax),%edx
    1b5b:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1b60:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1b65:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    1b6b:	c1 ea 08             	shr    $0x8,%edx
    1b6e:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1b74:	89 d2                	mov    %edx,%edx
    1b76:	89 d0                	mov    %edx,%eax
    1b78:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1b7b: R_X86_64_32S	.rodata+0xc00
    1b7f:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    1b85:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1b8b:	89 d2                	mov    %edx,%edx
    1b8d:	89 d0                	mov    %edx,%eax
    1b8f:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1b92: R_X86_64_32S	.rodata+0x1830
    1b96:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    1b9c:	31 d1                	xor    %edx,%ecx
    1b9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1ba2:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1ba7:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1bac:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1bb2:	8b 10                	mov    (%rax),%edx
    1bb4:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    1bba:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1bc0:	89 d2                	mov    %edx,%edx
    1bc2:	89 d0                	mov    %edx,%eax
    1bc4:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1bc7: R_X86_64_32S	.rodata+0xc00
    1bcb:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    1bd1:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1bd7:	89 d2                	mov    %edx,%edx
    1bd9:	89 d0                	mov    %edx,%eax
    1bdb:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1bde: R_X86_64_32S	.rodata+0x1c30
    1be2:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1be7:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1bec:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    1bf2:	31 d1                	xor    %edx,%ecx
    1bf4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1bf8:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1bfe:	c4 63 01 22 38 01    	vpinsrd $0x1,(%rax),%xmm15,%xmm15
    1c04:	89 08                	mov    %ecx,(%rax)
    1c06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1c0a:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1c0f:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1c14:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1c1a:	8b 48 04             	mov    0x4(%rax),%ecx
    1c1d:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    1c23:	c1 e9 18             	shr    $0x18,%ecx
    1c26:	89 c9                	mov    %ecx,%ecx
    1c28:	89 c8                	mov    %ecx,%eax
    1c2a:	8b 0c 85 00 00 00 00 	mov    0x0(,%rax,4),%ecx
			1c2d: R_X86_64_32S	.rodata+0xc00
    1c31:	c4 63 01 22 f9 03    	vpinsrd $0x3,%ecx,%xmm15,%xmm15
    1c37:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    1c3d:	89 c9                	mov    %ecx,%ecx
    1c3f:	89 c8                	mov    %ecx,%eax
    1c41:	8b 0c 85 00 00 00 00 	mov    0x0(,%rax,4),%ecx
			1c44: R_X86_64_32S	.rodata+0x1030
    1c48:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1c4d:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1c52:	c4 63 01 22 f9 00    	vpinsrd $0x0,%ecx,%xmm15,%xmm15
    1c58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1c5c:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1c62:	8b 50 04             	mov    0x4(%rax),%edx
    1c65:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    1c6b:	c1 ea 10             	shr    $0x10,%edx
    1c6e:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1c74:	89 d2                	mov    %edx,%edx
    1c76:	89 d0                	mov    %edx,%eax
    1c78:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1c7b: R_X86_64_32S	.rodata+0xc00
    1c7f:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1c84:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1c89:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    1c8f:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1c95:	89 d2                	mov    %edx,%edx
    1c97:	89 d0                	mov    %edx,%eax
    1c99:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1c9c: R_X86_64_32S	.rodata+0x1430
    1ca0:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    1ca6:	31 d1                	xor    %edx,%ecx
    1ca8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1cac:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1cb2:	8b 50 04             	mov    0x4(%rax),%edx
    1cb5:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1cba:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1cbf:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    1cc5:	c1 ea 08             	shr    $0x8,%edx
    1cc8:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1cce:	89 d2                	mov    %edx,%edx
    1cd0:	89 d0                	mov    %edx,%eax
    1cd2:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1cd5: R_X86_64_32S	.rodata+0xc00
    1cd9:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    1cdf:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1ce5:	89 d2                	mov    %edx,%edx
    1ce7:	89 d0                	mov    %edx,%eax
    1ce9:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1cec: R_X86_64_32S	.rodata+0x1830
    1cf0:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    1cf6:	31 d1                	xor    %edx,%ecx
    1cf8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1cfc:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1d01:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1d06:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1d0c:	8b 50 04             	mov    0x4(%rax),%edx
    1d0f:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    1d15:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1d1b:	89 d2                	mov    %edx,%edx
    1d1d:	89 d0                	mov    %edx,%eax
    1d1f:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1d22: R_X86_64_32S	.rodata+0xc00
    1d26:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    1d2c:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1d32:	89 d2                	mov    %edx,%edx
    1d34:	89 d0                	mov    %edx,%eax
    1d36:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1d39: R_X86_64_32S	.rodata+0x1c30
    1d3d:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1d42:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1d47:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    1d4d:	31 d1                	xor    %edx,%ecx
    1d4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1d53:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1d59:	c4 63 01 22 78 04 01 	vpinsrd $0x1,0x4(%rax),%xmm15,%xmm15
    1d60:	89 48 04             	mov    %ecx,0x4(%rax)
    1d63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1d67:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1d6c:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1d71:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1d77:	8b 48 08             	mov    0x8(%rax),%ecx
    1d7a:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    1d80:	c1 e9 18             	shr    $0x18,%ecx
    1d83:	89 c9                	mov    %ecx,%ecx
    1d85:	89 c8                	mov    %ecx,%eax
    1d87:	8b 0c 85 00 00 00 00 	mov    0x0(,%rax,4),%ecx
			1d8a: R_X86_64_32S	.rodata+0xc00
    1d8e:	c4 63 01 22 f9 03    	vpinsrd $0x3,%ecx,%xmm15,%xmm15
    1d94:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    1d9a:	89 c9                	mov    %ecx,%ecx
    1d9c:	89 c8                	mov    %ecx,%eax
    1d9e:	8b 0c 85 00 00 00 00 	mov    0x0(,%rax,4),%ecx
			1da1: R_X86_64_32S	.rodata+0x1030
    1da5:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1daa:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1daf:	c4 63 01 22 f9 00    	vpinsrd $0x0,%ecx,%xmm15,%xmm15
    1db5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1db9:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1dbf:	8b 50 08             	mov    0x8(%rax),%edx
    1dc2:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    1dc8:	c1 ea 10             	shr    $0x10,%edx
    1dcb:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1dd1:	89 d2                	mov    %edx,%edx
    1dd3:	89 d0                	mov    %edx,%eax
    1dd5:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1dd8: R_X86_64_32S	.rodata+0xc00
    1ddc:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1de1:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1de6:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    1dec:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1df2:	89 d2                	mov    %edx,%edx
    1df4:	89 d0                	mov    %edx,%eax
    1df6:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1df9: R_X86_64_32S	.rodata+0x1430
    1dfd:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    1e03:	31 d1                	xor    %edx,%ecx
    1e05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1e09:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1e0f:	8b 50 08             	mov    0x8(%rax),%edx
    1e12:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1e17:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1e1c:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    1e22:	c1 ea 08             	shr    $0x8,%edx
    1e25:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1e2b:	89 d2                	mov    %edx,%edx
    1e2d:	89 d0                	mov    %edx,%eax
    1e2f:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1e32: R_X86_64_32S	.rodata+0xc00
    1e36:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    1e3c:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1e42:	89 d2                	mov    %edx,%edx
    1e44:	89 d0                	mov    %edx,%eax
    1e46:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1e49: R_X86_64_32S	.rodata+0x1830
    1e4d:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    1e53:	31 d1                	xor    %edx,%ecx
    1e55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1e59:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1e5e:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1e63:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1e69:	8b 50 08             	mov    0x8(%rax),%edx
    1e6c:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    1e72:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1e78:	89 d2                	mov    %edx,%edx
    1e7a:	89 d0                	mov    %edx,%eax
    1e7c:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1e7f: R_X86_64_32S	.rodata+0xc00
    1e83:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    1e89:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1e8f:	89 d2                	mov    %edx,%edx
    1e91:	89 d0                	mov    %edx,%eax
    1e93:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1e96: R_X86_64_32S	.rodata+0x1c30
    1e9a:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1e9f:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1ea4:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    1eaa:	31 d1                	xor    %edx,%ecx
    1eac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1eb0:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1eb6:	c4 63 01 22 78 08 01 	vpinsrd $0x1,0x8(%rax),%xmm15,%xmm15
    1ebd:	89 48 08             	mov    %ecx,0x8(%rax)
    1ec0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1ec4:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1ec9:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1ece:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1ed4:	8b 48 0c             	mov    0xc(%rax),%ecx
    1ed7:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    1edd:	c1 e9 18             	shr    $0x18,%ecx
    1ee0:	89 c9                	mov    %ecx,%ecx
    1ee2:	89 c8                	mov    %ecx,%eax
    1ee4:	8b 0c 85 00 00 00 00 	mov    0x0(,%rax,4),%ecx
			1ee7: R_X86_64_32S	.rodata+0xc00
    1eeb:	c4 63 01 22 f9 03    	vpinsrd $0x3,%ecx,%xmm15,%xmm15
    1ef1:	81 e1 ff 00 00 00    	and    $0xff,%ecx
    1ef7:	89 c9                	mov    %ecx,%ecx
    1ef9:	89 c8                	mov    %ecx,%eax
    1efb:	8b 0c 85 00 00 00 00 	mov    0x0(,%rax,4),%ecx
			1efe: R_X86_64_32S	.rodata+0x1030
    1f02:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1f07:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1f0c:	c4 63 01 22 f9 00    	vpinsrd $0x0,%ecx,%xmm15,%xmm15
    1f12:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1f16:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1f1c:	8b 50 0c             	mov    0xc(%rax),%edx
    1f1f:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    1f25:	c1 ea 10             	shr    $0x10,%edx
    1f28:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1f2e:	89 d2                	mov    %edx,%edx
    1f30:	89 d0                	mov    %edx,%eax
    1f32:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1f35: R_X86_64_32S	.rodata+0xc00
    1f39:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1f3e:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1f43:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    1f49:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1f4f:	89 d2                	mov    %edx,%edx
    1f51:	89 d0                	mov    %edx,%eax
    1f53:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1f56: R_X86_64_32S	.rodata+0x1430
    1f5a:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    1f60:	31 d1                	xor    %edx,%ecx
    1f62:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1f66:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    1f6c:	8b 50 0c             	mov    0xc(%rax),%edx
    1f6f:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1f74:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1f79:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    1f7f:	c1 ea 08             	shr    $0x8,%edx
    1f82:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1f88:	89 d2                	mov    %edx,%edx
    1f8a:	89 d0                	mov    %edx,%eax
    1f8c:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1f8f: R_X86_64_32S	.rodata+0xc00
    1f93:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    1f99:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1f9f:	89 d2                	mov    %edx,%edx
    1fa1:	89 d0                	mov    %edx,%eax
    1fa3:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1fa6: R_X86_64_32S	.rodata+0x1830
    1faa:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    1fb0:	31 d1                	xor    %edx,%ecx
    1fb2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1fb6:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1fbb:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    1fc0:	c4 63 81 22 f8 00    	vpinsrq $0x0,%rax,%xmm15,%xmm15
    1fc6:	8b 50 0c             	mov    0xc(%rax),%edx
    1fc9:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    1fcf:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1fd5:	89 d2                	mov    %edx,%edx
    1fd7:	89 d0                	mov    %edx,%eax
    1fd9:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1fdc: R_X86_64_32S	.rodata+0xc00
    1fe0:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    1fe6:	81 e2 ff 00 00 00    	and    $0xff,%edx
    1fec:	89 d2                	mov    %edx,%edx
    1fee:	89 d0                	mov    %edx,%eax
    1ff0:	8b 14 85 00 00 00 00 	mov    0x0(,%rax,4),%edx
			1ff3: R_X86_64_32S	.rodata+0x1c30
    1ff7:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    1ffc:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2001:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    2007:	31 d1                	xor    %edx,%ecx
    2009:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    200d:	c4 63 81 22 f8 01    	vpinsrq $0x1,%rax,%xmm15,%xmm15
    2013:	c4 63 01 22 78 0c 01 	vpinsrd $0x1,0xc(%rax),%xmm15,%xmm15
    201a:	89 48 0c             	mov    %ecx,0xc(%rax)
    201d:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 202b <private_AES_set_decrypt_key+0xabb>
    2024:	ff 24 25 00 00 00 00 	jmpq   *0x0
			2027: R_X86_64_32S	tase_springboard
    202b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    202e:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    2034:	83 c0 01             	add    $0x1,%eax
    2037:	c4 63 01 22 7d d4 01 	vpinsrd $0x1,-0x2c(%rbp),%xmm15,%xmm15
    203e:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    2041:	e9 0d fa ff ff       	jmpq   1a53 <private_AES_set_decrypt_key+0x4e3>
    2046:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 2054 <private_AES_set_decrypt_key+0xae4>
    204d:	ff 24 25 00 00 00 00 	jmpq   *0x0
			2050: R_X86_64_32S	tase_springboard
    2054:	c4 63 01 22 7d fc 00 	vpinsrd $0x0,-0x4(%rbp),%xmm15,%xmm15
    205b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    2062:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 2070 <private_AES_set_decrypt_key+0xb00>
    2069:	ff 24 25 00 00 00 00 	jmpq   *0x0
			206c: R_X86_64_32S	tase_springboard
    2070:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2073:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    2079:	48 83 c4 40          	add    $0x40,%rsp
    207d:	5d                   	pop    %rbp
    207e:	c4 63 81 22 fd 01    	vpinsrq $0x1,%rbp,%xmm15,%xmm15
    2084:	c3                   	retq   
    2085:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    208c:	00 00 00 
    208f:	90                   	nop

0000000000002090 <AES_encrypt>:
    2090:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 209e <AES_encrypt+0xe>
    2097:	ff 24 25 00 00 00 00 	jmpq   *0x0
			209a: R_X86_64_32S	tase_springboard
    209e:	81 3c 25 00 00 00 00 	cmpl   $0x0,0x0
    20a5:	00 00 00 00 
			20a1: R_X86_64_32S	tase_springboard
			20a5: R_X86_64_32	sb_disabled
    20a9:	0f 85 00 00 00 00    	jne    20af <AES_encrypt+0x1f>
			20ab: R_X86_64_PC32	sb_modeled-0x4
    20af:	55                   	push   %rbp
    20b0:	48 89 e5             	mov    %rsp,%rbp
    20b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    20b7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    20bb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    20bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    20c3:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    20c7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    20cb:	8a 02                	mov    (%rdx),%al
    20cd:	0f b6 c8             	movzbl %al,%ecx
    20d0:	c1 e1 18             	shl    $0x18,%ecx
    20d3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    20d7:	8a 42 01             	mov    0x1(%rdx),%al
    20da:	44 0f b6 c0          	movzbl %al,%r8d
    20de:	41 c1 e0 10          	shl    $0x10,%r8d
    20e2:	44 31 c1             	xor    %r8d,%ecx
    20e5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    20e9:	8a 42 02             	mov    0x2(%rdx),%al
    20ec:	44 0f b6 c0          	movzbl %al,%r8d
    20f0:	41 c1 e0 08          	shl    $0x8,%r8d
    20f4:	44 31 c1             	xor    %r8d,%ecx
    20f7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    20fb:	8a 42 03             	mov    0x3(%rdx),%al
    20fe:	44 0f b6 c0          	movzbl %al,%r8d
    2102:	44 31 c1             	xor    %r8d,%ecx
    2105:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2109:	44 8b 02             	mov    (%rdx),%r8d
    210c:	44 31 c1             	xor    %r8d,%ecx
    210f:	89 4d dc             	mov    %ecx,-0x24(%rbp)
    2112:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2116:	8a 42 04             	mov    0x4(%rdx),%al
    2119:	0f b6 c8             	movzbl %al,%ecx
    211c:	c1 e1 18             	shl    $0x18,%ecx
    211f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2123:	8a 42 05             	mov    0x5(%rdx),%al
    2126:	44 0f b6 c0          	movzbl %al,%r8d
    212a:	41 c1 e0 10          	shl    $0x10,%r8d
    212e:	44 31 c1             	xor    %r8d,%ecx
    2131:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2135:	8a 42 06             	mov    0x6(%rdx),%al
    2138:	44 0f b6 c0          	movzbl %al,%r8d
    213c:	41 c1 e0 08          	shl    $0x8,%r8d
    2140:	44 31 c1             	xor    %r8d,%ecx
    2143:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2147:	8a 42 07             	mov    0x7(%rdx),%al
    214a:	44 0f b6 c0          	movzbl %al,%r8d
    214e:	44 31 c1             	xor    %r8d,%ecx
    2151:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2155:	44 8b 42 04          	mov    0x4(%rdx),%r8d
    2159:	44 31 c1             	xor    %r8d,%ecx
    215c:	89 4d d8             	mov    %ecx,-0x28(%rbp)
    215f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2163:	8a 42 08             	mov    0x8(%rdx),%al
    2166:	0f b6 c8             	movzbl %al,%ecx
    2169:	c1 e1 18             	shl    $0x18,%ecx
    216c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2170:	8a 42 09             	mov    0x9(%rdx),%al
    2173:	44 0f b6 c0          	movzbl %al,%r8d
    2177:	41 c1 e0 10          	shl    $0x10,%r8d
    217b:	44 31 c1             	xor    %r8d,%ecx
    217e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2182:	8a 42 0a             	mov    0xa(%rdx),%al
    2185:	44 0f b6 c0          	movzbl %al,%r8d
    2189:	41 c1 e0 08          	shl    $0x8,%r8d
    218d:	44 31 c1             	xor    %r8d,%ecx
    2190:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2194:	8a 42 0b             	mov    0xb(%rdx),%al
    2197:	44 0f b6 c0          	movzbl %al,%r8d
    219b:	44 31 c1             	xor    %r8d,%ecx
    219e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    21a2:	44 8b 42 08          	mov    0x8(%rdx),%r8d
    21a6:	44 31 c1             	xor    %r8d,%ecx
    21a9:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    21ac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    21b0:	8a 42 0c             	mov    0xc(%rdx),%al
    21b3:	0f b6 c8             	movzbl %al,%ecx
    21b6:	c1 e1 18             	shl    $0x18,%ecx
    21b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    21bd:	8a 42 0d             	mov    0xd(%rdx),%al
    21c0:	44 0f b6 c0          	movzbl %al,%r8d
    21c4:	41 c1 e0 10          	shl    $0x10,%r8d
    21c8:	44 31 c1             	xor    %r8d,%ecx
    21cb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    21cf:	8a 42 0e             	mov    0xe(%rdx),%al
    21d2:	44 0f b6 c0          	movzbl %al,%r8d
    21d6:	41 c1 e0 08          	shl    $0x8,%r8d
    21da:	44 31 c1             	xor    %r8d,%ecx
    21dd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    21e1:	8a 42 0f             	mov    0xf(%rdx),%al
    21e4:	44 0f b6 c0          	movzbl %al,%r8d
    21e8:	44 31 c1             	xor    %r8d,%ecx
    21eb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    21ef:	44 8b 42 0c          	mov    0xc(%rdx),%r8d
    21f3:	44 31 c1             	xor    %r8d,%ecx
    21f6:	89 4d d0             	mov    %ecx,-0x30(%rbp)
    21f9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    21fd:	8b 8a f0 00 00 00    	mov    0xf0(%rdx),%ecx
    2203:	c1 f9 01             	sar    $0x1,%ecx
    2206:	89 4d bc             	mov    %ecx,-0x44(%rbp)
    2209:	8b 45 dc             	mov    -0x24(%rbp),%eax
    220c:	c1 e8 18             	shr    $0x18,%eax
    220f:	89 c0                	mov    %eax,%eax
    2211:	89 c1                	mov    %eax,%ecx
    2213:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			2216: R_X86_64_32S	.rodata+0x800
    221a:	8b 55 d8             	mov    -0x28(%rbp),%edx
    221d:	c1 ea 10             	shr    $0x10,%edx
    2220:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2226:	89 d2                	mov    %edx,%edx
    2228:	89 d1                	mov    %edx,%ecx
    222a:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			222d: R_X86_64_32S	.rodata+0xc00
    2231:	31 d0                	xor    %edx,%eax
    2233:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    2236:	c1 ea 08             	shr    $0x8,%edx
    2239:	81 e2 ff 00 00 00    	and    $0xff,%edx
    223f:	89 d2                	mov    %edx,%edx
    2241:	89 d1                	mov    %edx,%ecx
    2243:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2246: R_X86_64_32S	.rodata
    224a:	31 d0                	xor    %edx,%eax
    224c:	8b 55 d0             	mov    -0x30(%rbp),%edx
    224f:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2255:	89 d2                	mov    %edx,%edx
    2257:	89 d1                	mov    %edx,%ecx
    2259:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			225c: R_X86_64_32S	.rodata+0x400
    2260:	31 d0                	xor    %edx,%eax
    2262:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    2266:	8b 51 10             	mov    0x10(%rcx),%edx
    2269:	31 d0                	xor    %edx,%eax
    226b:	89 45 cc             	mov    %eax,-0x34(%rbp)
    226e:	8b 45 d8             	mov    -0x28(%rbp),%eax
    2271:	c1 e8 18             	shr    $0x18,%eax
    2274:	89 c0                	mov    %eax,%eax
    2276:	89 c1                	mov    %eax,%ecx
    2278:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			227b: R_X86_64_32S	.rodata+0x800
    227f:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    2282:	c1 ea 10             	shr    $0x10,%edx
    2285:	81 e2 ff 00 00 00    	and    $0xff,%edx
    228b:	89 d2                	mov    %edx,%edx
    228d:	89 d1                	mov    %edx,%ecx
    228f:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2292: R_X86_64_32S	.rodata+0xc00
    2296:	31 d0                	xor    %edx,%eax
    2298:	8b 55 d0             	mov    -0x30(%rbp),%edx
    229b:	c1 ea 08             	shr    $0x8,%edx
    229e:	81 e2 ff 00 00 00    	and    $0xff,%edx
    22a4:	89 d2                	mov    %edx,%edx
    22a6:	89 d1                	mov    %edx,%ecx
    22a8:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			22ab: R_X86_64_32S	.rodata
    22af:	31 d0                	xor    %edx,%eax
    22b1:	8b 55 dc             	mov    -0x24(%rbp),%edx
    22b4:	81 e2 ff 00 00 00    	and    $0xff,%edx
    22ba:	89 d2                	mov    %edx,%edx
    22bc:	89 d1                	mov    %edx,%ecx
    22be:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			22c1: R_X86_64_32S	.rodata+0x400
    22c5:	31 d0                	xor    %edx,%eax
    22c7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    22cb:	8b 51 14             	mov    0x14(%rcx),%edx
    22ce:	31 d0                	xor    %edx,%eax
    22d0:	89 45 c8             	mov    %eax,-0x38(%rbp)
    22d3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    22d6:	c1 e8 18             	shr    $0x18,%eax
    22d9:	89 c0                	mov    %eax,%eax
    22db:	89 c1                	mov    %eax,%ecx
    22dd:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			22e0: R_X86_64_32S	.rodata+0x800
    22e4:	8b 55 d0             	mov    -0x30(%rbp),%edx
    22e7:	c1 ea 10             	shr    $0x10,%edx
    22ea:	81 e2 ff 00 00 00    	and    $0xff,%edx
    22f0:	89 d2                	mov    %edx,%edx
    22f2:	89 d1                	mov    %edx,%ecx
    22f4:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			22f7: R_X86_64_32S	.rodata+0xc00
    22fb:	31 d0                	xor    %edx,%eax
    22fd:	8b 55 dc             	mov    -0x24(%rbp),%edx
    2300:	c1 ea 08             	shr    $0x8,%edx
    2303:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2309:	89 d2                	mov    %edx,%edx
    230b:	89 d1                	mov    %edx,%ecx
    230d:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2310: R_X86_64_32S	.rodata
    2314:	31 d0                	xor    %edx,%eax
    2316:	8b 55 d8             	mov    -0x28(%rbp),%edx
    2319:	81 e2 ff 00 00 00    	and    $0xff,%edx
    231f:	89 d2                	mov    %edx,%edx
    2321:	89 d1                	mov    %edx,%ecx
    2323:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2326: R_X86_64_32S	.rodata+0x400
    232a:	31 d0                	xor    %edx,%eax
    232c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    2330:	8b 51 18             	mov    0x18(%rcx),%edx
    2333:	31 d0                	xor    %edx,%eax
    2335:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    2338:	8b 45 d0             	mov    -0x30(%rbp),%eax
    233b:	c1 e8 18             	shr    $0x18,%eax
    233e:	89 c0                	mov    %eax,%eax
    2340:	89 c1                	mov    %eax,%ecx
    2342:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			2345: R_X86_64_32S	.rodata+0x800
    2349:	8b 55 dc             	mov    -0x24(%rbp),%edx
    234c:	c1 ea 10             	shr    $0x10,%edx
    234f:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2355:	89 d2                	mov    %edx,%edx
    2357:	89 d1                	mov    %edx,%ecx
    2359:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			235c: R_X86_64_32S	.rodata+0xc00
    2360:	31 d0                	xor    %edx,%eax
    2362:	8b 55 d8             	mov    -0x28(%rbp),%edx
    2365:	c1 ea 08             	shr    $0x8,%edx
    2368:	81 e2 ff 00 00 00    	and    $0xff,%edx
    236e:	89 d2                	mov    %edx,%edx
    2370:	89 d1                	mov    %edx,%ecx
    2372:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2375: R_X86_64_32S	.rodata
    2379:	31 d0                	xor    %edx,%eax
    237b:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    237e:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2384:	89 d2                	mov    %edx,%edx
    2386:	89 d1                	mov    %edx,%ecx
    2388:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			238b: R_X86_64_32S	.rodata+0x400
    238f:	31 d0                	xor    %edx,%eax
    2391:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    2395:	8b 51 1c             	mov    0x1c(%rcx),%edx
    2398:	31 d0                	xor    %edx,%eax
    239a:	89 45 c0             	mov    %eax,-0x40(%rbp)
    239d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    23a1:	48 83 c1 20          	add    $0x20,%rcx
    23a5:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    23a9:	8b 45 bc             	mov    -0x44(%rbp),%eax
    23ac:	83 c0 ff             	add    $0xffffffff,%eax
    23af:	89 45 bc             	mov    %eax,-0x44(%rbp)
    23b2:	83 f8 00             	cmp    $0x0,%eax
    23b5:	0f 85 05 00 00 00    	jne    23c0 <AES_encrypt+0x330>
    23bb:	e9 98 01 00 00       	jmpq   2558 <AES_encrypt+0x4c8>
    23c0:	8b 45 cc             	mov    -0x34(%rbp),%eax
    23c3:	c1 e8 18             	shr    $0x18,%eax
    23c6:	89 c0                	mov    %eax,%eax
    23c8:	89 c1                	mov    %eax,%ecx
    23ca:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			23cd: R_X86_64_32S	.rodata+0x800
    23d1:	8b 55 c8             	mov    -0x38(%rbp),%edx
    23d4:	c1 ea 10             	shr    $0x10,%edx
    23d7:	81 e2 ff 00 00 00    	and    $0xff,%edx
    23dd:	89 d2                	mov    %edx,%edx
    23df:	89 d1                	mov    %edx,%ecx
    23e1:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			23e4: R_X86_64_32S	.rodata+0xc00
    23e8:	31 d0                	xor    %edx,%eax
    23ea:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    23ed:	c1 ea 08             	shr    $0x8,%edx
    23f0:	81 e2 ff 00 00 00    	and    $0xff,%edx
    23f6:	89 d2                	mov    %edx,%edx
    23f8:	89 d1                	mov    %edx,%ecx
    23fa:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			23fd: R_X86_64_32S	.rodata
    2401:	31 d0                	xor    %edx,%eax
    2403:	8b 55 c0             	mov    -0x40(%rbp),%edx
    2406:	81 e2 ff 00 00 00    	and    $0xff,%edx
    240c:	89 d2                	mov    %edx,%edx
    240e:	89 d1                	mov    %edx,%ecx
    2410:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2413: R_X86_64_32S	.rodata+0x400
    2417:	31 d0                	xor    %edx,%eax
    2419:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    241d:	8b 11                	mov    (%rcx),%edx
    241f:	31 d0                	xor    %edx,%eax
    2421:	89 45 dc             	mov    %eax,-0x24(%rbp)
    2424:	8b 45 c8             	mov    -0x38(%rbp),%eax
    2427:	c1 e8 18             	shr    $0x18,%eax
    242a:	89 c0                	mov    %eax,%eax
    242c:	89 c1                	mov    %eax,%ecx
    242e:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			2431: R_X86_64_32S	.rodata+0x800
    2435:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    2438:	c1 ea 10             	shr    $0x10,%edx
    243b:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2441:	89 d2                	mov    %edx,%edx
    2443:	89 d1                	mov    %edx,%ecx
    2445:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2448: R_X86_64_32S	.rodata+0xc00
    244c:	31 d0                	xor    %edx,%eax
    244e:	8b 55 c0             	mov    -0x40(%rbp),%edx
    2451:	c1 ea 08             	shr    $0x8,%edx
    2454:	81 e2 ff 00 00 00    	and    $0xff,%edx
    245a:	89 d2                	mov    %edx,%edx
    245c:	89 d1                	mov    %edx,%ecx
    245e:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2461: R_X86_64_32S	.rodata
    2465:	31 d0                	xor    %edx,%eax
    2467:	8b 55 cc             	mov    -0x34(%rbp),%edx
    246a:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2470:	89 d2                	mov    %edx,%edx
    2472:	89 d1                	mov    %edx,%ecx
    2474:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2477: R_X86_64_32S	.rodata+0x400
    247b:	31 d0                	xor    %edx,%eax
    247d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    2481:	8b 51 04             	mov    0x4(%rcx),%edx
    2484:	31 d0                	xor    %edx,%eax
    2486:	89 45 d8             	mov    %eax,-0x28(%rbp)
    2489:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    248c:	c1 e8 18             	shr    $0x18,%eax
    248f:	89 c0                	mov    %eax,%eax
    2491:	89 c1                	mov    %eax,%ecx
    2493:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			2496: R_X86_64_32S	.rodata+0x800
    249a:	8b 55 c0             	mov    -0x40(%rbp),%edx
    249d:	c1 ea 10             	shr    $0x10,%edx
    24a0:	81 e2 ff 00 00 00    	and    $0xff,%edx
    24a6:	89 d2                	mov    %edx,%edx
    24a8:	89 d1                	mov    %edx,%ecx
    24aa:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			24ad: R_X86_64_32S	.rodata+0xc00
    24b1:	31 d0                	xor    %edx,%eax
    24b3:	8b 55 cc             	mov    -0x34(%rbp),%edx
    24b6:	c1 ea 08             	shr    $0x8,%edx
    24b9:	81 e2 ff 00 00 00    	and    $0xff,%edx
    24bf:	89 d2                	mov    %edx,%edx
    24c1:	89 d1                	mov    %edx,%ecx
    24c3:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			24c6: R_X86_64_32S	.rodata
    24ca:	31 d0                	xor    %edx,%eax
    24cc:	8b 55 c8             	mov    -0x38(%rbp),%edx
    24cf:	81 e2 ff 00 00 00    	and    $0xff,%edx
    24d5:	89 d2                	mov    %edx,%edx
    24d7:	89 d1                	mov    %edx,%ecx
    24d9:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			24dc: R_X86_64_32S	.rodata+0x400
    24e0:	31 d0                	xor    %edx,%eax
    24e2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    24e6:	8b 51 08             	mov    0x8(%rcx),%edx
    24e9:	31 d0                	xor    %edx,%eax
    24eb:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    24ee:	8b 45 c0             	mov    -0x40(%rbp),%eax
    24f1:	c1 e8 18             	shr    $0x18,%eax
    24f4:	89 c0                	mov    %eax,%eax
    24f6:	89 c1                	mov    %eax,%ecx
    24f8:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			24fb: R_X86_64_32S	.rodata+0x800
    24ff:	8b 55 cc             	mov    -0x34(%rbp),%edx
    2502:	c1 ea 10             	shr    $0x10,%edx
    2505:	81 e2 ff 00 00 00    	and    $0xff,%edx
    250b:	89 d2                	mov    %edx,%edx
    250d:	89 d1                	mov    %edx,%ecx
    250f:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2512: R_X86_64_32S	.rodata+0xc00
    2516:	31 d0                	xor    %edx,%eax
    2518:	8b 55 c8             	mov    -0x38(%rbp),%edx
    251b:	c1 ea 08             	shr    $0x8,%edx
    251e:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2524:	89 d2                	mov    %edx,%edx
    2526:	89 d1                	mov    %edx,%ecx
    2528:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			252b: R_X86_64_32S	.rodata
    252f:	31 d0                	xor    %edx,%eax
    2531:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    2534:	81 e2 ff 00 00 00    	and    $0xff,%edx
    253a:	89 d2                	mov    %edx,%edx
    253c:	89 d1                	mov    %edx,%ecx
    253e:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2541: R_X86_64_32S	.rodata+0x400
    2545:	31 d0                	xor    %edx,%eax
    2547:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    254b:	8b 51 0c             	mov    0xc(%rcx),%edx
    254e:	31 d0                	xor    %edx,%eax
    2550:	89 45 d0             	mov    %eax,-0x30(%rbp)
    2553:	e9 b1 fc ff ff       	jmpq   2209 <AES_encrypt+0x179>
    2558:	8b 45 cc             	mov    -0x34(%rbp),%eax
    255b:	c1 e8 18             	shr    $0x18,%eax
    255e:	89 c0                	mov    %eax,%eax
    2560:	89 c1                	mov    %eax,%ecx
    2562:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			2565: R_X86_64_32S	.rodata
    2569:	25 00 00 00 ff       	and    $0xff000000,%eax
    256e:	8b 55 c8             	mov    -0x38(%rbp),%edx
    2571:	c1 ea 10             	shr    $0x10,%edx
    2574:	81 e2 ff 00 00 00    	and    $0xff,%edx
    257a:	89 d2                	mov    %edx,%edx
    257c:	89 d1                	mov    %edx,%ecx
    257e:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2581: R_X86_64_32S	.rodata+0x400
    2585:	81 e2 00 00 ff 00    	and    $0xff0000,%edx
    258b:	31 d0                	xor    %edx,%eax
    258d:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    2590:	c1 ea 08             	shr    $0x8,%edx
    2593:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2599:	89 d2                	mov    %edx,%edx
    259b:	89 d1                	mov    %edx,%ecx
    259d:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			25a0: R_X86_64_32S	.rodata+0x800
    25a4:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    25aa:	31 d0                	xor    %edx,%eax
    25ac:	8b 55 c0             	mov    -0x40(%rbp),%edx
    25af:	81 e2 ff 00 00 00    	and    $0xff,%edx
    25b5:	89 d2                	mov    %edx,%edx
    25b7:	89 d1                	mov    %edx,%ecx
    25b9:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			25bc: R_X86_64_32S	.rodata+0xc00
    25c0:	81 e2 ff 00 00 00    	and    $0xff,%edx
    25c6:	31 d0                	xor    %edx,%eax
    25c8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    25cc:	8b 11                	mov    (%rcx),%edx
    25ce:	31 d0                	xor    %edx,%eax
    25d0:	89 45 dc             	mov    %eax,-0x24(%rbp)
    25d3:	8b 45 dc             	mov    -0x24(%rbp),%eax
    25d6:	c1 e8 18             	shr    $0x18,%eax
    25d9:	40 88 c6             	mov    %al,%sil
    25dc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    25e0:	40 88 31             	mov    %sil,(%rcx)
    25e3:	8b 45 dc             	mov    -0x24(%rbp),%eax
    25e6:	c1 e8 10             	shr    $0x10,%eax
    25e9:	40 88 c6             	mov    %al,%sil
    25ec:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    25f0:	40 88 71 01          	mov    %sil,0x1(%rcx)
    25f4:	8b 45 dc             	mov    -0x24(%rbp),%eax
    25f7:	c1 e8 08             	shr    $0x8,%eax
    25fa:	40 88 c6             	mov    %al,%sil
    25fd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2601:	40 88 71 02          	mov    %sil,0x2(%rcx)
    2605:	8b 45 dc             	mov    -0x24(%rbp),%eax
    2608:	40 88 c6             	mov    %al,%sil
    260b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    260f:	40 88 71 03          	mov    %sil,0x3(%rcx)
    2613:	8b 45 c8             	mov    -0x38(%rbp),%eax
    2616:	c1 e8 18             	shr    $0x18,%eax
    2619:	89 c0                	mov    %eax,%eax
    261b:	89 c1                	mov    %eax,%ecx
    261d:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			2620: R_X86_64_32S	.rodata
    2624:	25 00 00 00 ff       	and    $0xff000000,%eax
    2629:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    262c:	c1 ea 10             	shr    $0x10,%edx
    262f:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2635:	89 d2                	mov    %edx,%edx
    2637:	89 d1                	mov    %edx,%ecx
    2639:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			263c: R_X86_64_32S	.rodata+0x400
    2640:	81 e2 00 00 ff 00    	and    $0xff0000,%edx
    2646:	31 d0                	xor    %edx,%eax
    2648:	8b 55 c0             	mov    -0x40(%rbp),%edx
    264b:	c1 ea 08             	shr    $0x8,%edx
    264e:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2654:	89 d2                	mov    %edx,%edx
    2656:	89 d1                	mov    %edx,%ecx
    2658:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			265b: R_X86_64_32S	.rodata+0x800
    265f:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    2665:	31 d0                	xor    %edx,%eax
    2667:	8b 55 cc             	mov    -0x34(%rbp),%edx
    266a:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2670:	89 d2                	mov    %edx,%edx
    2672:	89 d1                	mov    %edx,%ecx
    2674:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2677: R_X86_64_32S	.rodata+0xc00
    267b:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2681:	31 d0                	xor    %edx,%eax
    2683:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    2687:	8b 51 04             	mov    0x4(%rcx),%edx
    268a:	31 d0                	xor    %edx,%eax
    268c:	89 45 d8             	mov    %eax,-0x28(%rbp)
    268f:	8b 45 d8             	mov    -0x28(%rbp),%eax
    2692:	c1 e8 18             	shr    $0x18,%eax
    2695:	40 88 c6             	mov    %al,%sil
    2698:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    269c:	40 88 71 04          	mov    %sil,0x4(%rcx)
    26a0:	8b 45 d8             	mov    -0x28(%rbp),%eax
    26a3:	c1 e8 10             	shr    $0x10,%eax
    26a6:	40 88 c6             	mov    %al,%sil
    26a9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    26ad:	40 88 71 05          	mov    %sil,0x5(%rcx)
    26b1:	8b 45 d8             	mov    -0x28(%rbp),%eax
    26b4:	c1 e8 08             	shr    $0x8,%eax
    26b7:	40 88 c6             	mov    %al,%sil
    26ba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    26be:	40 88 71 06          	mov    %sil,0x6(%rcx)
    26c2:	8b 45 d8             	mov    -0x28(%rbp),%eax
    26c5:	40 88 c6             	mov    %al,%sil
    26c8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    26cc:	40 88 71 07          	mov    %sil,0x7(%rcx)
    26d0:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    26d3:	c1 e8 18             	shr    $0x18,%eax
    26d6:	89 c0                	mov    %eax,%eax
    26d8:	89 c1                	mov    %eax,%ecx
    26da:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			26dd: R_X86_64_32S	.rodata
    26e1:	25 00 00 00 ff       	and    $0xff000000,%eax
    26e6:	8b 55 c0             	mov    -0x40(%rbp),%edx
    26e9:	c1 ea 10             	shr    $0x10,%edx
    26ec:	81 e2 ff 00 00 00    	and    $0xff,%edx
    26f2:	89 d2                	mov    %edx,%edx
    26f4:	89 d1                	mov    %edx,%ecx
    26f6:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			26f9: R_X86_64_32S	.rodata+0x400
    26fd:	81 e2 00 00 ff 00    	and    $0xff0000,%edx
    2703:	31 d0                	xor    %edx,%eax
    2705:	8b 55 cc             	mov    -0x34(%rbp),%edx
    2708:	c1 ea 08             	shr    $0x8,%edx
    270b:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2711:	89 d2                	mov    %edx,%edx
    2713:	89 d1                	mov    %edx,%ecx
    2715:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2718: R_X86_64_32S	.rodata+0x800
    271c:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    2722:	31 d0                	xor    %edx,%eax
    2724:	8b 55 c8             	mov    -0x38(%rbp),%edx
    2727:	81 e2 ff 00 00 00    	and    $0xff,%edx
    272d:	89 d2                	mov    %edx,%edx
    272f:	89 d1                	mov    %edx,%ecx
    2731:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2734: R_X86_64_32S	.rodata+0xc00
    2738:	81 e2 ff 00 00 00    	and    $0xff,%edx
    273e:	31 d0                	xor    %edx,%eax
    2740:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    2744:	8b 51 08             	mov    0x8(%rcx),%edx
    2747:	31 d0                	xor    %edx,%eax
    2749:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    274c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    274f:	c1 e8 18             	shr    $0x18,%eax
    2752:	40 88 c6             	mov    %al,%sil
    2755:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2759:	40 88 71 08          	mov    %sil,0x8(%rcx)
    275d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2760:	c1 e8 10             	shr    $0x10,%eax
    2763:	40 88 c6             	mov    %al,%sil
    2766:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    276a:	40 88 71 09          	mov    %sil,0x9(%rcx)
    276e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2771:	c1 e8 08             	shr    $0x8,%eax
    2774:	40 88 c6             	mov    %al,%sil
    2777:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    277b:	40 88 71 0a          	mov    %sil,0xa(%rcx)
    277f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2782:	40 88 c6             	mov    %al,%sil
    2785:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2789:	40 88 71 0b          	mov    %sil,0xb(%rcx)
    278d:	8b 45 c0             	mov    -0x40(%rbp),%eax
    2790:	c1 e8 18             	shr    $0x18,%eax
    2793:	89 c0                	mov    %eax,%eax
    2795:	89 c1                	mov    %eax,%ecx
    2797:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			279a: R_X86_64_32S	.rodata
    279e:	25 00 00 00 ff       	and    $0xff000000,%eax
    27a3:	8b 55 cc             	mov    -0x34(%rbp),%edx
    27a6:	c1 ea 10             	shr    $0x10,%edx
    27a9:	81 e2 ff 00 00 00    	and    $0xff,%edx
    27af:	89 d2                	mov    %edx,%edx
    27b1:	89 d1                	mov    %edx,%ecx
    27b3:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			27b6: R_X86_64_32S	.rodata+0x400
    27ba:	81 e2 00 00 ff 00    	and    $0xff0000,%edx
    27c0:	31 d0                	xor    %edx,%eax
    27c2:	8b 55 c8             	mov    -0x38(%rbp),%edx
    27c5:	c1 ea 08             	shr    $0x8,%edx
    27c8:	81 e2 ff 00 00 00    	and    $0xff,%edx
    27ce:	89 d2                	mov    %edx,%edx
    27d0:	89 d1                	mov    %edx,%ecx
    27d2:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			27d5: R_X86_64_32S	.rodata+0x800
    27d9:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    27df:	31 d0                	xor    %edx,%eax
    27e1:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    27e4:	81 e2 ff 00 00 00    	and    $0xff,%edx
    27ea:	89 d2                	mov    %edx,%edx
    27ec:	89 d1                	mov    %edx,%ecx
    27ee:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			27f1: R_X86_64_32S	.rodata+0xc00
    27f5:	81 e2 ff 00 00 00    	and    $0xff,%edx
    27fb:	31 d0                	xor    %edx,%eax
    27fd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    2801:	8b 51 0c             	mov    0xc(%rcx),%edx
    2804:	31 d0                	xor    %edx,%eax
    2806:	89 45 d0             	mov    %eax,-0x30(%rbp)
    2809:	8b 45 d0             	mov    -0x30(%rbp),%eax
    280c:	c1 e8 18             	shr    $0x18,%eax
    280f:	40 88 c6             	mov    %al,%sil
    2812:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2816:	40 88 71 0c          	mov    %sil,0xc(%rcx)
    281a:	8b 45 d0             	mov    -0x30(%rbp),%eax
    281d:	c1 e8 10             	shr    $0x10,%eax
    2820:	40 88 c6             	mov    %al,%sil
    2823:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2827:	40 88 71 0d          	mov    %sil,0xd(%rcx)
    282b:	8b 45 d0             	mov    -0x30(%rbp),%eax
    282e:	c1 e8 08             	shr    $0x8,%eax
    2831:	40 88 c6             	mov    %al,%sil
    2834:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2838:	40 88 71 0e          	mov    %sil,0xe(%rcx)
    283c:	8b 45 d0             	mov    -0x30(%rbp),%eax
    283f:	40 88 c6             	mov    %al,%sil
    2842:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2846:	40 88 71 0f          	mov    %sil,0xf(%rcx)
    284a:	5d                   	pop    %rbp
    284b:	c3                   	retq   
    284c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002850 <AES_decrypt>:
    2850:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 285e <AES_decrypt+0xe>
    2857:	ff 24 25 00 00 00 00 	jmpq   *0x0
			285a: R_X86_64_32S	tase_springboard
    285e:	c4 63 81 22 7c 24 f8 	vpinsrq $0x0,-0x8(%rsp),%xmm15,%xmm15
    2865:	00 
    2866:	55                   	push   %rbp
    2867:	48 89 e5             	mov    %rsp,%rbp
    286a:	c4 63 81 22 7d f8 01 	vpinsrq $0x1,-0x8(%rbp),%xmm15,%xmm15
    2871:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2875:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    287a:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    287f:	c4 63 81 22 7d f0 00 	vpinsrq $0x0,-0x10(%rbp),%xmm15,%xmm15
    2886:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    288a:	c4 63 81 22 7d e8 01 	vpinsrq $0x1,-0x18(%rbp),%xmm15,%xmm15
    2891:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    2895:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2899:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    289e:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    28a3:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    28a9:	c4 63 81 22 7d e0 01 	vpinsrq $0x1,-0x20(%rbp),%xmm15,%xmm15
    28b0:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    28b4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    28b8:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    28bd:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    28c2:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    28c8:	4c 8d 32             	lea    (%rdx),%r14
    28cb:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    28d1:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    28d6:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    28dd:	8a 02                	mov    (%rdx),%al
    28df:	0f b6 c8             	movzbl %al,%ecx
    28e2:	c1 e1 18             	shl    $0x18,%ecx
    28e5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    28e9:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    28ee:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    28f3:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    28f9:	4c 8d 72 01          	lea    0x1(%rdx),%r14
    28fd:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    2903:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    2908:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    290f:	8a 42 01             	mov    0x1(%rdx),%al
    2912:	44 0f b6 c0          	movzbl %al,%r8d
    2916:	41 c1 e0 10          	shl    $0x10,%r8d
    291a:	44 31 c1             	xor    %r8d,%ecx
    291d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2921:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2926:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    292b:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2931:	4c 8d 72 02          	lea    0x2(%rdx),%r14
    2935:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    293b:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    2940:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    2947:	8a 42 02             	mov    0x2(%rdx),%al
    294a:	44 0f b6 c0          	movzbl %al,%r8d
    294e:	41 c1 e0 08          	shl    $0x8,%r8d
    2952:	44 31 c1             	xor    %r8d,%ecx
    2955:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2959:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    295e:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2963:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2969:	4c 8d 72 03          	lea    0x3(%rdx),%r14
    296d:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    2973:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    2978:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    297f:	8a 42 03             	mov    0x3(%rdx),%al
    2982:	44 0f b6 c0          	movzbl %al,%r8d
    2986:	44 31 c1             	xor    %r8d,%ecx
    2989:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    298d:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2992:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2997:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    299d:	44 8b 02             	mov    (%rdx),%r8d
    29a0:	c4 43 01 22 f8 02    	vpinsrd $0x2,%r8d,%xmm15,%xmm15
    29a6:	44 31 c1             	xor    %r8d,%ecx
    29a9:	c4 63 01 22 7d dc 03 	vpinsrd $0x3,-0x24(%rbp),%xmm15,%xmm15
    29b0:	89 4d dc             	mov    %ecx,-0x24(%rbp)
    29b3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    29b7:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    29bc:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    29c1:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    29c7:	4c 8d 72 04          	lea    0x4(%rdx),%r14
    29cb:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    29d1:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    29d6:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    29dd:	8a 42 04             	mov    0x4(%rdx),%al
    29e0:	0f b6 c8             	movzbl %al,%ecx
    29e3:	c1 e1 18             	shl    $0x18,%ecx
    29e6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    29ea:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    29ef:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    29f4:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    29fa:	4c 8d 72 05          	lea    0x5(%rdx),%r14
    29fe:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    2a04:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    2a09:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    2a10:	8a 42 05             	mov    0x5(%rdx),%al
    2a13:	44 0f b6 c0          	movzbl %al,%r8d
    2a17:	41 c1 e0 10          	shl    $0x10,%r8d
    2a1b:	44 31 c1             	xor    %r8d,%ecx
    2a1e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2a22:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2a27:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2a2c:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2a32:	4c 8d 72 06          	lea    0x6(%rdx),%r14
    2a36:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    2a3c:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    2a41:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    2a48:	8a 42 06             	mov    0x6(%rdx),%al
    2a4b:	44 0f b6 c0          	movzbl %al,%r8d
    2a4f:	41 c1 e0 08          	shl    $0x8,%r8d
    2a53:	44 31 c1             	xor    %r8d,%ecx
    2a56:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2a5a:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2a5f:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2a64:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2a6a:	4c 8d 72 07          	lea    0x7(%rdx),%r14
    2a6e:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    2a74:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    2a79:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    2a80:	8a 42 07             	mov    0x7(%rdx),%al
    2a83:	44 0f b6 c0          	movzbl %al,%r8d
    2a87:	44 31 c1             	xor    %r8d,%ecx
    2a8a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2a8e:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2a93:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2a98:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2a9e:	44 8b 42 04          	mov    0x4(%rdx),%r8d
    2aa2:	c4 43 01 22 f8 02    	vpinsrd $0x2,%r8d,%xmm15,%xmm15
    2aa8:	44 31 c1             	xor    %r8d,%ecx
    2aab:	c4 63 01 22 7d d8 03 	vpinsrd $0x3,-0x28(%rbp),%xmm15,%xmm15
    2ab2:	89 4d d8             	mov    %ecx,-0x28(%rbp)
    2ab5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2ab9:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2abe:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2ac3:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2ac9:	4c 8d 72 08          	lea    0x8(%rdx),%r14
    2acd:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    2ad3:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    2ad8:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    2adf:	8a 42 08             	mov    0x8(%rdx),%al
    2ae2:	0f b6 c8             	movzbl %al,%ecx
    2ae5:	c1 e1 18             	shl    $0x18,%ecx
    2ae8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2aec:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2af1:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2af6:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2afc:	4c 8d 72 09          	lea    0x9(%rdx),%r14
    2b00:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    2b06:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    2b0b:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    2b12:	8a 42 09             	mov    0x9(%rdx),%al
    2b15:	44 0f b6 c0          	movzbl %al,%r8d
    2b19:	41 c1 e0 10          	shl    $0x10,%r8d
    2b1d:	44 31 c1             	xor    %r8d,%ecx
    2b20:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2b24:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2b29:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2b2e:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2b34:	4c 8d 72 0a          	lea    0xa(%rdx),%r14
    2b38:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    2b3e:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    2b43:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    2b4a:	8a 42 0a             	mov    0xa(%rdx),%al
    2b4d:	44 0f b6 c0          	movzbl %al,%r8d
    2b51:	41 c1 e0 08          	shl    $0x8,%r8d
    2b55:	44 31 c1             	xor    %r8d,%ecx
    2b58:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2b5c:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2b61:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2b66:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2b6c:	4c 8d 72 0b          	lea    0xb(%rdx),%r14
    2b70:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    2b76:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    2b7b:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    2b82:	8a 42 0b             	mov    0xb(%rdx),%al
    2b85:	44 0f b6 c0          	movzbl %al,%r8d
    2b89:	44 31 c1             	xor    %r8d,%ecx
    2b8c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2b90:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2b95:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2b9a:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2ba0:	44 8b 42 08          	mov    0x8(%rdx),%r8d
    2ba4:	c4 43 01 22 f8 02    	vpinsrd $0x2,%r8d,%xmm15,%xmm15
    2baa:	44 31 c1             	xor    %r8d,%ecx
    2bad:	c4 63 01 22 7d d4 03 	vpinsrd $0x3,-0x2c(%rbp),%xmm15,%xmm15
    2bb4:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    2bb7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2bbb:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2bc0:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2bc5:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2bcb:	4c 8d 72 0c          	lea    0xc(%rdx),%r14
    2bcf:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    2bd5:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    2bda:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    2be1:	8a 42 0c             	mov    0xc(%rdx),%al
    2be4:	0f b6 c8             	movzbl %al,%ecx
    2be7:	c1 e1 18             	shl    $0x18,%ecx
    2bea:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2bee:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2bf3:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2bf8:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2bfe:	4c 8d 72 0d          	lea    0xd(%rdx),%r14
    2c02:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    2c08:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    2c0d:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    2c14:	8a 42 0d             	mov    0xd(%rdx),%al
    2c17:	44 0f b6 c0          	movzbl %al,%r8d
    2c1b:	41 c1 e0 10          	shl    $0x10,%r8d
    2c1f:	44 31 c1             	xor    %r8d,%ecx
    2c22:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2c26:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2c2b:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2c30:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2c36:	4c 8d 72 0e          	lea    0xe(%rdx),%r14
    2c3a:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    2c40:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    2c45:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    2c4c:	8a 42 0e             	mov    0xe(%rdx),%al
    2c4f:	44 0f b6 c0          	movzbl %al,%r8d
    2c53:	41 c1 e0 08          	shl    $0x8,%r8d
    2c57:	44 31 c1             	xor    %r8d,%ecx
    2c5a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2c5e:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2c63:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2c68:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2c6e:	4c 8d 72 0f          	lea    0xf(%rdx),%r14
    2c72:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    2c78:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    2c7d:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    2c84:	8a 42 0f             	mov    0xf(%rdx),%al
    2c87:	44 0f b6 c0          	movzbl %al,%r8d
    2c8b:	44 31 c1             	xor    %r8d,%ecx
    2c8e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2c92:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2c97:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2c9c:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2ca2:	44 8b 42 0c          	mov    0xc(%rdx),%r8d
    2ca6:	c4 43 01 22 f8 02    	vpinsrd $0x2,%r8d,%xmm15,%xmm15
    2cac:	44 31 c1             	xor    %r8d,%ecx
    2caf:	c4 63 01 22 7d d0 03 	vpinsrd $0x3,-0x30(%rbp),%xmm15,%xmm15
    2cb6:	89 4d d0             	mov    %ecx,-0x30(%rbp)
    2cb9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2cbd:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2cc2:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2cc7:	c4 63 81 22 fa 00    	vpinsrq $0x0,%rdx,%xmm15,%xmm15
    2ccd:	8b 8a f0 00 00 00    	mov    0xf0(%rdx),%ecx
    2cd3:	c4 63 01 22 f9 02    	vpinsrd $0x2,%ecx,%xmm15,%xmm15
    2cd9:	c1 f9 01             	sar    $0x1,%ecx
    2cdc:	c4 63 01 22 7d bc 03 	vpinsrd $0x3,-0x44(%rbp),%xmm15,%xmm15
    2ce3:	89 4d bc             	mov    %ecx,-0x44(%rbp)
    2ce6:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 2cf4 <AES_decrypt+0x4a4>
    2ced:	ff 24 25 00 00 00 00 	jmpq   *0x0
			2cf0: R_X86_64_32S	tase_springboard
    2cf4:	8b 45 dc             	mov    -0x24(%rbp),%eax
    2cf7:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    2cfd:	c1 e8 18             	shr    $0x18,%eax
    2d00:	89 c0                	mov    %eax,%eax
    2d02:	89 c1                	mov    %eax,%ecx
    2d04:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			2d07: R_X86_64_32S	.rodata+0x1030
    2d0b:	c4 63 01 22 f8 01    	vpinsrd $0x1,%eax,%xmm15,%xmm15
    2d11:	8b 55 d0             	mov    -0x30(%rbp),%edx
    2d14:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    2d1a:	c1 ea 10             	shr    $0x10,%edx
    2d1d:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2d23:	89 d2                	mov    %edx,%edx
    2d25:	89 d1                	mov    %edx,%ecx
    2d27:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2d2a: R_X86_64_32S	.rodata+0x1430
    2d2e:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    2d34:	31 d0                	xor    %edx,%eax
    2d36:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    2d39:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2d3e:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2d43:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    2d49:	c1 ea 08             	shr    $0x8,%edx
    2d4c:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2d52:	89 d2                	mov    %edx,%edx
    2d54:	89 d1                	mov    %edx,%ecx
    2d56:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2d59: R_X86_64_32S	.rodata+0x1830
    2d5d:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    2d63:	31 d0                	xor    %edx,%eax
    2d65:	8b 55 d8             	mov    -0x28(%rbp),%edx
    2d68:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    2d6e:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2d74:	89 d2                	mov    %edx,%edx
    2d76:	89 d1                	mov    %edx,%ecx
    2d78:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2d7b: R_X86_64_32S	.rodata+0x1c30
    2d7f:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    2d85:	31 d0                	xor    %edx,%eax
    2d87:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    2d8b:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2d90:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2d95:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    2d9b:	8b 51 10             	mov    0x10(%rcx),%edx
    2d9e:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    2da4:	31 d0                	xor    %edx,%eax
    2da6:	c4 63 01 22 7d cc 03 	vpinsrd $0x3,-0x34(%rbp),%xmm15,%xmm15
    2dad:	89 45 cc             	mov    %eax,-0x34(%rbp)
    2db0:	8b 45 d8             	mov    -0x28(%rbp),%eax
    2db3:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2db8:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2dbd:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    2dc3:	c1 e8 18             	shr    $0x18,%eax
    2dc6:	89 c0                	mov    %eax,%eax
    2dc8:	89 c1                	mov    %eax,%ecx
    2dca:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			2dcd: R_X86_64_32S	.rodata+0x1030
    2dd1:	c4 63 01 22 f8 01    	vpinsrd $0x1,%eax,%xmm15,%xmm15
    2dd7:	8b 55 dc             	mov    -0x24(%rbp),%edx
    2dda:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    2de0:	c1 ea 10             	shr    $0x10,%edx
    2de3:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2de9:	89 d2                	mov    %edx,%edx
    2deb:	89 d1                	mov    %edx,%ecx
    2ded:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2df0: R_X86_64_32S	.rodata+0x1430
    2df4:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    2dfa:	31 d0                	xor    %edx,%eax
    2dfc:	8b 55 d0             	mov    -0x30(%rbp),%edx
    2dff:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2e04:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2e09:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    2e0f:	c1 ea 08             	shr    $0x8,%edx
    2e12:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2e18:	89 d2                	mov    %edx,%edx
    2e1a:	89 d1                	mov    %edx,%ecx
    2e1c:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2e1f: R_X86_64_32S	.rodata+0x1830
    2e23:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    2e29:	31 d0                	xor    %edx,%eax
    2e2b:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    2e2e:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    2e34:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2e3a:	89 d2                	mov    %edx,%edx
    2e3c:	89 d1                	mov    %edx,%ecx
    2e3e:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2e41: R_X86_64_32S	.rodata+0x1c30
    2e45:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    2e4b:	31 d0                	xor    %edx,%eax
    2e4d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    2e51:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2e56:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2e5b:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    2e61:	8b 51 14             	mov    0x14(%rcx),%edx
    2e64:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    2e6a:	31 d0                	xor    %edx,%eax
    2e6c:	c4 63 01 22 7d c8 03 	vpinsrd $0x3,-0x38(%rbp),%xmm15,%xmm15
    2e73:	89 45 c8             	mov    %eax,-0x38(%rbp)
    2e76:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    2e79:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2e7e:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2e83:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    2e89:	c1 e8 18             	shr    $0x18,%eax
    2e8c:	89 c0                	mov    %eax,%eax
    2e8e:	89 c1                	mov    %eax,%ecx
    2e90:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			2e93: R_X86_64_32S	.rodata+0x1030
    2e97:	c4 63 01 22 f8 01    	vpinsrd $0x1,%eax,%xmm15,%xmm15
    2e9d:	8b 55 d8             	mov    -0x28(%rbp),%edx
    2ea0:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    2ea6:	c1 ea 10             	shr    $0x10,%edx
    2ea9:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2eaf:	89 d2                	mov    %edx,%edx
    2eb1:	89 d1                	mov    %edx,%ecx
    2eb3:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2eb6: R_X86_64_32S	.rodata+0x1430
    2eba:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    2ec0:	31 d0                	xor    %edx,%eax
    2ec2:	8b 55 dc             	mov    -0x24(%rbp),%edx
    2ec5:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2eca:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2ecf:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    2ed5:	c1 ea 08             	shr    $0x8,%edx
    2ed8:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2ede:	89 d2                	mov    %edx,%edx
    2ee0:	89 d1                	mov    %edx,%ecx
    2ee2:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2ee5: R_X86_64_32S	.rodata+0x1830
    2ee9:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    2eef:	31 d0                	xor    %edx,%eax
    2ef1:	8b 55 d0             	mov    -0x30(%rbp),%edx
    2ef4:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    2efa:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2f00:	89 d2                	mov    %edx,%edx
    2f02:	89 d1                	mov    %edx,%ecx
    2f04:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2f07: R_X86_64_32S	.rodata+0x1c30
    2f0b:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    2f11:	31 d0                	xor    %edx,%eax
    2f13:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    2f17:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2f1c:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2f21:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    2f27:	8b 51 18             	mov    0x18(%rcx),%edx
    2f2a:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    2f30:	31 d0                	xor    %edx,%eax
    2f32:	c4 63 01 22 7d c4 03 	vpinsrd $0x3,-0x3c(%rbp),%xmm15,%xmm15
    2f39:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    2f3c:	8b 45 d0             	mov    -0x30(%rbp),%eax
    2f3f:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2f44:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2f49:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    2f4f:	c1 e8 18             	shr    $0x18,%eax
    2f52:	89 c0                	mov    %eax,%eax
    2f54:	89 c1                	mov    %eax,%ecx
    2f56:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			2f59: R_X86_64_32S	.rodata+0x1030
    2f5d:	c4 63 01 22 f8 01    	vpinsrd $0x1,%eax,%xmm15,%xmm15
    2f63:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    2f66:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    2f6c:	c1 ea 10             	shr    $0x10,%edx
    2f6f:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2f75:	89 d2                	mov    %edx,%edx
    2f77:	89 d1                	mov    %edx,%ecx
    2f79:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2f7c: R_X86_64_32S	.rodata+0x1430
    2f80:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    2f86:	31 d0                	xor    %edx,%eax
    2f88:	8b 55 d8             	mov    -0x28(%rbp),%edx
    2f8b:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2f90:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2f95:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    2f9b:	c1 ea 08             	shr    $0x8,%edx
    2f9e:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2fa4:	89 d2                	mov    %edx,%edx
    2fa6:	89 d1                	mov    %edx,%ecx
    2fa8:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2fab: R_X86_64_32S	.rodata+0x1830
    2faf:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    2fb5:	31 d0                	xor    %edx,%eax
    2fb7:	8b 55 dc             	mov    -0x24(%rbp),%edx
    2fba:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    2fc0:	81 e2 ff 00 00 00    	and    $0xff,%edx
    2fc6:	89 d2                	mov    %edx,%edx
    2fc8:	89 d1                	mov    %edx,%ecx
    2fca:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			2fcd: R_X86_64_32S	.rodata+0x1c30
    2fd1:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    2fd7:	31 d0                	xor    %edx,%eax
    2fd9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    2fdd:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    2fe2:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    2fe7:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    2fed:	8b 51 1c             	mov    0x1c(%rcx),%edx
    2ff0:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    2ff6:	31 d0                	xor    %edx,%eax
    2ff8:	c4 63 01 22 7d c0 03 	vpinsrd $0x3,-0x40(%rbp),%xmm15,%xmm15
    2fff:	89 45 c0             	mov    %eax,-0x40(%rbp)
    3002:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    3006:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    300b:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3010:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    3016:	48 83 c1 20          	add    $0x20,%rcx
    301a:	c4 63 81 22 7d e0 01 	vpinsrq $0x1,-0x20(%rbp),%xmm15,%xmm15
    3021:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    3025:	8b 45 bc             	mov    -0x44(%rbp),%eax
    3028:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    302d:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3032:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    3038:	83 c0 ff             	add    $0xffffffff,%eax
    303b:	c4 63 01 22 7d bc 01 	vpinsrd $0x1,-0x44(%rbp),%xmm15,%xmm15
    3042:	89 45 bc             	mov    %eax,-0x44(%rbp)
    3045:	83 f8 00             	cmp    $0x0,%eax
    3048:	0f 85 13 00 00 00    	jne    3061 <AES_decrypt+0x811>
    304e:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 305c <AES_decrypt+0x80c>
    3055:	ff 24 25 00 00 00 00 	jmpq   *0x0
			3058: R_X86_64_32S	tase_springboard
    305c:	e9 20 03 00 00       	jmpq   3381 <AES_decrypt+0xb31>
    3061:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 306f <AES_decrypt+0x81f>
    3068:	ff 24 25 00 00 00 00 	jmpq   *0x0
			306b: R_X86_64_32S	tase_springboard
    306f:	8b 45 cc             	mov    -0x34(%rbp),%eax
    3072:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    3078:	c1 e8 18             	shr    $0x18,%eax
    307b:	89 c0                	mov    %eax,%eax
    307d:	89 c1                	mov    %eax,%ecx
    307f:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			3082: R_X86_64_32S	.rodata+0x1030
    3086:	c4 63 01 22 f8 01    	vpinsrd $0x1,%eax,%xmm15,%xmm15
    308c:	8b 55 c0             	mov    -0x40(%rbp),%edx
    308f:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    3095:	c1 ea 10             	shr    $0x10,%edx
    3098:	81 e2 ff 00 00 00    	and    $0xff,%edx
    309e:	89 d2                	mov    %edx,%edx
    30a0:	89 d1                	mov    %edx,%ecx
    30a2:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			30a5: R_X86_64_32S	.rodata+0x1430
    30a9:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    30af:	31 d0                	xor    %edx,%eax
    30b1:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    30b4:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    30b9:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    30be:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    30c4:	c1 ea 08             	shr    $0x8,%edx
    30c7:	81 e2 ff 00 00 00    	and    $0xff,%edx
    30cd:	89 d2                	mov    %edx,%edx
    30cf:	89 d1                	mov    %edx,%ecx
    30d1:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			30d4: R_X86_64_32S	.rodata+0x1830
    30d8:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    30de:	31 d0                	xor    %edx,%eax
    30e0:	8b 55 c8             	mov    -0x38(%rbp),%edx
    30e3:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    30e9:	81 e2 ff 00 00 00    	and    $0xff,%edx
    30ef:	89 d2                	mov    %edx,%edx
    30f1:	89 d1                	mov    %edx,%ecx
    30f3:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			30f6: R_X86_64_32S	.rodata+0x1c30
    30fa:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    3100:	31 d0                	xor    %edx,%eax
    3102:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    3106:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    310b:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3110:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    3116:	8b 11                	mov    (%rcx),%edx
    3118:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    311e:	31 d0                	xor    %edx,%eax
    3120:	c4 63 01 22 7d dc 03 	vpinsrd $0x3,-0x24(%rbp),%xmm15,%xmm15
    3127:	89 45 dc             	mov    %eax,-0x24(%rbp)
    312a:	8b 45 c8             	mov    -0x38(%rbp),%eax
    312d:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3132:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3137:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    313d:	c1 e8 18             	shr    $0x18,%eax
    3140:	89 c0                	mov    %eax,%eax
    3142:	89 c1                	mov    %eax,%ecx
    3144:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			3147: R_X86_64_32S	.rodata+0x1030
    314b:	c4 63 01 22 f8 01    	vpinsrd $0x1,%eax,%xmm15,%xmm15
    3151:	8b 55 cc             	mov    -0x34(%rbp),%edx
    3154:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    315a:	c1 ea 10             	shr    $0x10,%edx
    315d:	81 e2 ff 00 00 00    	and    $0xff,%edx
    3163:	89 d2                	mov    %edx,%edx
    3165:	89 d1                	mov    %edx,%ecx
    3167:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			316a: R_X86_64_32S	.rodata+0x1430
    316e:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    3174:	31 d0                	xor    %edx,%eax
    3176:	8b 55 c0             	mov    -0x40(%rbp),%edx
    3179:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    317e:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3183:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    3189:	c1 ea 08             	shr    $0x8,%edx
    318c:	81 e2 ff 00 00 00    	and    $0xff,%edx
    3192:	89 d2                	mov    %edx,%edx
    3194:	89 d1                	mov    %edx,%ecx
    3196:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			3199: R_X86_64_32S	.rodata+0x1830
    319d:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    31a3:	31 d0                	xor    %edx,%eax
    31a5:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    31a8:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    31ae:	81 e2 ff 00 00 00    	and    $0xff,%edx
    31b4:	89 d2                	mov    %edx,%edx
    31b6:	89 d1                	mov    %edx,%ecx
    31b8:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			31bb: R_X86_64_32S	.rodata+0x1c30
    31bf:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    31c5:	31 d0                	xor    %edx,%eax
    31c7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    31cb:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    31d0:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    31d5:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    31db:	8b 51 04             	mov    0x4(%rcx),%edx
    31de:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    31e4:	31 d0                	xor    %edx,%eax
    31e6:	c4 63 01 22 7d d8 03 	vpinsrd $0x3,-0x28(%rbp),%xmm15,%xmm15
    31ed:	89 45 d8             	mov    %eax,-0x28(%rbp)
    31f0:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    31f3:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    31f8:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    31fd:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    3203:	c1 e8 18             	shr    $0x18,%eax
    3206:	89 c0                	mov    %eax,%eax
    3208:	89 c1                	mov    %eax,%ecx
    320a:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			320d: R_X86_64_32S	.rodata+0x1030
    3211:	c4 63 01 22 f8 01    	vpinsrd $0x1,%eax,%xmm15,%xmm15
    3217:	8b 55 c8             	mov    -0x38(%rbp),%edx
    321a:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    3220:	c1 ea 10             	shr    $0x10,%edx
    3223:	81 e2 ff 00 00 00    	and    $0xff,%edx
    3229:	89 d2                	mov    %edx,%edx
    322b:	89 d1                	mov    %edx,%ecx
    322d:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			3230: R_X86_64_32S	.rodata+0x1430
    3234:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    323a:	31 d0                	xor    %edx,%eax
    323c:	8b 55 cc             	mov    -0x34(%rbp),%edx
    323f:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3244:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3249:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    324f:	c1 ea 08             	shr    $0x8,%edx
    3252:	81 e2 ff 00 00 00    	and    $0xff,%edx
    3258:	89 d2                	mov    %edx,%edx
    325a:	89 d1                	mov    %edx,%ecx
    325c:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			325f: R_X86_64_32S	.rodata+0x1830
    3263:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    3269:	31 d0                	xor    %edx,%eax
    326b:	8b 55 c0             	mov    -0x40(%rbp),%edx
    326e:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    3274:	81 e2 ff 00 00 00    	and    $0xff,%edx
    327a:	89 d2                	mov    %edx,%edx
    327c:	89 d1                	mov    %edx,%ecx
    327e:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			3281: R_X86_64_32S	.rodata+0x1c30
    3285:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    328b:	31 d0                	xor    %edx,%eax
    328d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    3291:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3296:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    329b:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    32a1:	8b 51 08             	mov    0x8(%rcx),%edx
    32a4:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    32aa:	31 d0                	xor    %edx,%eax
    32ac:	c4 63 01 22 7d d4 03 	vpinsrd $0x3,-0x2c(%rbp),%xmm15,%xmm15
    32b3:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    32b6:	8b 45 c0             	mov    -0x40(%rbp),%eax
    32b9:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    32be:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    32c3:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    32c9:	c1 e8 18             	shr    $0x18,%eax
    32cc:	89 c0                	mov    %eax,%eax
    32ce:	89 c1                	mov    %eax,%ecx
    32d0:	8b 04 8d 00 00 00 00 	mov    0x0(,%rcx,4),%eax
			32d3: R_X86_64_32S	.rodata+0x1030
    32d7:	c4 63 01 22 f8 01    	vpinsrd $0x1,%eax,%xmm15,%xmm15
    32dd:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    32e0:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    32e6:	c1 ea 10             	shr    $0x10,%edx
    32e9:	81 e2 ff 00 00 00    	and    $0xff,%edx
    32ef:	89 d2                	mov    %edx,%edx
    32f1:	89 d1                	mov    %edx,%ecx
    32f3:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			32f6: R_X86_64_32S	.rodata+0x1430
    32fa:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    3300:	31 d0                	xor    %edx,%eax
    3302:	8b 55 c8             	mov    -0x38(%rbp),%edx
    3305:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    330a:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    330f:	c4 63 01 22 fa 00    	vpinsrd $0x0,%edx,%xmm15,%xmm15
    3315:	c1 ea 08             	shr    $0x8,%edx
    3318:	81 e2 ff 00 00 00    	and    $0xff,%edx
    331e:	89 d2                	mov    %edx,%edx
    3320:	89 d1                	mov    %edx,%ecx
    3322:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			3325: R_X86_64_32S	.rodata+0x1830
    3329:	c4 63 01 22 fa 01    	vpinsrd $0x1,%edx,%xmm15,%xmm15
    332f:	31 d0                	xor    %edx,%eax
    3331:	8b 55 cc             	mov    -0x34(%rbp),%edx
    3334:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    333a:	81 e2 ff 00 00 00    	and    $0xff,%edx
    3340:	89 d2                	mov    %edx,%edx
    3342:	89 d1                	mov    %edx,%ecx
    3344:	8b 14 8d 00 00 00 00 	mov    0x0(,%rcx,4),%edx
			3347: R_X86_64_32S	.rodata+0x1c30
    334b:	c4 63 01 22 fa 03    	vpinsrd $0x3,%edx,%xmm15,%xmm15
    3351:	31 d0                	xor    %edx,%eax
    3353:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    3357:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    335c:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3361:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    3367:	8b 51 0c             	mov    0xc(%rcx),%edx
    336a:	c4 63 01 22 fa 02    	vpinsrd $0x2,%edx,%xmm15,%xmm15
    3370:	31 d0                	xor    %edx,%eax
    3372:	c4 63 01 22 7d d0 03 	vpinsrd $0x3,-0x30(%rbp),%xmm15,%xmm15
    3379:	89 45 d0             	mov    %eax,-0x30(%rbp)
    337c:	e9 65 f9 ff ff       	jmpq   2ce6 <AES_decrypt+0x496>
    3381:	4c 8d 3d 07 00 00 00 	lea    0x7(%rip),%r15        # 338f <AES_decrypt+0xb3f>
    3388:	ff 24 25 00 00 00 00 	jmpq   *0x0
			338b: R_X86_64_32S	tase_springboard
    338f:	8b 45 cc             	mov    -0x34(%rbp),%eax
    3392:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    3398:	c1 e8 18             	shr    $0x18,%eax
    339b:	89 c0                	mov    %eax,%eax
    339d:	89 c1                	mov    %eax,%ecx
    339f:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    33a6:	00 
			33a3: R_X86_64_32S	.rodata+0x2030
    33a7:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    33ad:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    33b2:	c4 01 01 c4 3c 36 02 	vpinsrw $0x2,(%r14,%r14,1),%xmm15,%xmm15
    33b9:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			33bc: R_X86_64_32S	.rodata+0x2030
    33c0:	0f b6 c2             	movzbl %dl,%eax
    33c3:	c1 e0 18             	shl    $0x18,%eax
    33c6:	8b 75 c0             	mov    -0x40(%rbp),%esi
    33c9:	c4 63 01 22 fe 02    	vpinsrd $0x2,%esi,%xmm15,%xmm15
    33cf:	c1 ee 10             	shr    $0x10,%esi
    33d2:	81 e6 ff 00 00 00    	and    $0xff,%esi
    33d8:	89 f6                	mov    %esi,%esi
    33da:	89 f1                	mov    %esi,%ecx
    33dc:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    33e3:	00 
			33e0: R_X86_64_32S	.rodata+0x2030
    33e4:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    33ea:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    33ef:	c4 01 01 c4 3c 36 03 	vpinsrw $0x3,(%r14,%r14,1),%xmm15,%xmm15
    33f6:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			33f9: R_X86_64_32S	.rodata+0x2030
    33fd:	0f b6 f2             	movzbl %dl,%esi
    3400:	c1 e6 10             	shl    $0x10,%esi
    3403:	31 f0                	xor    %esi,%eax
    3405:	8b 75 c4             	mov    -0x3c(%rbp),%esi
    3408:	c4 63 01 22 fe 03    	vpinsrd $0x3,%esi,%xmm15,%xmm15
    340e:	c1 ee 08             	shr    $0x8,%esi
    3411:	81 e6 ff 00 00 00    	and    $0xff,%esi
    3417:	89 f6                	mov    %esi,%esi
    3419:	89 f1                	mov    %esi,%ecx
    341b:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3420:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3425:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    342c:	00 
			3429: R_X86_64_32S	.rodata+0x2030
    342d:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3433:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3438:	c4 01 01 c4 3c 36 00 	vpinsrw $0x0,(%r14,%r14,1),%xmm15,%xmm15
    343f:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			3442: R_X86_64_32S	.rodata+0x2030
    3446:	0f b6 f2             	movzbl %dl,%esi
    3449:	c1 e6 08             	shl    $0x8,%esi
    344c:	31 f0                	xor    %esi,%eax
    344e:	8b 75 c8             	mov    -0x38(%rbp),%esi
    3451:	c4 63 01 22 fe 01    	vpinsrd $0x1,%esi,%xmm15,%xmm15
    3457:	81 e6 ff 00 00 00    	and    $0xff,%esi
    345d:	89 f6                	mov    %esi,%esi
    345f:	89 f1                	mov    %esi,%ecx
    3461:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    3468:	00 
			3465: R_X86_64_32S	.rodata+0x2030
    3469:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    346f:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3474:	c4 01 01 c4 3c 36 01 	vpinsrw $0x1,(%r14,%r14,1),%xmm15,%xmm15
    347b:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			347e: R_X86_64_32S	.rodata+0x2030
    3482:	0f b6 f2             	movzbl %dl,%esi
    3485:	31 f0                	xor    %esi,%eax
    3487:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    348b:	c4 63 81 22 f9 01    	vpinsrq $0x1,%rcx,%xmm15,%xmm15
    3491:	8b 31                	mov    (%rcx),%esi
    3493:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3498:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    349d:	c4 63 01 22 fe 00    	vpinsrd $0x0,%esi,%xmm15,%xmm15
    34a3:	31 f0                	xor    %esi,%eax
    34a5:	c4 63 01 22 7d dc 01 	vpinsrd $0x1,-0x24(%rbp),%xmm15,%xmm15
    34ac:	89 45 dc             	mov    %eax,-0x24(%rbp)
    34af:	8b 45 dc             	mov    -0x24(%rbp),%eax
    34b2:	c4 63 01 22 f8 02    	vpinsrd $0x2,%eax,%xmm15,%xmm15
    34b8:	c1 e8 18             	shr    $0x18,%eax
    34bb:	88 c2                	mov    %al,%dl
    34bd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    34c1:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    34c6:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    34cb:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    34d1:	4c 8d 31             	lea    (%rcx),%r14
    34d4:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    34da:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    34df:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    34e6:	88 11                	mov    %dl,(%rcx)
    34e8:	8b 45 dc             	mov    -0x24(%rbp),%eax
    34eb:	c4 63 01 22 f8 03    	vpinsrd $0x3,%eax,%xmm15,%xmm15
    34f1:	c1 e8 10             	shr    $0x10,%eax
    34f4:	88 c2                	mov    %al,%dl
    34f6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    34fa:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    34ff:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3504:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    350a:	4c 8d 71 01          	lea    0x1(%rcx),%r14
    350e:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3514:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3519:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    3520:	88 51 01             	mov    %dl,0x1(%rcx)
    3523:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3526:	c4 63 01 22 f8 03    	vpinsrd $0x3,%eax,%xmm15,%xmm15
    352c:	c1 e8 08             	shr    $0x8,%eax
    352f:	88 c2                	mov    %al,%dl
    3531:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3535:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    353a:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    353f:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    3545:	4c 8d 71 02          	lea    0x2(%rcx),%r14
    3549:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    354f:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3554:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    355b:	88 51 02             	mov    %dl,0x2(%rcx)
    355e:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3561:	c4 63 01 22 f8 03    	vpinsrd $0x3,%eax,%xmm15,%xmm15
    3567:	88 c2                	mov    %al,%dl
    3569:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    356d:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3572:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3577:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    357d:	4c 8d 71 03          	lea    0x3(%rcx),%r14
    3581:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3587:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    358c:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    3593:	88 51 03             	mov    %dl,0x3(%rcx)
    3596:	8b 45 c8             	mov    -0x38(%rbp),%eax
    3599:	c4 63 01 22 f8 03    	vpinsrd $0x3,%eax,%xmm15,%xmm15
    359f:	c1 e8 18             	shr    $0x18,%eax
    35a2:	89 c0                	mov    %eax,%eax
    35a4:	89 c1                	mov    %eax,%ecx
    35a6:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    35ad:	00 
			35aa: R_X86_64_32S	.rodata+0x2030
    35ae:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    35b4:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    35b9:	c4 01 01 c4 3c 36 05 	vpinsrw $0x5,(%r14,%r14,1),%xmm15,%xmm15
    35c0:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			35c3: R_X86_64_32S	.rodata+0x2030
    35c7:	0f b6 c2             	movzbl %dl,%eax
    35ca:	c1 e0 18             	shl    $0x18,%eax
    35cd:	8b 75 cc             	mov    -0x34(%rbp),%esi
    35d0:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    35d5:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    35da:	c4 63 01 22 fe 00    	vpinsrd $0x0,%esi,%xmm15,%xmm15
    35e0:	c1 ee 10             	shr    $0x10,%esi
    35e3:	81 e6 ff 00 00 00    	and    $0xff,%esi
    35e9:	89 f6                	mov    %esi,%esi
    35eb:	89 f1                	mov    %esi,%ecx
    35ed:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    35f4:	00 
			35f1: R_X86_64_32S	.rodata+0x2030
    35f5:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    35fb:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3600:	c4 01 01 c4 3c 36 02 	vpinsrw $0x2,(%r14,%r14,1),%xmm15,%xmm15
    3607:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			360a: R_X86_64_32S	.rodata+0x2030
    360e:	0f b6 f2             	movzbl %dl,%esi
    3611:	c1 e6 10             	shl    $0x10,%esi
    3614:	31 f0                	xor    %esi,%eax
    3616:	8b 75 c0             	mov    -0x40(%rbp),%esi
    3619:	c4 63 01 22 fe 02    	vpinsrd $0x2,%esi,%xmm15,%xmm15
    361f:	c1 ee 08             	shr    $0x8,%esi
    3622:	81 e6 ff 00 00 00    	and    $0xff,%esi
    3628:	89 f6                	mov    %esi,%esi
    362a:	89 f1                	mov    %esi,%ecx
    362c:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    3633:	00 
			3630: R_X86_64_32S	.rodata+0x2030
    3634:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    363a:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    363f:	c4 01 01 c4 3c 36 03 	vpinsrw $0x3,(%r14,%r14,1),%xmm15,%xmm15
    3646:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			3649: R_X86_64_32S	.rodata+0x2030
    364d:	0f b6 f2             	movzbl %dl,%esi
    3650:	c1 e6 08             	shl    $0x8,%esi
    3653:	31 f0                	xor    %esi,%eax
    3655:	8b 75 c4             	mov    -0x3c(%rbp),%esi
    3658:	c4 63 01 22 fe 03    	vpinsrd $0x3,%esi,%xmm15,%xmm15
    365e:	81 e6 ff 00 00 00    	and    $0xff,%esi
    3664:	89 f6                	mov    %esi,%esi
    3666:	89 f1                	mov    %esi,%ecx
    3668:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    366d:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3672:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    3679:	00 
			3676: R_X86_64_32S	.rodata+0x2030
    367a:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3680:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3685:	c4 01 01 c4 3c 36 00 	vpinsrw $0x0,(%r14,%r14,1),%xmm15,%xmm15
    368c:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			368f: R_X86_64_32S	.rodata+0x2030
    3693:	0f b6 f2             	movzbl %dl,%esi
    3696:	31 f0                	xor    %esi,%eax
    3698:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    369c:	c4 63 81 22 f9 01    	vpinsrq $0x1,%rcx,%xmm15,%xmm15
    36a2:	8b 71 04             	mov    0x4(%rcx),%esi
    36a5:	c4 63 01 22 fe 01    	vpinsrd $0x1,%esi,%xmm15,%xmm15
    36ab:	31 f0                	xor    %esi,%eax
    36ad:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    36b2:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    36b7:	c4 63 01 22 7d d8 00 	vpinsrd $0x0,-0x28(%rbp),%xmm15,%xmm15
    36be:	89 45 d8             	mov    %eax,-0x28(%rbp)
    36c1:	8b 45 d8             	mov    -0x28(%rbp),%eax
    36c4:	c4 63 01 22 f8 01    	vpinsrd $0x1,%eax,%xmm15,%xmm15
    36ca:	c1 e8 18             	shr    $0x18,%eax
    36cd:	88 c2                	mov    %al,%dl
    36cf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    36d3:	c4 63 81 22 f9 01    	vpinsrq $0x1,%rcx,%xmm15,%xmm15
    36d9:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    36de:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    36e3:	4c 8d 71 04          	lea    0x4(%rcx),%r14
    36e7:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    36ed:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    36f2:	c4 01 01 c4 3c 36 00 	vpinsrw $0x0,(%r14,%r14,1),%xmm15,%xmm15
    36f9:	88 51 04             	mov    %dl,0x4(%rcx)
    36fc:	8b 45 d8             	mov    -0x28(%rbp),%eax
    36ff:	c4 63 01 22 f8 01    	vpinsrd $0x1,%eax,%xmm15,%xmm15
    3705:	c1 e8 10             	shr    $0x10,%eax
    3708:	88 c2                	mov    %al,%dl
    370a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    370e:	c4 63 81 22 f9 01    	vpinsrq $0x1,%rcx,%xmm15,%xmm15
    3714:	4c 8d 71 05          	lea    0x5(%rcx),%r14
    3718:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    371e:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3723:	c4 01 01 c4 3c 36 01 	vpinsrw $0x1,(%r14,%r14,1),%xmm15,%xmm15
    372a:	88 51 05             	mov    %dl,0x5(%rcx)
    372d:	8b 45 d8             	mov    -0x28(%rbp),%eax
    3730:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3735:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    373a:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    3740:	c1 e8 08             	shr    $0x8,%eax
    3743:	88 c2                	mov    %al,%dl
    3745:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3749:	c4 63 81 22 f9 01    	vpinsrq $0x1,%rcx,%xmm15,%xmm15
    374f:	4c 8d 71 06          	lea    0x6(%rcx),%r14
    3753:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3759:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    375e:	c4 01 01 c4 3c 36 02 	vpinsrw $0x2,(%r14,%r14,1),%xmm15,%xmm15
    3765:	88 51 06             	mov    %dl,0x6(%rcx)
    3768:	8b 45 d8             	mov    -0x28(%rbp),%eax
    376b:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3770:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3775:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    377b:	88 c2                	mov    %al,%dl
    377d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3781:	c4 63 81 22 f9 01    	vpinsrq $0x1,%rcx,%xmm15,%xmm15
    3787:	4c 8d 71 07          	lea    0x7(%rcx),%r14
    378b:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3791:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3796:	c4 01 01 c4 3c 36 02 	vpinsrw $0x2,(%r14,%r14,1),%xmm15,%xmm15
    379d:	88 51 07             	mov    %dl,0x7(%rcx)
    37a0:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    37a3:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    37a8:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    37ad:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    37b3:	c1 e8 18             	shr    $0x18,%eax
    37b6:	89 c0                	mov    %eax,%eax
    37b8:	89 c1                	mov    %eax,%ecx
    37ba:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    37c1:	00 
			37be: R_X86_64_32S	.rodata+0x2030
    37c2:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    37c8:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    37cd:	c4 01 01 c4 3c 36 02 	vpinsrw $0x2,(%r14,%r14,1),%xmm15,%xmm15
    37d4:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			37d7: R_X86_64_32S	.rodata+0x2030
    37db:	0f b6 c2             	movzbl %dl,%eax
    37de:	c1 e0 18             	shl    $0x18,%eax
    37e1:	8b 75 c8             	mov    -0x38(%rbp),%esi
    37e4:	c4 63 01 22 fe 02    	vpinsrd $0x2,%esi,%xmm15,%xmm15
    37ea:	c1 ee 10             	shr    $0x10,%esi
    37ed:	81 e6 ff 00 00 00    	and    $0xff,%esi
    37f3:	89 f6                	mov    %esi,%esi
    37f5:	89 f1                	mov    %esi,%ecx
    37f7:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    37fe:	00 
			37fb: R_X86_64_32S	.rodata+0x2030
    37ff:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3805:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    380a:	c4 01 01 c4 3c 36 03 	vpinsrw $0x3,(%r14,%r14,1),%xmm15,%xmm15
    3811:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			3814: R_X86_64_32S	.rodata+0x2030
    3818:	0f b6 f2             	movzbl %dl,%esi
    381b:	c1 e6 10             	shl    $0x10,%esi
    381e:	31 f0                	xor    %esi,%eax
    3820:	8b 75 cc             	mov    -0x34(%rbp),%esi
    3823:	c4 63 01 22 fe 03    	vpinsrd $0x3,%esi,%xmm15,%xmm15
    3829:	c1 ee 08             	shr    $0x8,%esi
    382c:	81 e6 ff 00 00 00    	and    $0xff,%esi
    3832:	89 f6                	mov    %esi,%esi
    3834:	89 f1                	mov    %esi,%ecx
    3836:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    383b:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3840:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    3847:	00 
			3844: R_X86_64_32S	.rodata+0x2030
    3848:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    384e:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3853:	c4 01 01 c4 3c 36 00 	vpinsrw $0x0,(%r14,%r14,1),%xmm15,%xmm15
    385a:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			385d: R_X86_64_32S	.rodata+0x2030
    3861:	0f b6 f2             	movzbl %dl,%esi
    3864:	c1 e6 08             	shl    $0x8,%esi
    3867:	31 f0                	xor    %esi,%eax
    3869:	8b 75 c0             	mov    -0x40(%rbp),%esi
    386c:	c4 63 01 22 fe 01    	vpinsrd $0x1,%esi,%xmm15,%xmm15
    3872:	81 e6 ff 00 00 00    	and    $0xff,%esi
    3878:	89 f6                	mov    %esi,%esi
    387a:	89 f1                	mov    %esi,%ecx
    387c:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    3883:	00 
			3880: R_X86_64_32S	.rodata+0x2030
    3884:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    388a:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    388f:	c4 01 01 c4 3c 36 01 	vpinsrw $0x1,(%r14,%r14,1),%xmm15,%xmm15
    3896:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			3899: R_X86_64_32S	.rodata+0x2030
    389d:	0f b6 f2             	movzbl %dl,%esi
    38a0:	31 f0                	xor    %esi,%eax
    38a2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    38a6:	c4 63 81 22 f9 01    	vpinsrq $0x1,%rcx,%xmm15,%xmm15
    38ac:	8b 71 08             	mov    0x8(%rcx),%esi
    38af:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    38b4:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    38b9:	c4 63 01 22 fe 00    	vpinsrd $0x0,%esi,%xmm15,%xmm15
    38bf:	31 f0                	xor    %esi,%eax
    38c1:	c4 63 01 22 7d d4 01 	vpinsrd $0x1,-0x2c(%rbp),%xmm15,%xmm15
    38c8:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    38cb:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    38ce:	c4 63 01 22 f8 02    	vpinsrd $0x2,%eax,%xmm15,%xmm15
    38d4:	c1 e8 18             	shr    $0x18,%eax
    38d7:	88 c2                	mov    %al,%dl
    38d9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    38dd:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    38e2:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    38e7:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    38ed:	4c 8d 71 08          	lea    0x8(%rcx),%r14
    38f1:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    38f7:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    38fc:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    3903:	88 51 08             	mov    %dl,0x8(%rcx)
    3906:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3909:	c4 63 01 22 f8 03    	vpinsrd $0x3,%eax,%xmm15,%xmm15
    390f:	c1 e8 10             	shr    $0x10,%eax
    3912:	88 c2                	mov    %al,%dl
    3914:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3918:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    391d:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3922:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    3928:	4c 8d 71 09          	lea    0x9(%rcx),%r14
    392c:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3932:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3937:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    393e:	88 51 09             	mov    %dl,0x9(%rcx)
    3941:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3944:	c4 63 01 22 f8 03    	vpinsrd $0x3,%eax,%xmm15,%xmm15
    394a:	c1 e8 08             	shr    $0x8,%eax
    394d:	88 c2                	mov    %al,%dl
    394f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3953:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3958:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    395d:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    3963:	4c 8d 71 0a          	lea    0xa(%rcx),%r14
    3967:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    396d:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3972:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    3979:	88 51 0a             	mov    %dl,0xa(%rcx)
    397c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    397f:	c4 63 01 22 f8 03    	vpinsrd $0x3,%eax,%xmm15,%xmm15
    3985:	88 c2                	mov    %al,%dl
    3987:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    398b:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3990:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3995:	c4 63 81 22 f9 00    	vpinsrq $0x0,%rcx,%xmm15,%xmm15
    399b:	4c 8d 71 0b          	lea    0xb(%rcx),%r14
    399f:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    39a5:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    39aa:	c4 01 01 c4 3c 36 04 	vpinsrw $0x4,(%r14,%r14,1),%xmm15,%xmm15
    39b1:	88 51 0b             	mov    %dl,0xb(%rcx)
    39b4:	8b 45 c0             	mov    -0x40(%rbp),%eax
    39b7:	c4 63 01 22 f8 03    	vpinsrd $0x3,%eax,%xmm15,%xmm15
    39bd:	c1 e8 18             	shr    $0x18,%eax
    39c0:	89 c0                	mov    %eax,%eax
    39c2:	89 c1                	mov    %eax,%ecx
    39c4:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    39cb:	00 
			39c8: R_X86_64_32S	.rodata+0x2030
    39cc:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    39d2:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    39d7:	c4 01 01 c4 3c 36 05 	vpinsrw $0x5,(%r14,%r14,1),%xmm15,%xmm15
    39de:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			39e1: R_X86_64_32S	.rodata+0x2030
    39e5:	0f b6 c2             	movzbl %dl,%eax
    39e8:	c1 e0 18             	shl    $0x18,%eax
    39eb:	8b 75 c4             	mov    -0x3c(%rbp),%esi
    39ee:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    39f3:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    39f8:	c4 63 01 22 fe 00    	vpinsrd $0x0,%esi,%xmm15,%xmm15
    39fe:	c1 ee 10             	shr    $0x10,%esi
    3a01:	81 e6 ff 00 00 00    	and    $0xff,%esi
    3a07:	89 f6                	mov    %esi,%esi
    3a09:	89 f1                	mov    %esi,%ecx
    3a0b:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    3a12:	00 
			3a0f: R_X86_64_32S	.rodata+0x2030
    3a13:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3a19:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3a1e:	c4 01 01 c4 3c 36 02 	vpinsrw $0x2,(%r14,%r14,1),%xmm15,%xmm15
    3a25:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			3a28: R_X86_64_32S	.rodata+0x2030
    3a2c:	0f b6 f2             	movzbl %dl,%esi
    3a2f:	c1 e6 10             	shl    $0x10,%esi
    3a32:	31 f0                	xor    %esi,%eax
    3a34:	8b 75 c8             	mov    -0x38(%rbp),%esi
    3a37:	c4 63 01 22 fe 02    	vpinsrd $0x2,%esi,%xmm15,%xmm15
    3a3d:	c1 ee 08             	shr    $0x8,%esi
    3a40:	81 e6 ff 00 00 00    	and    $0xff,%esi
    3a46:	89 f6                	mov    %esi,%esi
    3a48:	89 f1                	mov    %esi,%ecx
    3a4a:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    3a51:	00 
			3a4e: R_X86_64_32S	.rodata+0x2030
    3a52:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3a58:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3a5d:	c4 01 01 c4 3c 36 03 	vpinsrw $0x3,(%r14,%r14,1),%xmm15,%xmm15
    3a64:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			3a67: R_X86_64_32S	.rodata+0x2030
    3a6b:	0f b6 f2             	movzbl %dl,%esi
    3a6e:	c1 e6 08             	shl    $0x8,%esi
    3a71:	31 f0                	xor    %esi,%eax
    3a73:	8b 75 cc             	mov    -0x34(%rbp),%esi
    3a76:	c4 63 01 22 fe 03    	vpinsrd $0x3,%esi,%xmm15,%xmm15
    3a7c:	81 e6 ff 00 00 00    	and    $0xff,%esi
    3a82:	89 f6                	mov    %esi,%esi
    3a84:	89 f1                	mov    %esi,%ecx
    3a86:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3a8b:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3a90:	4c 8d 34 0d 00 00 00 	lea    0x0(,%rcx,1),%r14
    3a97:	00 
			3a94: R_X86_64_32S	.rodata+0x2030
    3a98:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3a9e:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3aa3:	c4 01 01 c4 3c 36 00 	vpinsrw $0x0,(%r14,%r14,1),%xmm15,%xmm15
    3aaa:	8a 14 0d 00 00 00 00 	mov    0x0(,%rcx,1),%dl
			3aad: R_X86_64_32S	.rodata+0x2030
    3ab1:	0f b6 f2             	movzbl %dl,%esi
    3ab4:	31 f0                	xor    %esi,%eax
    3ab6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    3aba:	c4 63 81 22 f9 01    	vpinsrq $0x1,%rcx,%xmm15,%xmm15
    3ac0:	8b 71 0c             	mov    0xc(%rcx),%esi
    3ac3:	c4 63 01 22 fe 01    	vpinsrd $0x1,%esi,%xmm15,%xmm15
    3ac9:	31 f0                	xor    %esi,%eax
    3acb:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3ad0:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3ad5:	c4 63 01 22 7d d0 00 	vpinsrd $0x0,-0x30(%rbp),%xmm15,%xmm15
    3adc:	89 45 d0             	mov    %eax,-0x30(%rbp)
    3adf:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3ae2:	c4 63 01 22 f8 01    	vpinsrd $0x1,%eax,%xmm15,%xmm15
    3ae8:	c1 e8 18             	shr    $0x18,%eax
    3aeb:	88 c2                	mov    %al,%dl
    3aed:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3af1:	c4 63 81 22 f9 01    	vpinsrq $0x1,%rcx,%xmm15,%xmm15
    3af7:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3afc:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3b01:	4c 8d 71 0c          	lea    0xc(%rcx),%r14
    3b05:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3b0b:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3b10:	c4 01 01 c4 3c 36 00 	vpinsrw $0x0,(%r14,%r14,1),%xmm15,%xmm15
    3b17:	88 51 0c             	mov    %dl,0xc(%rcx)
    3b1a:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3b1d:	c4 63 01 22 f8 01    	vpinsrd $0x1,%eax,%xmm15,%xmm15
    3b23:	c1 e8 10             	shr    $0x10,%eax
    3b26:	88 c2                	mov    %al,%dl
    3b28:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3b2c:	c4 63 81 22 f9 01    	vpinsrq $0x1,%rcx,%xmm15,%xmm15
    3b32:	4c 8d 71 0d          	lea    0xd(%rcx),%r14
    3b36:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3b3c:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3b41:	c4 01 01 c4 3c 36 01 	vpinsrw $0x1,(%r14,%r14,1),%xmm15,%xmm15
    3b48:	88 51 0d             	mov    %dl,0xd(%rcx)
    3b4b:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3b4e:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3b53:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3b58:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    3b5e:	c1 e8 08             	shr    $0x8,%eax
    3b61:	88 c2                	mov    %al,%dl
    3b63:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3b67:	c4 63 81 22 f9 01    	vpinsrq $0x1,%rcx,%xmm15,%xmm15
    3b6d:	4c 8d 71 0e          	lea    0xe(%rcx),%r14
    3b71:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3b77:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3b7c:	c4 01 01 c4 3c 36 02 	vpinsrw $0x2,(%r14,%r14,1),%xmm15,%xmm15
    3b83:	88 51 0e             	mov    %dl,0xe(%rcx)
    3b86:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3b89:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3b8e:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3b93:	c4 63 01 22 f8 00    	vpinsrd $0x0,%eax,%xmm15,%xmm15
    3b99:	88 c2                	mov    %al,%dl
    3b9b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3b9f:	c4 63 81 22 f9 01    	vpinsrq $0x1,%rcx,%xmm15,%xmm15
    3ba5:	4c 8d 71 0f          	lea    0xf(%rcx),%r14
    3ba9:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3baf:	c4 42 83 f7 f6       	shrx   %r15,%r14,%r14
    3bb4:	c4 01 01 c4 3c 36 02 	vpinsrw $0x2,(%r14,%r14,1),%xmm15,%xmm15
    3bbb:	88 51 0f             	mov    %dl,0xf(%rcx)
    3bbe:	5d                   	pop    %rbp
    3bbf:	c4 41 01 76 fd       	vpcmpeqd %xmm13,%xmm15,%xmm15
    3bc4:	c4 41 09 eb f7       	vpor   %xmm15,%xmm14,%xmm14
    3bc9:	c4 63 81 22 fd 00    	vpinsrq $0x0,%rbp,%xmm15,%xmm15
    3bcf:	c3                   	retq   

Disassembly of section .rodata:

0000000000000000 <Te2>:
       0:	63 c6                	movslq %esi,%eax
       2:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
       3:	63 7c f8 84          	movslq -0x7c(%rax,%rdi,8),%edi
       7:	7c 77                	jl     80 <Te2+0x80>
       9:	ee                   	out    %al,(%dx)
       a:	99                   	cltd   
       b:	77 7b                	ja     88 <Te2+0x88>
       d:	f6                   	(bad)  
       e:	8d 7b f2             	lea    -0xe(%rbx),%edi
      11:	ff 0d f2 6b d6 bd    	decl   -0x4229940e(%rip)        # ffffffffbdd66c09 <AES_decrypt+0xffffffffbdd643b9>
      17:	6b 6f de b1          	imul   $0xffffffb1,-0x22(%rdi),%ebp
      1b:	6f                   	outsl  %ds:(%rsi),(%dx)
      1c:	c5 91 54 c5          	vandpd %xmm5,%xmm13,%xmm0
      20:	30 60 50             	xor    %ah,0x50(%rax)
      23:	30 01                	xor    %al,(%rcx)
      25:	02 03                	add    (%rbx),%al
      27:	01 67 ce             	add    %esp,-0x32(%rdi)
      2a:	a9 67 2b 56 7d       	test   $0x7d562b67,%eax
      2f:	2b fe                	sub    %esi,%edi
      31:	e7 19                	out    %eax,$0x19
      33:	fe                   	(bad)  
      34:	d7                   	xlat   %ds:(%rbx)
      35:	b5 62                	mov    $0x62,%ch
      37:	d7                   	xlat   %ds:(%rbx)
      38:	ab                   	stos   %eax,%es:(%rdi)
      39:	4d e6 ab             	rex.WRB out %al,$0xab
      3c:	76 ec                	jbe    2a <Te2+0x2a>
      3e:	9a                   	(bad)  
      3f:	76 ca                	jbe    b <Te2+0xb>
      41:	8f 45 ca             	popq   -0x36(%rbp)
      44:	82                   	(bad)  
      45:	1f                   	(bad)  
      46:	9d                   	popfq  
      47:	82                   	(bad)  
      48:	c9                   	leaveq 
      49:	89 40 c9             	mov    %eax,-0x37(%rax)
      4c:	7d fa                	jge    48 <Te2+0x48>
      4e:	87 7d fa             	xchg   %edi,-0x6(%rbp)
      51:	ef                   	out    %eax,(%dx)
      52:	15 fa 59 b2 eb       	adc    $0xebb259fa,%eax
      57:	59                   	pop    %rcx
      58:	47 8e c9             	rex.RXB mov %r9d,%cs
      5b:	47                   	rex.RXB
      5c:	f0 fb                	lock sti 
      5e:	0b f0                	or     %eax,%esi
      60:	ad                   	lods   %ds:(%rsi),%eax
      61:	41 ec                	rex.B in (%dx),%al
      63:	ad                   	lods   %ds:(%rsi),%eax
      64:	d4                   	(bad)  
      65:	b3 67                	mov    $0x67,%bl
      67:	d4                   	(bad)  
      68:	a2 5f fd a2 af 45 ea 	movabs %al,0x9cafea45afa2fd5f
      6f:	af 9c 
      71:	23 bf 9c a4 53 f7    	and    -0x8ac5b64(%rdi),%edi
      77:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
      78:	72 e4                	jb     5e <Te2+0x5e>
      7a:	96                   	xchg   %eax,%esi
      7b:	72 c0                	jb     3d <Te2+0x3d>
      7d:	9b                   	fwait
      7e:	5b                   	pop    %rbx
      7f:	c0                   	(bad)  
      80:	b7 75                	mov    $0x75,%bh
      82:	c2 b7 fd             	retq   $0xfdb7
      85:	e1 1c                	loope  a3 <Te2+0xa3>
      87:	fd                   	std    
      88:	93                   	xchg   %eax,%ebx
      89:	3d ae 93 26 4c       	cmp    $0x4c2693ae,%eax
      8e:	6a 26                	pushq  $0x26
      90:	36 6c                	ss insb (%dx),%es:(%rdi)
      92:	5a                   	pop    %rdx
      93:	36 3f                	ss (bad) 
      95:	7e 41                	jle    d8 <Te2+0xd8>
      97:	3f                   	(bad)  
      98:	f7 f5                	div    %ebp
      9a:	02 f7                	add    %bh,%dh
      9c:	cc                   	int3   
      9d:	83 4f cc 34          	orl    $0x34,-0x34(%rdi)
      a1:	68 5c 34 a5 51       	pushq  $0x51a5345c
      a6:	f4                   	hlt    
      a7:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
      a8:	e5 d1                	in     $0xd1,%eax
      aa:	34 e5                	xor    $0xe5,%al
      ac:	f1                   	icebp  
      ad:	f9                   	stc    
      ae:	08 f1                	or     %dh,%cl
      b0:	71 e2                	jno    94 <Te2+0x94>
      b2:	93                   	xchg   %eax,%ebx
      b3:	71 d8                	jno    8d <Te2+0x8d>
      b5:	ab                   	stos   %eax,%es:(%rdi)
      b6:	73 d8                	jae    90 <Te2+0x90>
      b8:	31 62 53             	xor    %esp,0x53(%rdx)
      bb:	31 15 2a 3f 15 04    	xor    %edx,0x4153f2a(%rip)        # 4153feb <AES_decrypt+0x415179b>
      c1:	08 0c 04             	or     %cl,(%rsp,%rax,1)
      c4:	c7                   	(bad)  
      c5:	95                   	xchg   %eax,%ebp
      c6:	52                   	push   %rdx
      c7:	c7                   	(bad)  
      c8:	23 46 65             	and    0x65(%rsi),%eax
      cb:	23 c3                	and    %ebx,%eax
      cd:	9d                   	popfq  
      ce:	5e                   	pop    %rsi
      cf:	c3                   	retq   
      d0:	18 30                	sbb    %dh,(%rax)
      d2:	28 18                	sub    %bl,(%rax)
      d4:	96                   	xchg   %eax,%esi
      d5:	37                   	(bad)  
      d6:	a1 96 05 0a 0f 05 9a 	movabs 0xb52f9a050f0a0596,%eax
      dd:	2f b5 
      df:	9a                   	(bad)  
      e0:	07                   	(bad)  
      e1:	0e                   	(bad)  
      e2:	09 07                	or     %eax,(%rdi)
      e4:	12 24 36             	adc    (%rsi,%rsi,1),%ah
      e7:	12 80 1b 9b 80 e2    	adc    -0x1d7f64e5(%rax),%al
      ed:	df 3d e2 eb cd 26    	fistpll 0x26cdebe2(%rip)        # 26cdecd5 <AES_decrypt+0x26cdc485>
      f3:	eb 27                	jmp    11c <Te2+0x11c>
      f5:	4e 69 27 b2 7f cd b2 	rex.WRX imul $0xffffffffb2cd7fb2,(%rdi),%r12
      fc:	75 ea                	jne    e8 <Te2+0xe8>
      fe:	9f                   	lahf   
      ff:	75 09                	jne    10a <Te2+0x10a>
     101:	12 1b                	adc    (%rbx),%bl
     103:	09 83 1d 9e 83 2c    	or     %eax,0x2c839e1d(%rbx)
     109:	58                   	pop    %rax
     10a:	74 2c                	je     138 <Te2+0x138>
     10c:	1a 34 2e             	sbb    (%rsi,%rbp,1),%dh
     10f:	1a 1b                	sbb    (%rbx),%bl
     111:	36 2d 1b 6e dc b2    	ss sub $0xb2dc6e1b,%eax
     117:	6e                   	outsb  %ds:(%rsi),(%dx)
     118:	5a                   	pop    %rdx
     119:	b4 ee                	mov    $0xee,%ah
     11b:	5a                   	pop    %rdx
     11c:	a0 5b fb a0 52 a4 f6 	movabs 0x3b52f6a452a0fb5b,%al
     123:	52 3b 
     125:	76 4d                	jbe    174 <Te2+0x174>
     127:	3b d6                	cmp    %esi,%edx
     129:	b7 61                	mov    $0x61,%bh
     12b:	d6                   	(bad)  
     12c:	b3 7d                	mov    $0x7d,%bl
     12e:	ce                   	(bad)  
     12f:	b3 29                	mov    $0x29,%bl
     131:	52                   	push   %rdx
     132:	7b 29                	jnp    15d <Te2+0x15d>
     134:	e3 dd                	jrcxz  113 <Te2+0x113>
     136:	3e e3 2f             	jrcxz,pt 168 <Te2+0x168>
     139:	5e                   	pop    %rsi
     13a:	71 2f                	jno    16b <Te2+0x16b>
     13c:	84 13                	test   %dl,(%rbx)
     13e:	97                   	xchg   %eax,%edi
     13f:	84 53 a6             	test   %dl,-0x5a(%rbx)
     142:	f5                   	cmc    
     143:	53                   	push   %rbx
     144:	d1 b9 68 d1 00 00    	sarl   0xd168(%rcx)
     14a:	00 00                	add    %al,(%rax)
     14c:	ed                   	in     (%dx),%eax
     14d:	c1 2c ed 20 40 60 20 	shrl   $0xfc,0x20604020(,%rbp,8)
     154:	fc 
     155:	e3 1f                	jrcxz  176 <Te2+0x176>
     157:	fc                   	cld    
     158:	b1 79                	mov    $0x79,%cl
     15a:	c8 b1 5b b6          	enterq $0x5bb1,$0xb6
     15e:	ed                   	in     (%dx),%eax
     15f:	5b                   	pop    %rbx
     160:	6a d4                	pushq  $0xffffffffffffffd4
     162:	be 6a cb 8d 46       	mov    $0x468dcb6a,%esi
     167:	cb                   	lret   
     168:	be 67 d9 be 39       	mov    $0x39bed967,%esi
     16d:	72 4b                	jb     1ba <Te2+0x1ba>
     16f:	39 4a 94             	cmp    %ecx,-0x6c(%rdx)
     172:	de 4a 4c             	fimul  0x4c(%rdx)
     175:	98                   	cwtl   
     176:	d4                   	(bad)  
     177:	4c 58                	rex.WR pop %rax
     179:	b0 e8                	mov    $0xe8,%al
     17b:	58                   	pop    %rax
     17c:	cf                   	iret   
     17d:	85 4a cf             	test   %ecx,-0x31(%rdx)
     180:	d0 bb 6b d0 ef c5    	sarb   -0x3a102f95(%rbx)
     186:	2a ef                	sub    %bh,%ch
     188:	aa                   	stos   %al,%es:(%rdi)
     189:	4f e5 aa             	rex.WRXB in $0xaa,%eax
     18c:	fb                   	sti    
     18d:	ed                   	in     (%dx),%eax
     18e:	16                   	(bad)  
     18f:	fb                   	sti    
     190:	43 86 c5             	rex.XB xchg %al,%r13b
     193:	43                   	rex.XB
     194:	4d 9a                	rex.WRB (bad) 
     196:	d7                   	xlat   %ds:(%rbx)
     197:	4d 33 66 55          	xor    0x55(%r14),%r12
     19b:	33 85 11 94 85 45    	xor    0x45859411(%rbp),%eax
     1a1:	8a cf                	mov    %bh,%cl
     1a3:	45 f9                	rex.RB stc 
     1a5:	e9 10 f9 02 04       	jmpq   402faba <AES_decrypt+0x402d26a>
     1aa:	06                   	(bad)  
     1ab:	02 7f fe             	add    -0x2(%rdi),%bh
     1ae:	81 7f 50 a0 f0 50 3c 	cmpl   $0x3c50f0a0,0x50(%rdi)
     1b5:	78 44                	js     1fb <Te2+0x1fb>
     1b7:	3c 9f                	cmp    $0x9f,%al
     1b9:	25 ba 9f a8 4b       	and    $0x4ba89fba,%eax
     1be:	e3 a8                	jrcxz  168 <Te2+0x168>
     1c0:	51                   	push   %rcx
     1c1:	a2 f3 51 a3 5d fe a3 	movabs %al,0x8040a3fe5da351f3
     1c8:	40 80 
     1ca:	c0 40 8f 05          	rolb   $0x5,-0x71(%rax)
     1ce:	8a 8f 92 3f ad 92    	mov    -0x6d52c06e(%rdi),%cl
     1d4:	9d                   	popfq  
     1d5:	21 bc 9d 38 70 48 38 	and    %edi,0x38487038(%rbp,%rbx,4)
     1dc:	f5                   	cmc    
     1dd:	f1                   	icebp  
     1de:	04 f5                	add    $0xf5,%al
     1e0:	bc 63 df bc b6       	mov    $0xb6bcdf63,%esp
     1e5:	77 c1                	ja     1a8 <Te2+0x1a8>
     1e7:	b6 da                	mov    $0xda,%dh
     1e9:	af                   	scas   %es:(%rdi),%eax
     1ea:	75 da                	jne    1c6 <Te2+0x1c6>
     1ec:	21 42 63             	and    %eax,0x63(%rdx)
     1ef:	21 10                	and    %edx,(%rax)
     1f1:	20 30                	and    %dh,(%rax)
     1f3:	10 ff                	adc    %bh,%bh
     1f5:	e5 1a                	in     $0x1a,%eax
     1f7:	ff f3                	push   %rbx
     1f9:	fd                   	std    
     1fa:	0e                   	(bad)  
     1fb:	f3 d2 bf 6d d2 cd 81 	repz sarb %cl,-0x7e322d93(%rdi)
     202:	4c cd 0c             	rex.WR int $0xc
     205:	18 14 0c             	sbb    %dl,(%rsp,%rcx,1)
     208:	13 26                	adc    (%rsi),%esp
     20a:	35 13 ec c3 2f       	xor    $0x2fc3ec13,%eax
     20f:	ec                   	in     (%dx),%al
     210:	5f                   	pop    %rdi
     211:	be e1 5f 97 35       	mov    $0x35975fe1,%esi
     216:	a2 97 44 88 cc 44 17 	movabs %al,0x392e1744cc884497
     21d:	2e 39 
     21f:	17                   	(bad)  
     220:	c4                   	(bad)  
     221:	93                   	xchg   %eax,%ebx
     222:	57                   	push   %rdi
     223:	c4                   	(bad)  
     224:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     225:	55                   	push   %rbp
     226:	f2 a7                	repnz cmpsl %es:(%rdi),%ds:(%rsi)
     228:	7e fc                	jle    226 <Te2+0x226>
     22a:	82                   	(bad)  
     22b:	7e 3d                	jle    26a <Te2+0x26a>
     22d:	7a 47                	jp     276 <Te2+0x276>
     22f:	3d 64 c8 ac 64       	cmp    $0x64acc864,%eax
     234:	5d                   	pop    %rbp
     235:	ba e7 5d 19 32       	mov    $0x32195de7,%edx
     23a:	2b 19                	sub    (%rcx),%ebx
     23c:	73 e6                	jae    224 <Te2+0x224>
     23e:	95                   	xchg   %eax,%ebp
     23f:	73 60                	jae    2a1 <Te2+0x2a1>
     241:	c0 a0 60 81 19 98 81 	shlb   $0x81,-0x67e67ea0(%rax)
     248:	4f 9e                	rex.WRXB sahf 
     24a:	d1 4f dc             	rorl   -0x24(%rdi)
     24d:	a3 7f dc 22 44 66 22 	movabs %eax,0x542a22664422dc7f
     254:	2a 54 
     256:	7e 2a                	jle    282 <Te2+0x282>
     258:	90                   	nop
     259:	3b ab 90 88 0b 83    	cmp    -0x7cf47770(%rbx),%ebp
     25f:	88 46 8c             	mov    %al,-0x74(%rsi)
     262:	ca 46 ee             	lret   $0xee46
     265:	c7                   	(bad)  
     266:	29 ee                	sub    %ebp,%esi
     268:	b8 6b d3 b8 14       	mov    $0x14b8d36b,%eax
     26d:	28 3c 14             	sub    %bh,(%rsp,%rdx,1)
     270:	de a7 79 de 5e bc    	fisub  -0x43a12187(%rdi)
     276:	e2 5e                	loop   2d6 <Te2+0x2d6>
     278:	0b 16                	or     (%rsi),%edx
     27a:	1d 0b db ad 76       	sbb    $0x76addb0b,%eax
     27f:	db e0                	fneni(8087 only) 
     281:	db 3b                	fstpt  (%rbx)
     283:	e0 32                	loopne 2b7 <Te2+0x2b7>
     285:	64 56                	fs push %rsi
     287:	32 3a                	xor    (%rdx),%bh
     289:	74 4e                	je     2d9 <Te2+0x2d9>
     28b:	3a 0a                	cmp    (%rdx),%cl
     28d:	14 1e                	adc    $0x1e,%al
     28f:	0a 49 92             	or     -0x6e(%rcx),%cl
     292:	db 49 06             	fisttpl 0x6(%rcx)
     295:	0c 0a                	or     $0xa,%al
     297:	06                   	(bad)  
     298:	24 48                	and    $0x48,%al
     29a:	6c                   	insb   (%dx),%es:(%rdi)
     29b:	24 5c                	and    $0x5c,%al
     29d:	b8 e4 5c c2 9f       	mov    $0x9fc25ce4,%eax
     2a2:	5d                   	pop    %rbp
     2a3:	c2 d3 bd             	retq   $0xbdd3
     2a6:	6e                   	outsb  %ds:(%rsi),(%dx)
     2a7:	d3 ac 43 ef ac 62 c4 	shrl   %cl,-0x3b9d5311(%rbx,%rax,2)
     2ae:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     2af:	62 91                	(bad)  
     2b1:	39 a8 91 95 31 a4    	cmp    %ebp,-0x5bce6a6f(%rax)
     2b7:	95                   	xchg   %eax,%ebp
     2b8:	e4 d3                	in     $0xd3,%al
     2ba:	37                   	(bad)  
     2bb:	e4 79                	in     $0x79,%al
     2bd:	f2 8b 79 e7          	repnz mov -0x19(%rcx),%edi
     2c1:	d5                   	(bad)  
     2c2:	32 e7                	xor    %bh,%ah
     2c4:	c8 8b 43 c8          	enterq $0x438b,$0xc8
     2c8:	37                   	(bad)  
     2c9:	6e                   	outsb  %ds:(%rsi),(%dx)
     2ca:	59                   	pop    %rcx
     2cb:	37                   	(bad)  
     2cc:	6d                   	insl   (%dx),%es:(%rdi)
     2cd:	da b7 6d 8d 01 8c    	fidivl -0x73fe7293(%rdi)
     2d3:	8d                   	(bad)  
     2d4:	d5                   	(bad)  
     2d5:	b1 64                	mov    $0x64,%cl
     2d7:	d5                   	(bad)  
     2d8:	4e 9c                	rex.WRX pushfq 
     2da:	d2 4e a9             	rorb   %cl,-0x57(%rsi)
     2dd:	49 e0 a9             	rex.WB loopne 289 <Te2+0x289>
     2e0:	6c                   	insb   (%dx),%es:(%rdi)
     2e1:	d8 b4 6c 56 ac fa 56 	fdivs  0x56faac56(%rsp,%rbp,2)
     2e8:	f4                   	hlt    
     2e9:	f3 07                	repz (bad) 
     2eb:	f4                   	hlt    
     2ec:	ea                   	(bad)  
     2ed:	cf                   	iret   
     2ee:	25 ea 65 ca af       	and    $0xafca65ea,%eax
     2f3:	65 7a f4             	gs jp  2ea <Te2+0x2ea>
     2f6:	8e 7a ae             	mov    -0x52(%rdx),%?
     2f9:	47 e9 ae 08 10 18    	rex.RXB jmpq 18100bad <AES_decrypt+0x180fe35d>
     2ff:	08 ba 6f d5 ba 78    	or     %bh,0x78bad56f(%rdx)
     305:	f0 88 78 25          	lock mov %bh,0x25(%rax)
     309:	4a 6f                	rex.WX outsl %ds:(%rsi),(%dx)
     30b:	25 2e 5c 72 2e       	and    $0x2e725c2e,%eax
     310:	1c 38                	sbb    $0x38,%al
     312:	24 1c                	and    $0x1c,%al
     314:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     315:	57                   	push   %rdi
     316:	f1                   	icebp  
     317:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     318:	b4 73                	mov    $0x73,%ah
     31a:	c7                   	(bad)  
     31b:	b4 c6                	mov    $0xc6,%ah
     31d:	97                   	xchg   %eax,%edi
     31e:	51                   	push   %rcx
     31f:	c6                   	(bad)  
     320:	e8 cb 23 e8 dd       	callq  ffffffffdde826f0 <AES_decrypt+0xffffffffdde7fea0>
     325:	a1 7c dd 74 e8 9c 74 	movabs 0x3e1f749ce874dd7c,%eax
     32c:	1f 3e 
     32e:	21 1f                	and    %ebx,(%rdi)
     330:	4b 96                	rex.WXB xchg %rax,%r14
     332:	dd 4b bd             	fisttpll -0x43(%rbx)
     335:	61                   	(bad)  
     336:	dc bd 8b 0d 86 8b    	fdivrl -0x7479f275(%rbp)
     33c:	8a 0f                	mov    (%rdi),%cl
     33e:	85 8a 70 e0 90 70    	test   %ecx,0x7090e070(%rdx)
     344:	3e 7c 42             	jl,pt  389 <Te2+0x389>
     347:	3e b5 71             	ds mov $0x71,%ch
     34a:	c4                   	(bad)  
     34b:	b5 66                	mov    $0x66,%ch
     34d:	cc                   	int3   
     34e:	aa                   	stos   %al,%es:(%rdi)
     34f:	66 48 90             	xchg   %rax,%rax
     352:	d8 48 03             	fmuls  0x3(%rax)
     355:	06                   	(bad)  
     356:	05 03 f6 f7 01       	add    $0x1f7f603,%eax
     35b:	f6                   	(bad)  
     35c:	0e                   	(bad)  
     35d:	1c 12                	sbb    $0x12,%al
     35f:	0e                   	(bad)  
     360:	61                   	(bad)  
     361:	c2 a3 61             	retq   $0x61a3
     364:	35 6a 5f 35 57       	xor    $0x57355f6a,%eax
     369:	ae                   	scas   %es:(%rdi),%al
     36a:	f9                   	stc    
     36b:	57                   	push   %rdi
     36c:	b9 69 d0 b9 86       	mov    $0x86b9d069,%ecx
     371:	17                   	(bad)  
     372:	91                   	xchg   %eax,%ecx
     373:	86 c1                	xchg   %al,%cl
     375:	99                   	cltd   
     376:	58                   	pop    %rax
     377:	c1 1d 3a 27 1d 9e 27 	rcrl   $0x27,-0x61e2d8c6(%rip)        # ffffffff9e1d2ab8 <AES_decrypt+0xffffffff9e1d0268>
     37e:	b9 9e e1 d9 38       	mov    $0x38d9e19e,%ecx
     383:	e1 f8                	loope  37d <Te2+0x37d>
     385:	eb 13                	jmp    39a <Te2+0x39a>
     387:	f8                   	clc    
     388:	98                   	cwtl   
     389:	2b b3 98 11 22 33    	sub    0x33221198(%rbx),%esi
     38f:	11 69 d2             	adc    %ebp,-0x2e(%rcx)
     392:	bb 69 d9 a9 70       	mov    $0x70a9d969,%ebx
     397:	d9 8e 07 89 8e 94    	(bad)  -0x6b7176f9(%rsi)
     39d:	33 a7 94 9b 2d b6    	xor    -0x49d2646c(%rdi),%esp
     3a3:	9b                   	fwait
     3a4:	1e                   	(bad)  
     3a5:	3c 22                	cmp    $0x22,%al
     3a7:	1e                   	(bad)  
     3a8:	87 15 92 87 e9 c9    	xchg   %edx,-0x3616786e(%rip)        # ffffffffc9e98b40 <AES_decrypt+0xffffffffc9e962f0>
     3ae:	20 e9                	and    %ch,%cl
     3b0:	ce                   	(bad)  
     3b1:	87 49 ce             	xchg   %ecx,-0x32(%rcx)
     3b4:	55                   	push   %rbp
     3b5:	aa                   	stos   %al,%es:(%rdi)
     3b6:	ff 55 28             	callq  *0x28(%rbp)
     3b9:	50                   	push   %rax
     3ba:	78 28                	js     3e4 <Te2+0x3e4>
     3bc:	df a5 7a df 8c 03    	fbld   0x38cdf7a(%rbp)
     3c2:	8f                   	(bad)  
     3c3:	8c a1 59 f8 a1 89    	mov    %fs,-0x765e07a7(%rcx)
     3c9:	09 80 89 0d 1a 17    	or     %eax,0x171a0d89(%rax)
     3cf:	0d bf 65 da bf       	or     $0xbfda65bf,%eax
     3d4:	e6 d7                	out    %al,$0xd7
     3d6:	31 e6                	xor    %esp,%esi
     3d8:	42 84 c6             	rex.X test %al,%sil
     3db:	42 68 d0 b8 68 41    	rex.X pushq $0x4168b8d0
     3e1:	82                   	(bad)  
     3e2:	c3                   	retq   
     3e3:	41 99                	rex.B cltd 
     3e5:	29 b0 99 2d 5a 77    	sub    %esi,0x775a2d99(%rax)
     3eb:	2d 0f 1e 11 0f       	sub    $0xf111e0f,%eax
     3f0:	b0 7b                	mov    $0x7b,%al
     3f2:	cb                   	lret   
     3f3:	b0 54                	mov    $0x54,%al
     3f5:	a8 fc                	test   $0xfc,%al
     3f7:	54                   	push   %rsp
     3f8:	bb 6d d6 bb 16       	mov    $0x16bbd66d,%ebx
     3fd:	2c 3a                	sub    $0x3a,%al
     3ff:	16                   	(bad)  

0000000000000400 <Te3>:
     400:	c6                   	(bad)  
     401:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     402:	63 63 f8             	movslq -0x8(%rbx),%esp
     405:	84 7c 7c ee          	test   %bh,-0x12(%rsp,%rdi,2)
     409:	99                   	cltd   
     40a:	77 77                	ja     483 <Te3+0x83>
     40c:	f6                   	(bad)  
     40d:	8d 7b 7b             	lea    0x7b(%rbx),%edi
     410:	ff 0d f2 f2 d6 bd    	decl   -0x42290d0e(%rip)        # ffffffffbdd6f708 <AES_decrypt+0xffffffffbdd6ceb8>
     416:	6b 6b de b1          	imul   $0xffffffb1,-0x22(%rbx),%ebp
     41a:	6f                   	outsl  %ds:(%rsi),(%dx)
     41b:	6f                   	outsl  %ds:(%rsi),(%dx)
     41c:	91                   	xchg   %eax,%ecx
     41d:	54                   	push   %rsp
     41e:	c5 c5 60 50 30       	vpunpcklbw 0x30(%rax),%ymm7,%ymm2
     423:	30 02                	xor    %al,(%rdx)
     425:	03 01                	add    (%rcx),%eax
     427:	01 ce                	add    %ecx,%esi
     429:	a9 67 67 56 7d       	test   $0x7d566767,%eax
     42e:	2b 2b                	sub    (%rbx),%ebp
     430:	e7 19                	out    %eax,$0x19
     432:	fe                   	(bad)  
     433:	fe                   	(bad)  
     434:	b5 62                	mov    $0x62,%ch
     436:	d7                   	xlat   %ds:(%rbx)
     437:	d7                   	xlat   %ds:(%rbx)
     438:	4d e6 ab             	rex.WRB out %al,$0xab
     43b:	ab                   	stos   %eax,%es:(%rdi)
     43c:	ec                   	in     (%dx),%al
     43d:	9a                   	(bad)  
     43e:	76 76                	jbe    4b6 <Te3+0xb6>
     440:	8f 45 ca             	popq   -0x36(%rbp)
     443:	ca 1f 9d             	lret   $0x9d1f
     446:	82                   	(bad)  
     447:	82                   	(bad)  
     448:	89 40 c9             	mov    %eax,-0x37(%rax)
     44b:	c9                   	leaveq 
     44c:	fa                   	cli    
     44d:	87 7d 7d             	xchg   %edi,0x7d(%rbp)
     450:	ef                   	out    %eax,(%dx)
     451:	15 fa fa b2 eb       	adc    $0xebb2fafa,%eax
     456:	59                   	pop    %rcx
     457:	59                   	pop    %rcx
     458:	8e c9                	mov    %ecx,%cs
     45a:	47                   	rex.RXB
     45b:	47 fb                	rex.RXB sti 
     45d:	0b f0                	or     %eax,%esi
     45f:	f0 41 ec             	lock rex.B in (%dx),%al
     462:	ad                   	lods   %ds:(%rsi),%eax
     463:	ad                   	lods   %ds:(%rsi),%eax
     464:	b3 67                	mov    $0x67,%bl
     466:	d4                   	(bad)  
     467:	d4                   	(bad)  
     468:	5f                   	pop    %rdi
     469:	fd                   	std    
     46a:	a2 a2 45 ea af af 23 	movabs %al,0x9cbf23afafea45a2
     471:	bf 9c 
     473:	9c                   	pushfq 
     474:	53                   	push   %rbx
     475:	f7 a4 a4 e4 96 72 72 	mull   0x727296e4(%rsp,%riz,4)
     47c:	9b                   	fwait
     47d:	5b                   	pop    %rbx
     47e:	c0 c0 75             	rol    $0x75,%al
     481:	c2 b7 b7             	retq   $0xb7b7
     484:	e1 1c                	loope  4a2 <Te3+0xa2>
     486:	fd                   	std    
     487:	fd                   	std    
     488:	3d ae 93 93 4c       	cmp    $0x4c9393ae,%eax
     48d:	6a 26                	pushq  $0x26
     48f:	26 6c                	es insb (%dx),%es:(%rdi)
     491:	5a                   	pop    %rdx
     492:	36 36 7e 41          	ss ss jle 4d7 <Te3+0xd7>
     496:	3f                   	(bad)  
     497:	3f                   	(bad)  
     498:	f5                   	cmc    
     499:	02 f7                	add    %bh,%dh
     49b:	f7 83 4f cc cc 68 5c 	testl  $0x5134345c,0x68cccc4f(%rbx)
     4a2:	34 34 51 
     4a5:	f4                   	hlt    
     4a6:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     4a7:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     4a8:	d1                   	(bad)  
     4a9:	34 e5                	xor    $0xe5,%al
     4ab:	e5 f9                	in     $0xf9,%eax
     4ad:	08 f1                	or     %dh,%cl
     4af:	f1                   	icebp  
     4b0:	e2 93                	loop   445 <Te3+0x45>
     4b2:	71 71                	jno    525 <Te3+0x125>
     4b4:	ab                   	stos   %eax,%es:(%rdi)
     4b5:	73 d8                	jae    48f <Te3+0x8f>
     4b7:	d8 62 53             	fsubs  0x53(%rdx)
     4ba:	31 31                	xor    %esi,(%rcx)
     4bc:	2a 3f                	sub    (%rdi),%bh
     4be:	15 15 08 0c 04       	adc    $0x40c0815,%eax
     4c3:	04 95                	add    $0x95,%al
     4c5:	52                   	push   %rdx
     4c6:	c7 c7 46 65 23 23    	mov    $0x23236546,%edi
     4cc:	9d                   	popfq  
     4cd:	5e                   	pop    %rsi
     4ce:	c3                   	retq   
     4cf:	c3                   	retq   
     4d0:	30 28                	xor    %ch,(%rax)
     4d2:	18 18                	sbb    %bl,(%rax)
     4d4:	37                   	(bad)  
     4d5:	a1 96 96 0a 0f 05 05 	movabs 0xb52f05050f0a9696,%eax
     4dc:	2f b5 
     4de:	9a                   	(bad)  
     4df:	9a                   	(bad)  
     4e0:	0e                   	(bad)  
     4e1:	09 07                	or     %eax,(%rdi)
     4e3:	07                   	(bad)  
     4e4:	24 36                	and    $0x36,%al
     4e6:	12 12                	adc    (%rdx),%dl
     4e8:	1b 9b 80 80 df 3d    	sbb    0x3ddf8080(%rbx),%ebx
     4ee:	e2 e2                	loop   4d2 <Te3+0xd2>
     4f0:	cd 26                	int    $0x26
     4f2:	eb eb                	jmp    4df <Te3+0xdf>
     4f4:	4e 69 27 27 7f cd b2 	rex.WRX imul $0xffffffffb2cd7f27,(%rdi),%r12
     4fb:	b2 ea                	mov    $0xea,%dl
     4fd:	9f                   	lahf   
     4fe:	75 75                	jne    575 <Te3+0x175>
     500:	12 1b                	adc    (%rbx),%bl
     502:	09 09                	or     %ecx,(%rcx)
     504:	1d 9e 83 83 58       	sbb    $0x5883839e,%eax
     509:	74 2c                	je     537 <Te3+0x137>
     50b:	2c 34                	sub    $0x34,%al
     50d:	2e 1a 1a             	sbb    %cs:(%rdx),%bl
     510:	36 2d 1b 1b dc b2    	ss sub $0xb2dc1b1b,%eax
     516:	6e                   	outsb  %ds:(%rsi),(%dx)
     517:	6e                   	outsb  %ds:(%rsi),(%dx)
     518:	b4 ee                	mov    $0xee,%ah
     51a:	5a                   	pop    %rdx
     51b:	5a                   	pop    %rdx
     51c:	5b                   	pop    %rbx
     51d:	fb                   	sti    
     51e:	a0 a0 a4 f6 52 52 76 	movabs 0x3b4d765252f6a4a0,%al
     525:	4d 3b 
     527:	3b b7 61 d6 d6 7d    	cmp    0x7dd6d661(%rdi),%esi
     52d:	ce                   	(bad)  
     52e:	b3 b3                	mov    $0xb3,%bl
     530:	52                   	push   %rdx
     531:	7b 29                	jnp    55c <Te3+0x15c>
     533:	29 dd                	sub    %ebx,%ebp
     535:	3e e3 e3             	jrcxz,pt 51b <Te3+0x11b>
     538:	5e                   	pop    %rsi
     539:	71 2f                	jno    56a <Te3+0x16a>
     53b:	2f                   	(bad)  
     53c:	13 97 84 84 a6 f5    	adc    -0xa597b7c(%rdi),%edx
     542:	53                   	push   %rbx
     543:	53                   	push   %rbx
     544:	b9 68 d1 d1 00       	mov    $0xd1d168,%ecx
     549:	00 00                	add    %al,(%rax)
     54b:	00 c1                	add    %al,%cl
     54d:	2c ed                	sub    $0xed,%al
     54f:	ed                   	in     (%dx),%eax
     550:	40 60                	rex (bad) 
     552:	20 20                	and    %ah,(%rax)
     554:	e3 1f                	jrcxz  575 <Te3+0x175>
     556:	fc                   	cld    
     557:	fc                   	cld    
     558:	79 c8                	jns    522 <Te3+0x122>
     55a:	b1 b1                	mov    $0xb1,%cl
     55c:	b6 ed                	mov    $0xed,%dh
     55e:	5b                   	pop    %rbx
     55f:	5b                   	pop    %rbx
     560:	d4                   	(bad)  
     561:	be 6a 6a 8d 46       	mov    $0x468d6a6a,%esi
     566:	cb                   	lret   
     567:	cb                   	lret   
     568:	67 d9 be be 72 4b 39 	fnstcw 0x394b72be(%esi)
     56f:	39 94 de 4a 4a 98 d4 	cmp    %edx,-0x2b67b5b6(%rsi,%rbx,8)
     576:	4c                   	rex.WR
     577:	4c b0 e8             	rex.WR mov $0xe8,%al
     57a:	58                   	pop    %rax
     57b:	58                   	pop    %rax
     57c:	85 4a cf             	test   %ecx,-0x31(%rdx)
     57f:	cf                   	iret   
     580:	bb 6b d0 d0 c5       	mov    $0xc5d0d06b,%ebx
     585:	2a ef                	sub    %bh,%ch
     587:	ef                   	out    %eax,(%dx)
     588:	4f e5 aa             	rex.WRXB in $0xaa,%eax
     58b:	aa                   	stos   %al,%es:(%rdi)
     58c:	ed                   	in     (%dx),%eax
     58d:	16                   	(bad)  
     58e:	fb                   	sti    
     58f:	fb                   	sti    
     590:	86 c5                	xchg   %al,%ch
     592:	43                   	rex.XB
     593:	43 9a                	rex.XB (bad) 
     595:	d7                   	xlat   %ds:(%rbx)
     596:	4d                   	rex.WRB
     597:	4d                   	rex.WRB
     598:	66 55                	push   %bp
     59a:	33 33                	xor    (%rbx),%esi
     59c:	11 94 85 85 8a cf 45 	adc    %edx,0x45cf8a85(%rbp,%rax,4)
     5a3:	45 e9 10 f9 f9 04    	rex.RB jmpq 4f9feb9 <AES_decrypt+0x4f9d669>
     5a9:	06                   	(bad)  
     5aa:	02 02                	add    (%rdx),%al
     5ac:	fe 81 7f 7f a0 f0    	incb   -0xf5f8081(%rcx)
     5b2:	50                   	push   %rax
     5b3:	50                   	push   %rax
     5b4:	78 44                	js     5fa <Te3+0x1fa>
     5b6:	3c 3c                	cmp    $0x3c,%al
     5b8:	25 ba 9f 9f 4b       	and    $0x4b9f9fba,%eax
     5bd:	e3 a8                	jrcxz  567 <Te3+0x167>
     5bf:	a8 a2                	test   $0xa2,%al
     5c1:	f3 51                	repz push %rcx
     5c3:	51                   	push   %rcx
     5c4:	5d                   	pop    %rbp
     5c5:	fe                   	(bad)  
     5c6:	a3 a3 80 c0 40 40 05 	movabs %eax,0x8f8a054040c080a3
     5cd:	8a 8f 
     5cf:	8f                   	(bad)  
     5d0:	3f                   	(bad)  
     5d1:	ad                   	lods   %ds:(%rsi),%eax
     5d2:	92                   	xchg   %eax,%edx
     5d3:	92                   	xchg   %eax,%edx
     5d4:	21 bc 9d 9d 70 48 38 	and    %edi,0x3848709d(%rbp,%rbx,4)
     5db:	38 f1                	cmp    %dh,%cl
     5dd:	04 f5                	add    $0xf5,%al
     5df:	f5                   	cmc    
     5e0:	63 df                	movslq %edi,%ebx
     5e2:	bc bc 77 c1 b6       	mov    $0xb6c177bc,%esp
     5e7:	b6 af                	mov    $0xaf,%dh
     5e9:	75 da                	jne    5c5 <Te3+0x1c5>
     5eb:	da 42 63             	fiaddl 0x63(%rdx)
     5ee:	21 21                	and    %esp,(%rcx)
     5f0:	20 30                	and    %dh,(%rax)
     5f2:	10 10                	adc    %dl,(%rax)
     5f4:	e5 1a                	in     $0x1a,%eax
     5f6:	ff                   	(bad)  
     5f7:	ff                   	(bad)  
     5f8:	fd                   	std    
     5f9:	0e                   	(bad)  
     5fa:	f3 f3 bf 6d d2 d2 81 	repz repz mov $0x81d2d26d,%edi
     601:	4c cd cd             	rex.WR int $0xcd
     604:	18 14 0c             	sbb    %dl,(%rsp,%rcx,1)
     607:	0c 26                	or     $0x26,%al
     609:	35 13 13 c3 2f       	xor    $0x2fc31313,%eax
     60e:	ec                   	in     (%dx),%al
     60f:	ec                   	in     (%dx),%al
     610:	be e1 5f 5f 35       	mov    $0x355f5fe1,%esi
     615:	a2 97 97 88 cc 44 44 	movabs %al,0x392e4444cc889797
     61c:	2e 39 
     61e:	17                   	(bad)  
     61f:	17                   	(bad)  
     620:	93                   	xchg   %eax,%ebx
     621:	57                   	push   %rdi
     622:	c4                   	(bad)  
     623:	c4                   	(bad)  
     624:	55                   	push   %rbp
     625:	f2 a7                	repnz cmpsl %es:(%rdi),%ds:(%rsi)
     627:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     628:	fc                   	cld    
     629:	82                   	(bad)  
     62a:	7e 7e                	jle    6aa <Te3+0x2aa>
     62c:	7a 47                	jp     675 <Te3+0x275>
     62e:	3d 3d c8 ac 64       	cmp    $0x64acc83d,%eax
     633:	64 ba e7 5d 5d 32    	fs mov $0x325d5de7,%edx
     639:	2b 19                	sub    (%rcx),%ebx
     63b:	19 e6                	sbb    %esp,%esi
     63d:	95                   	xchg   %eax,%ebp
     63e:	73 73                	jae    6b3 <Te3+0x2b3>
     640:	c0 a0 60 60 19 98 81 	shlb   $0x81,-0x67e69fa0(%rax)
     647:	81 9e d1 4f 4f a3 7f 	sbbl   $0x44dcdc7f,-0x5cb0b02f(%rsi)
     64e:	dc dc 44 
     651:	66 22 22             	data16 and (%rdx),%ah
     654:	54                   	push   %rsp
     655:	7e 2a                	jle    681 <Te3+0x281>
     657:	2a 3b                	sub    (%rbx),%bh
     659:	ab                   	stos   %eax,%es:(%rdi)
     65a:	90                   	nop
     65b:	90                   	nop
     65c:	0b 83 88 88 8c ca    	or     -0x35737778(%rbx),%eax
     662:	46                   	rex.RX
     663:	46 c7                	rex.RX (bad) 
     665:	29 ee                	sub    %ebp,%esi
     667:	ee                   	out    %al,(%dx)
     668:	6b d3 b8             	imul   $0xffffffb8,%ebx,%edx
     66b:	b8 28 3c 14 14       	mov    $0x14143c28,%eax
     670:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     671:	79 de                	jns    651 <Te3+0x251>
     673:	de bc e2 5e 5e 16 1d 	fidivr 0x1d165e5e(%rdx,%riz,8)
     67a:	0b 0b                	or     (%rbx),%ecx
     67c:	ad                   	lods   %ds:(%rsi),%eax
     67d:	76 db                	jbe    65a <Te3+0x25a>
     67f:	db db                	fcmovnu %st(3),%st
     681:	3b e0                	cmp    %eax,%esp
     683:	e0 64                	loopne 6e9 <Te3+0x2e9>
     685:	56                   	push   %rsi
     686:	32 32                	xor    (%rdx),%dh
     688:	74 4e                	je     6d8 <Te3+0x2d8>
     68a:	3a 3a                	cmp    (%rdx),%bh
     68c:	14 1e                	adc    $0x1e,%al
     68e:	0a 0a                	or     (%rdx),%cl
     690:	92                   	xchg   %eax,%edx
     691:	db 49 49             	fisttpl 0x49(%rcx)
     694:	0c 0a                	or     $0xa,%al
     696:	06                   	(bad)  
     697:	06                   	(bad)  
     698:	48 6c                	rex.W insb (%dx),%es:(%rdi)
     69a:	24 24                	and    $0x24,%al
     69c:	b8 e4 5c 5c 9f       	mov    $0x9f5c5ce4,%eax
     6a1:	5d                   	pop    %rbp
     6a2:	c2 c2 bd             	retq   $0xbdc2
     6a5:	6e                   	outsb  %ds:(%rsi),(%dx)
     6a6:	d3 d3                	rcl    %cl,%ebx
     6a8:	43 ef                	rex.XB out %eax,(%dx)
     6aa:	ac                   	lods   %ds:(%rsi),%al
     6ab:	ac                   	lods   %ds:(%rsi),%al
     6ac:	c4                   	(bad)  
     6ad:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     6ae:	62 62                	(bad)  
     6b0:	39 a8 91 91 31 a4    	cmp    %ebp,-0x5bce6e6f(%rax)
     6b6:	95                   	xchg   %eax,%ebp
     6b7:	95                   	xchg   %eax,%ebp
     6b8:	d3                   	(bad)  
     6b9:	37                   	(bad)  
     6ba:	e4 e4                	in     $0xe4,%al
     6bc:	f2 8b 79 79          	repnz mov 0x79(%rcx),%edi
     6c0:	d5                   	(bad)  
     6c1:	32 e7                	xor    %bh,%ah
     6c3:	e7 8b                	out    %eax,$0x8b
     6c5:	43 c8 c8 6e 59       	rex.XB enterq $0x6ec8,$0x59
     6ca:	37                   	(bad)  
     6cb:	37                   	(bad)  
     6cc:	da b7 6d 6d 01 8c    	fidivl -0x73fe9293(%rdi)
     6d2:	8d 8d b1 64 d5 d5    	lea    -0x2a2a9b4f(%rbp),%ecx
     6d8:	9c                   	pushfq 
     6d9:	d2 4e 4e             	rorb   %cl,0x4e(%rsi)
     6dc:	49 e0 a9             	rex.WB loopne 688 <Te3+0x288>
     6df:	a9 d8 b4 6c 6c       	test   $0x6c6cb4d8,%eax
     6e4:	ac                   	lods   %ds:(%rsi),%al
     6e5:	fa                   	cli    
     6e6:	56                   	push   %rsi
     6e7:	56                   	push   %rsi
     6e8:	f3 07                	repz (bad) 
     6ea:	f4                   	hlt    
     6eb:	f4                   	hlt    
     6ec:	cf                   	iret   
     6ed:	25 ea ea ca af       	and    $0xafcaeaea,%eax
     6f2:	65 65 f4             	gs gs hlt 
     6f5:	8e 7a 7a             	mov    0x7a(%rdx),%?
     6f8:	47 e9 ae ae 10 18    	rex.RXB jmpq 1810b5ac <AES_decrypt+0x18108d5c>
     6fe:	08 08                	or     %cl,(%rax)
     700:	6f                   	outsl  %ds:(%rsi),(%dx)
     701:	d5                   	(bad)  
     702:	ba ba f0 88 78       	mov    $0x7888f0ba,%edx
     707:	78 4a                	js     753 <Te3+0x353>
     709:	6f                   	outsl  %ds:(%rsi),(%dx)
     70a:	25 25 5c 72 2e       	and    $0x2e725c25,%eax
     70f:	2e 38 24 1c          	cmp    %ah,%cs:(%rsp,%rbx,1)
     713:	1c 57                	sbb    $0x57,%al
     715:	f1                   	icebp  
     716:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     717:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     718:	73 c7                	jae    6e1 <Te3+0x2e1>
     71a:	b4 b4                	mov    $0xb4,%ah
     71c:	97                   	xchg   %eax,%edi
     71d:	51                   	push   %rcx
     71e:	c6 c6 cb             	mov    $0xcb,%dh
     721:	23 e8                	and    %eax,%ebp
     723:	e8 a1 7c dd dd       	callq  ffffffffdddd83c9 <AES_decrypt+0xffffffffdddd5b79>
     728:	e8 9c 74 74 3e       	callq  3e747bc9 <AES_decrypt+0x3e745379>
     72d:	21 1f                	and    %ebx,(%rdi)
     72f:	1f                   	(bad)  
     730:	96                   	xchg   %eax,%esi
     731:	dd 4b 4b             	fisttpll 0x4b(%rbx)
     734:	61                   	(bad)  
     735:	dc bd bd 0d 86 8b    	fdivrl -0x7479f243(%rbp)
     73b:	8b 0f                	mov    (%rdi),%ecx
     73d:	85 8a 8a e0 90 70    	test   %ecx,0x7090e08a(%rdx)
     743:	70 7c                	jo     7c1 <Te3+0x3c1>
     745:	42                   	rex.X
     746:	3e 3e 71 c4          	ds jno,pt 70e <Te3+0x30e>
     74a:	b5 b5                	mov    $0xb5,%ch
     74c:	cc                   	int3   
     74d:	aa                   	stos   %al,%es:(%rdi)
     74e:	66 66 90             	data16 xchg %ax,%ax
     751:	d8 48 48             	fmuls  0x48(%rax)
     754:	06                   	(bad)  
     755:	05 03 03 f7 01       	add    $0x1f70303,%eax
     75a:	f6 f6                	div    %dh
     75c:	1c 12                	sbb    $0x12,%al
     75e:	0e                   	(bad)  
     75f:	0e                   	(bad)  
     760:	c2 a3 61             	retq   $0x61a3
     763:	61                   	(bad)  
     764:	6a 5f                	pushq  $0x5f
     766:	35 35 ae f9 57       	xor    $0x57f9ae35,%eax
     76b:	57                   	push   %rdi
     76c:	69 d0 b9 b9 17 91    	imul   $0x9117b9b9,%eax,%edx
     772:	86 86 99 58 c1 c1    	xchg   %al,-0x3e3ea767(%rsi)
     778:	3a 27                	cmp    (%rdi),%ah
     77a:	1d 1d 27 b9 9e       	sbb    $0x9eb9271d,%eax
     77f:	9e                   	sahf   
     780:	d9 38                	fnstcw (%rax)
     782:	e1 e1                	loope  765 <Te3+0x365>
     784:	eb 13                	jmp    799 <Te3+0x399>
     786:	f8                   	clc    
     787:	f8                   	clc    
     788:	2b b3 98 98 22 33    	sub    0x33229898(%rbx),%esi
     78e:	11 11                	adc    %edx,(%rcx)
     790:	d2 bb 69 69 a9 70    	sarb   %cl,0x70a96969(%rbx)
     796:	d9 d9                	(bad)  
     798:	07                   	(bad)  
     799:	89 8e 8e 33 a7 94    	mov    %ecx,-0x6b58cc72(%rsi)
     79f:	94                   	xchg   %eax,%esp
     7a0:	2d b6 9b 9b 3c       	sub    $0x3c9b9bb6,%eax
     7a5:	22 1e                	and    (%rsi),%bl
     7a7:	1e                   	(bad)  
     7a8:	15 92 87 87 c9       	adc    $0xc9878792,%eax
     7ad:	20 e9                	and    %ch,%cl
     7af:	e9 87 49 ce ce       	jmpq   ffffffffcece513b <AES_decrypt+0xffffffffcece28eb>
     7b4:	aa                   	stos   %al,%es:(%rdi)
     7b5:	ff 55 55             	callq  *0x55(%rbp)
     7b8:	50                   	push   %rax
     7b9:	78 28                	js     7e3 <Te3+0x3e3>
     7bb:	28 a5 7a df df 03    	sub    %ah,0x3dfdf7a(%rbp)
     7c1:	8f                   	(bad)  
     7c2:	8c 8c 59 f8 a1 a1 09 	mov    %cs,0x9a1a1f8(%rcx,%rbx,2)
     7c9:	80 89 89 1a 17 0d 0d 	orb    $0xd,0xd171a89(%rcx)
     7d0:	65 da bf bf d7 31 e6 	fidivrl %gs:-0x19ce2841(%rdi)
     7d7:	e6 84                	out    %al,$0x84
     7d9:	c6 42 42 d0          	movb   $0xd0,0x42(%rdx)
     7dd:	b8 68 68 82 c3       	mov    $0xc3826868,%eax
     7e2:	41                   	rex.B
     7e3:	41 29 b0 99 99 5a 77 	sub    %esi,0x775a9999(%r8)
     7ea:	2d 2d 1e 11 0f       	sub    $0xf111e2d,%eax
     7ef:	0f 7b                	(bad)  
     7f1:	cb                   	lret   
     7f2:	b0 b0                	mov    $0xb0,%al
     7f4:	a8 fc                	test   $0xfc,%al
     7f6:	54                   	push   %rsp
     7f7:	54                   	push   %rsp
     7f8:	6d                   	insl   (%dx),%es:(%rdi)
     7f9:	d6                   	(bad)  
     7fa:	bb bb 2c 3a 16       	mov    $0x163a2cbb,%ebx
     7ff:	16                   	(bad)  

0000000000000800 <Te0>:
     800:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     801:	63 63 c6             	movslq -0x3a(%rbx),%esp
     804:	84 7c 7c f8          	test   %bh,-0x8(%rsp,%rdi,2)
     808:	99                   	cltd   
     809:	77 77                	ja     882 <Te0+0x82>
     80b:	ee                   	out    %al,(%dx)
     80c:	8d 7b 7b             	lea    0x7b(%rbx),%edi
     80f:	f6                   	(bad)  
     810:	0d f2 f2 ff bd       	or     $0xbdfff2f2,%eax
     815:	6b 6b d6 b1          	imul   $0xffffffb1,-0x2a(%rbx),%ebp
     819:	6f                   	outsl  %ds:(%rsi),(%dx)
     81a:	6f                   	outsl  %ds:(%rsi),(%dx)
     81b:	de 54 c5 c5          	ficom  -0x3b(%rbp,%rax,8)
     81f:	91                   	xchg   %eax,%ecx
     820:	50                   	push   %rax
     821:	30 30                	xor    %dh,(%rax)
     823:	60                   	(bad)  
     824:	03 01                	add    (%rcx),%eax
     826:	01 02                	add    %eax,(%rdx)
     828:	a9 67 67 ce 7d       	test   $0x7dce6767,%eax
     82d:	2b 2b                	sub    (%rbx),%ebp
     82f:	56                   	push   %rsi
     830:	19 fe                	sbb    %edi,%esi
     832:	fe                   	(bad)  
     833:	e7 62                	out    %eax,$0x62
     835:	d7                   	xlat   %ds:(%rbx)
     836:	d7                   	xlat   %ds:(%rbx)
     837:	b5 e6                	mov    $0xe6,%ch
     839:	ab                   	stos   %eax,%es:(%rdi)
     83a:	ab                   	stos   %eax,%es:(%rdi)
     83b:	4d 9a                	rex.WRB (bad) 
     83d:	76 76                	jbe    8b5 <Te0+0xb5>
     83f:	ec                   	in     (%dx),%al
     840:	45 ca ca 8f          	rex.RB lret $0x8fca
     844:	9d                   	popfq  
     845:	82                   	(bad)  
     846:	82                   	(bad)  
     847:	1f                   	(bad)  
     848:	40 c9                	rex leaveq 
     84a:	c9                   	leaveq 
     84b:	89 87 7d 7d fa 15    	mov    %eax,0x15fa7d7d(%rdi)
     851:	fa                   	cli    
     852:	fa                   	cli    
     853:	ef                   	out    %eax,(%dx)
     854:	eb 59                	jmp    8af <Te0+0xaf>
     856:	59                   	pop    %rcx
     857:	b2 c9                	mov    $0xc9,%dl
     859:	47                   	rex.RXB
     85a:	47 8e 0b             	rex.RXB mov (%r11),%cs
     85d:	f0 f0 fb             	lock lock sti 
     860:	ec                   	in     (%dx),%al
     861:	ad                   	lods   %ds:(%rsi),%eax
     862:	ad                   	lods   %ds:(%rsi),%eax
     863:	41                   	rex.B
     864:	67 d4                	addr32 (bad) 
     866:	d4                   	(bad)  
     867:	b3 fd                	mov    $0xfd,%bl
     869:	a2 a2 5f ea af af 45 	movabs %al,0x9cbf45afafea5fa2
     870:	bf 9c 
     872:	9c                   	pushfq 
     873:	23 f7                	and    %edi,%esi
     875:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     876:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     877:	53                   	push   %rbx
     878:	96                   	xchg   %eax,%esi
     879:	72 72                	jb     8ed <Te0+0xed>
     87b:	e4 5b                	in     $0x5b,%al
     87d:	c0 c0 9b             	rol    $0x9b,%al
     880:	c2 b7 b7             	retq   $0xb7b7
     883:	75 1c                	jne    8a1 <Te0+0xa1>
     885:	fd                   	std    
     886:	fd                   	std    
     887:	e1 ae                	loope  837 <Te0+0x37>
     889:	93                   	xchg   %eax,%ebx
     88a:	93                   	xchg   %eax,%ebx
     88b:	3d 6a 26 26 4c       	cmp    $0x4c26266a,%eax
     890:	5a                   	pop    %rdx
     891:	36 36 6c             	ss ss insb (%dx),%es:(%rdi)
     894:	41 3f                	rex.B (bad) 
     896:	3f                   	(bad)  
     897:	7e 02                	jle    89b <Te0+0x9b>
     899:	f7 f7                	div    %edi
     89b:	f5                   	cmc    
     89c:	4f cc                	rex.WRXB int3 
     89e:	cc                   	int3   
     89f:	83 5c 34 34 68       	sbbl   $0x68,0x34(%rsp,%rsi,1)
     8a4:	f4                   	hlt    
     8a5:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     8a6:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     8a7:	51                   	push   %rcx
     8a8:	34 e5                	xor    $0xe5,%al
     8aa:	e5 d1                	in     $0xd1,%eax
     8ac:	08 f1                	or     %dh,%cl
     8ae:	f1                   	icebp  
     8af:	f9                   	stc    
     8b0:	93                   	xchg   %eax,%ebx
     8b1:	71 71                	jno    924 <Te0+0x124>
     8b3:	e2 73                	loop   928 <Te0+0x128>
     8b5:	d8 d8                	fcomp  %st(0)
     8b7:	ab                   	stos   %eax,%es:(%rdi)
     8b8:	53                   	push   %rbx
     8b9:	31 31                	xor    %esi,(%rcx)
     8bb:	62                   	(bad)  
     8bc:	3f                   	(bad)  
     8bd:	15 15 2a 0c 04       	adc    $0x40c2a15,%eax
     8c2:	04 08                	add    $0x8,%al
     8c4:	52                   	push   %rdx
     8c5:	c7 c7 95 65 23 23    	mov    $0x23236595,%edi
     8cb:	46 5e                	rex.RX pop %rsi
     8cd:	c3                   	retq   
     8ce:	c3                   	retq   
     8cf:	9d                   	popfq  
     8d0:	28 18                	sub    %bl,(%rax)
     8d2:	18 30                	sbb    %dh,(%rax)
     8d4:	a1 96 96 37 0f 05 05 	movabs 0xb50a05050f379696,%eax
     8db:	0a b5 
     8dd:	9a                   	(bad)  
     8de:	9a                   	(bad)  
     8df:	2f                   	(bad)  
     8e0:	09 07                	or     %eax,(%rdi)
     8e2:	07                   	(bad)  
     8e3:	0e                   	(bad)  
     8e4:	36 12 12             	adc    %ss:(%rdx),%dl
     8e7:	24 9b                	and    $0x9b,%al
     8e9:	80 80 1b 3d e2 e2 df 	addb   $0xdf,-0x1d1dc2e5(%rax)
     8f0:	26 eb eb             	es jmp 8de <Te0+0xde>
     8f3:	cd 69                	int    $0x69
     8f5:	27                   	(bad)  
     8f6:	27                   	(bad)  
     8f7:	4e cd b2             	rex.WRX int $0xb2
     8fa:	b2 7f                	mov    $0x7f,%dl
     8fc:	9f                   	lahf   
     8fd:	75 75                	jne    974 <Te0+0x174>
     8ff:	ea                   	(bad)  
     900:	1b 09                	sbb    (%rcx),%ecx
     902:	09 12                	or     %edx,(%rdx)
     904:	9e                   	sahf   
     905:	83 83 1d 74 2c 2c 58 	addl   $0x58,0x2c2c741d(%rbx)
     90c:	2e 1a 1a             	sbb    %cs:(%rdx),%bl
     90f:	34 2d                	xor    $0x2d,%al
     911:	1b 1b                	sbb    (%rbx),%ebx
     913:	36 b2 6e             	ss mov $0x6e,%dl
     916:	6e                   	outsb  %ds:(%rsi),(%dx)
     917:	dc ee                	fsubr  %st,%st(6)
     919:	5a                   	pop    %rdx
     91a:	5a                   	pop    %rdx
     91b:	b4 fb                	mov    $0xfb,%ah
     91d:	a0 a0 5b f6 52 52 a4 	movabs 0x3b4da45252f65ba0,%al
     924:	4d 3b 
     926:	3b 76 61             	cmp    0x61(%rsi),%esi
     929:	d6                   	(bad)  
     92a:	d6                   	(bad)  
     92b:	b7 ce                	mov    $0xce,%bh
     92d:	b3 b3                	mov    $0xb3,%bl
     92f:	7d 7b                	jge    9ac <Te0+0x1ac>
     931:	29 29                	sub    %ebp,(%rcx)
     933:	52                   	push   %rdx
     934:	3e e3 e3             	jrcxz,pt 91a <Te0+0x11a>
     937:	dd 71 2f             	fnsave 0x2f(%rcx)
     93a:	2f                   	(bad)  
     93b:	5e                   	pop    %rsi
     93c:	97                   	xchg   %eax,%edi
     93d:	84 84 13 f5 53 53 a6 	test   %al,-0x59acac0b(%rbx,%rdx,1)
     944:	68 d1 d1 b9 00       	pushq  $0xb9d1d1
     949:	00 00                	add    %al,(%rax)
     94b:	00 2c ed ed c1 60 20 	add    %ch,0x2060c1ed(,%rbp,8)
     952:	20 40 1f             	and    %al,0x1f(%rax)
     955:	fc                   	cld    
     956:	fc                   	cld    
     957:	e3 c8                	jrcxz  921 <Te0+0x121>
     959:	b1 b1                	mov    $0xb1,%cl
     95b:	79 ed                	jns    94a <Te0+0x14a>
     95d:	5b                   	pop    %rbx
     95e:	5b                   	pop    %rbx
     95f:	b6 be                	mov    $0xbe,%dh
     961:	6a 6a                	pushq  $0x6a
     963:	d4                   	(bad)  
     964:	46 cb                	rex.RX lret 
     966:	cb                   	lret   
     967:	8d                   	(bad)  
     968:	d9 be be 67 4b 39    	fnstcw 0x394b67be(%rsi)
     96e:	39 72 de             	cmp    %esi,-0x22(%rdx)
     971:	4a                   	rex.WX
     972:	4a 94                	rex.WX xchg %rax,%rsp
     974:	d4                   	(bad)  
     975:	4c                   	rex.WR
     976:	4c 98                	rex.WR cltq 
     978:	e8 58 58 b0 4a       	callq  4ab061d5 <AES_decrypt+0x4ab03985>
     97d:	cf                   	iret   
     97e:	cf                   	iret   
     97f:	85 6b d0             	test   %ebp,-0x30(%rbx)
     982:	d0 bb 2a ef ef c5    	sarb   -0x3a1010d6(%rbx)
     988:	e5 aa                	in     $0xaa,%eax
     98a:	aa                   	stos   %al,%es:(%rdi)
     98b:	4f 16                	rex.WRXB (bad) 
     98d:	fb                   	sti    
     98e:	fb                   	sti    
     98f:	ed                   	in     (%dx),%eax
     990:	c5 43 43             	(bad)  
     993:	86 d7                	xchg   %dl,%bh
     995:	4d                   	rex.WRB
     996:	4d 9a                	rex.WRB (bad) 
     998:	55                   	push   %rbp
     999:	33 33                	xor    (%rbx),%esi
     99b:	66 94                	xchg   %ax,%sp
     99d:	85 85 11 cf 45 45    	test   %eax,0x4545cf11(%rbp)
     9a3:	8a 10                	mov    (%rax),%dl
     9a5:	f9                   	stc    
     9a6:	f9                   	stc    
     9a7:	e9 06 02 02 04       	jmpq   4020bb2 <AES_decrypt+0x401e362>
     9ac:	81 7f 7f fe f0 50 50 	cmpl   $0x5050f0fe,0x7f(%rdi)
     9b3:	a0 44 3c 3c 78 ba 9f 	movabs 0x259f9fba783c3c44,%al
     9ba:	9f 25 
     9bc:	e3 a8                	jrcxz  966 <Te0+0x166>
     9be:	a8 4b                	test   $0x4b,%al
     9c0:	f3 51                	repz push %rcx
     9c2:	51                   	push   %rcx
     9c3:	a2 fe a3 a3 5d c0 40 	movabs %al,0x804040c05da3a3fe
     9ca:	40 80 
     9cc:	8a 8f 8f 05 ad 92    	mov    -0x6d52fa71(%rdi),%cl
     9d2:	92                   	xchg   %eax,%edx
     9d3:	3f                   	(bad)  
     9d4:	bc 9d 9d 21 48       	mov    $0x48219d9d,%esp
     9d9:	38 38                	cmp    %bh,(%rax)
     9db:	70 04                	jo     9e1 <Te0+0x1e1>
     9dd:	f5                   	cmc    
     9de:	f5                   	cmc    
     9df:	f1                   	icebp  
     9e0:	df bc bc 63 c1 b6 b6 	fistpll -0x49493e9d(%rsp,%rdi,4)
     9e7:	77 75                	ja     a5e <Te0+0x25e>
     9e9:	da da                	fcmovu %st(2),%st
     9eb:	af                   	scas   %es:(%rdi),%eax
     9ec:	63 21                	movslq (%rcx),%esp
     9ee:	21 42 30             	and    %eax,0x30(%rdx)
     9f1:	10 10                	adc    %dl,(%rax)
     9f3:	20 1a                	and    %bl,(%rdx)
     9f5:	ff                   	(bad)  
     9f6:	ff e5                	jmpq   *%rbp
     9f8:	0e                   	(bad)  
     9f9:	f3 f3 fd             	repz repz std 
     9fc:	6d                   	insl   (%dx),%es:(%rdi)
     9fd:	d2 d2                	rcl    %cl,%dl
     9ff:	bf 4c cd cd 81       	mov    $0x81cdcd4c,%edi
     a04:	14 0c                	adc    $0xc,%al
     a06:	0c 18                	or     $0x18,%al
     a08:	35 13 13 26 2f       	xor    $0x2f261313,%eax
     a0d:	ec                   	in     (%dx),%al
     a0e:	ec                   	in     (%dx),%al
     a0f:	c3                   	retq   
     a10:	e1 5f                	loope  a71 <Te0+0x271>
     a12:	5f                   	pop    %rdi
     a13:	be a2 97 97 35       	mov    $0x359797a2,%esi
     a18:	cc                   	int3   
     a19:	44                   	rex.R
     a1a:	44 88 39             	mov    %r15b,(%rcx)
     a1d:	17                   	(bad)  
     a1e:	17                   	(bad)  
     a1f:	2e 57                	cs push %rdi
     a21:	c4                   	(bad)  
     a22:	c4                   	(bad)  
     a23:	93                   	xchg   %eax,%ebx
     a24:	f2 a7                	repnz cmpsl %es:(%rdi),%ds:(%rsi)
     a26:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     a27:	55                   	push   %rbp
     a28:	82                   	(bad)  
     a29:	7e 7e                	jle    aa9 <Te0+0x2a9>
     a2b:	fc                   	cld    
     a2c:	47 3d 3d 7a ac 64    	rex.RXB cmp $0x64ac7a3d,%eax
     a32:	64 c8 e7 5d 5d       	fs enterq $0x5de7,$0x5d
     a37:	ba 2b 19 19 32       	mov    $0x3219192b,%edx
     a3c:	95                   	xchg   %eax,%ebp
     a3d:	73 73                	jae    ab2 <Te0+0x2b2>
     a3f:	e6 a0                	out    %al,$0xa0
     a41:	60                   	(bad)  
     a42:	60                   	(bad)  
     a43:	c0 98 81 81 19 d1 4f 	rcrb   $0x4f,-0x2ee67e7f(%rax)
     a4a:	4f 9e                	rex.WRXB sahf 
     a4c:	7f dc                	jg     a2a <Te0+0x22a>
     a4e:	dc a3 66 22 22 44    	fsubl  0x44222266(%rbx)
     a54:	7e 2a                	jle    a80 <Te0+0x280>
     a56:	2a 54 ab 90          	sub    -0x70(%rbx,%rbp,4),%dl
     a5a:	90                   	nop
     a5b:	3b 83 88 88 0b ca    	cmp    -0x35f47778(%rbx),%eax
     a61:	46                   	rex.RX
     a62:	46 8c 29             	rex.RX mov %gs,(%rcx)
     a65:	ee                   	out    %al,(%dx)
     a66:	ee                   	out    %al,(%dx)
     a67:	c7                   	(bad)  
     a68:	d3 b8 b8 6b 3c 14    	sarl   %cl,0x143c6bb8(%rax)
     a6e:	14 28                	adc    $0x28,%al
     a70:	79 de                	jns    a50 <Te0+0x250>
     a72:	de a7 e2 5e 5e bc    	fisub  -0x43a1a11e(%rdi)
     a78:	1d 0b 0b 16 76       	sbb    $0x76160b0b,%eax
     a7d:	db db                	fcmovnu %st(3),%st
     a7f:	ad                   	lods   %ds:(%rsi),%eax
     a80:	3b e0                	cmp    %eax,%esp
     a82:	e0 db                	loopne a5f <Te0+0x25f>
     a84:	56                   	push   %rsi
     a85:	32 32                	xor    (%rdx),%dh
     a87:	64 4e 3a 3a          	rex.WRX cmp %fs:(%rdx),%r15b
     a8b:	74 1e                	je     aab <Te0+0x2ab>
     a8d:	0a 0a                	or     (%rdx),%cl
     a8f:	14 db                	adc    $0xdb,%al
     a91:	49                   	rex.WB
     a92:	49 92                	xchg   %rax,%r10
     a94:	0a 06                	or     (%rsi),%al
     a96:	06                   	(bad)  
     a97:	0c 6c                	or     $0x6c,%al
     a99:	24 24                	and    $0x24,%al
     a9b:	48 e4 5c             	rex.W in $0x5c,%al
     a9e:	5c                   	pop    %rsp
     a9f:	b8 5d c2 c2 9f       	mov    $0x9fc2c25d,%eax
     aa4:	6e                   	outsb  %ds:(%rsi),(%dx)
     aa5:	d3 d3                	rcl    %cl,%ebx
     aa7:	bd ef ac ac 43       	mov    $0x43acacef,%ebp
     aac:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     aad:	62 62 c4 a8 91       	(bad)  {z}
     ab2:	91                   	xchg   %eax,%ecx
     ab3:	39 a4 95 95 31 37 e4 	cmp    %esp,-0x1bc8ce6b(%rbp,%rdx,4)
     aba:	e4 d3                	in     $0xd3,%al
     abc:	8b 79 79             	mov    0x79(%rcx),%edi
     abf:	f2 32 e7             	repnz xor %bh,%ah
     ac2:	e7 d5                	out    %eax,$0xd5
     ac4:	43 c8 c8 8b 59       	rex.XB enterq $0x8bc8,$0x59
     ac9:	37                   	(bad)  
     aca:	37                   	(bad)  
     acb:	6e                   	outsb  %ds:(%rsi),(%dx)
     acc:	b7 6d                	mov    $0x6d,%bh
     ace:	6d                   	insl   (%dx),%es:(%rdi)
     acf:	da 8c 8d 8d 01 64 d5 	fimull -0x2a9bfe73(%rbp,%rcx,4)
     ad6:	d5                   	(bad)  
     ad7:	b1 d2                	mov    $0xd2,%cl
     ad9:	4e                   	rex.WRX
     ada:	4e 9c                	rex.WRX pushfq 
     adc:	e0 a9                	loopne a87 <Te0+0x287>
     ade:	a9 49 b4 6c 6c       	test   $0x6c6cb449,%eax
     ae3:	d8 fa                	fdivr  %st(2),%st
     ae5:	56                   	push   %rsi
     ae6:	56                   	push   %rsi
     ae7:	ac                   	lods   %ds:(%rsi),%al
     ae8:	07                   	(bad)  
     ae9:	f4                   	hlt    
     aea:	f4                   	hlt    
     aeb:	f3 25 ea ea cf af    	repz and $0xafcfeaea,%eax
     af1:	65 65 ca 8e 7a       	gs gs lret $0x7a8e
     af6:	7a f4                	jp     aec <Te0+0x2ec>
     af8:	e9 ae ae 47 18       	jmpq   1847b9ab <AES_decrypt+0x1847915b>
     afd:	08 08                	or     %cl,(%rax)
     aff:	10 d5                	adc    %dl,%ch
     b01:	ba ba 6f 88 78       	mov    $0x78886fba,%edx
     b06:	78 f0                	js     af8 <Te0+0x2f8>
     b08:	6f                   	outsl  %ds:(%rsi),(%dx)
     b09:	25 25 4a 72 2e       	and    $0x2e724a25,%eax
     b0e:	2e 5c                	cs pop %rsp
     b10:	24 1c                	and    $0x1c,%al
     b12:	1c 38                	sbb    $0x38,%al
     b14:	f1                   	icebp  
     b15:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     b16:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     b17:	57                   	push   %rdi
     b18:	c7                   	(bad)  
     b19:	b4 b4                	mov    $0xb4,%ah
     b1b:	73 51                	jae    b6e <Te0+0x36e>
     b1d:	c6 c6 97             	mov    $0x97,%dh
     b20:	23 e8                	and    %eax,%ebp
     b22:	e8 cb 7c dd dd       	callq  ffffffffdddd87f2 <AES_decrypt+0xffffffffdddd5fa2>
     b27:	a1 9c 74 74 e8 21 1f 	movabs 0x3e1f1f21e874749c,%eax
     b2e:	1f 3e 
     b30:	dd 4b 4b             	fisttpll 0x4b(%rbx)
     b33:	96                   	xchg   %eax,%esi
     b34:	dc bd bd 61 86 8b    	fdivrl -0x74799e43(%rbp)
     b3a:	8b 0d 85 8a 8a 0f    	mov    0xf8a8a85(%rip),%ecx        # f8a95c5 <AES_decrypt+0xf8a6d75>
     b40:	90                   	nop
     b41:	70 70                	jo     bb3 <Te0+0x3b3>
     b43:	e0 42                	loopne b87 <Te0+0x387>
     b45:	3e 3e 7c c4          	ds jl,pt b0d <Te0+0x30d>
     b49:	b5 b5                	mov    $0xb5,%ch
     b4b:	71 aa                	jno    af7 <Te0+0x2f7>
     b4d:	66 66 cc             	data16 data16 int3 
     b50:	d8 48 48             	fmuls  0x48(%rax)
     b53:	90                   	nop
     b54:	05 03 03 06 01       	add    $0x1060303,%eax
     b59:	f6 f6                	div    %dh
     b5b:	f7 12                	notl   (%rdx)
     b5d:	0e                   	(bad)  
     b5e:	0e                   	(bad)  
     b5f:	1c a3                	sbb    $0xa3,%al
     b61:	61                   	(bad)  
     b62:	61                   	(bad)  
     b63:	c2 5f 35             	retq   $0x355f
     b66:	35 6a f9 57 57       	xor    $0x5757f96a,%eax
     b6b:	ae                   	scas   %es:(%rdi),%al
     b6c:	d0 b9 b9 69 91 86    	sarb   -0x796e9647(%rcx)
     b72:	86 17                	xchg   %dl,(%rdi)
     b74:	58                   	pop    %rax
     b75:	c1 c1 99             	rol    $0x99,%ecx
     b78:	27                   	(bad)  
     b79:	1d 1d 3a b9 9e       	sbb    $0x9eb93a1d,%eax
     b7e:	9e                   	sahf   
     b7f:	27                   	(bad)  
     b80:	38 e1                	cmp    %ah,%cl
     b82:	e1 d9                	loope  b5d <Te0+0x35d>
     b84:	13 f8                	adc    %eax,%edi
     b86:	f8                   	clc    
     b87:	eb b3                	jmp    b3c <Te0+0x33c>
     b89:	98                   	cwtl   
     b8a:	98                   	cwtl   
     b8b:	2b 33                	sub    (%rbx),%esi
     b8d:	11 11                	adc    %edx,(%rcx)
     b8f:	22 bb 69 69 d2 70    	and    0x70d26969(%rbx),%bh
     b95:	d9 d9                	(bad)  
     b97:	a9 89 8e 8e 07       	test   $0x78e8e89,%eax
     b9c:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     b9d:	94                   	xchg   %eax,%esp
     b9e:	94                   	xchg   %eax,%esp
     b9f:	33 b6 9b 9b 2d 22    	xor    0x222d9b9b(%rsi),%esi
     ba5:	1e                   	(bad)  
     ba6:	1e                   	(bad)  
     ba7:	3c 92                	cmp    $0x92,%al
     ba9:	87 87 15 20 e9 e9    	xchg   %eax,-0x1616dfeb(%rdi)
     baf:	c9                   	leaveq 
     bb0:	49 ce                	rex.WB (bad) 
     bb2:	ce                   	(bad)  
     bb3:	87 ff                	xchg   %edi,%edi
     bb5:	55                   	push   %rbp
     bb6:	55                   	push   %rbp
     bb7:	aa                   	stos   %al,%es:(%rdi)
     bb8:	78 28                	js     be2 <Te0+0x3e2>
     bba:	28 50 7a             	sub    %dl,0x7a(%rax)
     bbd:	df df                	(bad)  
     bbf:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     bc0:	8f                   	(bad)  
     bc1:	8c 8c 03 f8 a1 a1 59 	mov    %cs,0x59a1a1f8(%rbx,%rax,1)
     bc8:	80 89 89 09 17 0d 0d 	orb    $0xd,0xd170989(%rcx)
     bcf:	1a da                	sbb    %dl,%bl
     bd1:	bf bf 65 31 e6       	mov    $0xe63165bf,%edi
     bd6:	e6 d7                	out    %al,$0xd7
     bd8:	c6 42 42 84          	movb   $0x84,0x42(%rdx)
     bdc:	b8 68 68 d0 c3       	mov    $0xc3d06868,%eax
     be1:	41                   	rex.B
     be2:	41 82                	rex.B (bad) 
     be4:	b0 99                	mov    $0x99,%al
     be6:	99                   	cltd   
     be7:	29 77 2d             	sub    %esi,0x2d(%rdi)
     bea:	2d 5a 11 0f 0f       	sub    $0xf0f115a,%eax
     bef:	1e                   	(bad)  
     bf0:	cb                   	lret   
     bf1:	b0 b0                	mov    $0xb0,%al
     bf3:	7b fc                	jnp    bf1 <Te0+0x3f1>
     bf5:	54                   	push   %rsp
     bf6:	54                   	push   %rsp
     bf7:	a8 d6                	test   $0xd6,%al
     bf9:	bb bb 6d 3a 16       	mov    $0x163a6dbb,%ebx
     bfe:	16                   	(bad)  
     bff:	2c 63                	sub    $0x63,%al

0000000000000c00 <Te1>:
     c00:	63 63 c6             	movslq -0x3a(%rbx),%esp
     c03:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     c04:	7c 7c                	jl     c82 <Te1+0x82>
     c06:	f8                   	clc    
     c07:	84 77 77             	test   %dh,0x77(%rdi)
     c0a:	ee                   	out    %al,(%dx)
     c0b:	99                   	cltd   
     c0c:	7b 7b                	jnp    c89 <Te1+0x89>
     c0e:	f6                   	(bad)  
     c0f:	8d                   	(bad)  
     c10:	f2 f2 ff 0d 6b 6b d6 	repnz repnz decl -0x42299495(%rip)        # ffffffffbdd67783 <AES_decrypt+0xffffffffbdd64f33>
     c17:	bd 
     c18:	6f                   	outsl  %ds:(%rsi),(%dx)
     c19:	6f                   	outsl  %ds:(%rsi),(%dx)
     c1a:	de b1 c5 c5 91 54    	fidiv  0x5491c5c5(%rcx)
     c20:	30 30                	xor    %dh,(%rax)
     c22:	60                   	(bad)  
     c23:	50                   	push   %rax
     c24:	01 01                	add    %eax,(%rcx)
     c26:	02 03                	add    (%rbx),%al
     c28:	67 67 ce             	addr32 addr32 (bad) 
     c2b:	a9 2b 2b 56 7d       	test   $0x7d562b2b,%eax
     c30:	fe                   	(bad)  
     c31:	fe                   	(bad)  
     c32:	e7 19                	out    %eax,$0x19
     c34:	d7                   	xlat   %ds:(%rbx)
     c35:	d7                   	xlat   %ds:(%rbx)
     c36:	b5 62                	mov    $0x62,%ch
     c38:	ab                   	stos   %eax,%es:(%rdi)
     c39:	ab                   	stos   %eax,%es:(%rdi)
     c3a:	4d e6 76             	rex.WRB out %al,$0x76
     c3d:	76 ec                	jbe    c2b <Te1+0x2b>
     c3f:	9a                   	(bad)  
     c40:	ca ca 8f             	lret   $0x8fca
     c43:	45 82                	rex.RB (bad) 
     c45:	82                   	(bad)  
     c46:	1f                   	(bad)  
     c47:	9d                   	popfq  
     c48:	c9                   	leaveq 
     c49:	c9                   	leaveq 
     c4a:	89 40 7d             	mov    %eax,0x7d(%rax)
     c4d:	7d fa                	jge    c49 <Te1+0x49>
     c4f:	87 fa                	xchg   %edi,%edx
     c51:	fa                   	cli    
     c52:	ef                   	out    %eax,(%dx)
     c53:	15 59 59 b2 eb       	adc    $0xebb25959,%eax
     c58:	47                   	rex.RXB
     c59:	47 8e c9             	rex.RXB mov %r9d,%cs
     c5c:	f0 f0 fb             	lock lock sti 
     c5f:	0b ad ad 41 ec d4    	or     -0x2b13be53(%rbp),%ebp
     c65:	d4                   	(bad)  
     c66:	b3 67                	mov    $0x67,%bl
     c68:	a2 a2 5f fd af af 45 	movabs %al,0x9cea45afaffd5fa2
     c6f:	ea 9c 
     c71:	9c                   	pushfq 
     c72:	23 bf a4 a4 53 f7    	and    -0x8ac5b5c(%rdi),%edi
     c78:	72 72                	jb     cec <Te1+0xec>
     c7a:	e4 96                	in     $0x96,%al
     c7c:	c0 c0 9b             	rol    $0x9b,%al
     c7f:	5b                   	pop    %rbx
     c80:	b7 b7                	mov    $0xb7,%bh
     c82:	75 c2                	jne    c46 <Te1+0x46>
     c84:	fd                   	std    
     c85:	fd                   	std    
     c86:	e1 1c                	loope  ca4 <Te1+0xa4>
     c88:	93                   	xchg   %eax,%ebx
     c89:	93                   	xchg   %eax,%ebx
     c8a:	3d ae 26 26 4c       	cmp    $0x4c2626ae,%eax
     c8f:	6a 36                	pushq  $0x36
     c91:	36 6c                	ss insb (%dx),%es:(%rdi)
     c93:	5a                   	pop    %rdx
     c94:	3f                   	(bad)  
     c95:	3f                   	(bad)  
     c96:	7e 41                	jle    cd9 <Te1+0xd9>
     c98:	f7 f7                	div    %edi
     c9a:	f5                   	cmc    
     c9b:	02 cc                	add    %ah,%cl
     c9d:	cc                   	int3   
     c9e:	83 4f 34 34          	orl    $0x34,0x34(%rdi)
     ca2:	68 5c a5 a5 51       	pushq  $0x51a5a55c
     ca7:	f4                   	hlt    
     ca8:	e5 e5                	in     $0xe5,%eax
     caa:	d1                   	(bad)  
     cab:	34 f1                	xor    $0xf1,%al
     cad:	f1                   	icebp  
     cae:	f9                   	stc    
     caf:	08 71 71             	or     %dh,0x71(%rcx)
     cb2:	e2 93                	loop   c47 <Te1+0x47>
     cb4:	d8 d8                	fcomp  %st(0)
     cb6:	ab                   	stos   %eax,%es:(%rdi)
     cb7:	73 31                	jae    cea <Te1+0xea>
     cb9:	31 62 53             	xor    %esp,0x53(%rdx)
     cbc:	15 15 2a 3f 04       	adc    $0x43f2a15,%eax
     cc1:	04 08                	add    $0x8,%al
     cc3:	0c c7                	or     $0xc7,%al
     cc5:	c7                   	(bad)  
     cc6:	95                   	xchg   %eax,%ebp
     cc7:	52                   	push   %rdx
     cc8:	23 23                	and    (%rbx),%esp
     cca:	46                   	rex.RX
     ccb:	65 c3                	gs retq 
     ccd:	c3                   	retq   
     cce:	9d                   	popfq  
     ccf:	5e                   	pop    %rsi
     cd0:	18 18                	sbb    %bl,(%rax)
     cd2:	30 28                	xor    %ch,(%rax)
     cd4:	96                   	xchg   %eax,%esi
     cd5:	96                   	xchg   %eax,%esi
     cd6:	37                   	(bad)  
     cd7:	a1 05 05 0a 0f 9a 9a 	movabs 0xb52f9a9a0f0a0505,%eax
     cde:	2f b5 
     ce0:	07                   	(bad)  
     ce1:	07                   	(bad)  
     ce2:	0e                   	(bad)  
     ce3:	09 12                	or     %edx,(%rdx)
     ce5:	12 24 36             	adc    (%rsi,%rsi,1),%ah
     ce8:	80 80 1b 9b e2 e2 df 	addb   $0xdf,-0x1d1d64e5(%rax)
     cef:	3d eb eb cd 26       	cmp    $0x26cdebeb,%eax
     cf4:	27                   	(bad)  
     cf5:	27                   	(bad)  
     cf6:	4e 69 b2 b2 7f cd 75 	rex.WRX imul $0x99fea75,0x75cd7fb2(%rdx),%r14
     cfd:	75 ea 9f 09 
     d01:	09 12                	or     %edx,(%rdx)
     d03:	1b 83 83 1d 9e 2c    	sbb    0x2c9e1d83(%rbx),%eax
     d09:	2c 58                	sub    $0x58,%al
     d0b:	74 1a                	je     d27 <Te1+0x127>
     d0d:	1a 34 2e             	sbb    (%rsi,%rbp,1),%dh
     d10:	1b 1b                	sbb    (%rbx),%ebx
     d12:	36 2d 6e 6e dc b2    	ss sub $0xb2dc6e6e,%eax
     d18:	5a                   	pop    %rdx
     d19:	5a                   	pop    %rdx
     d1a:	b4 ee                	mov    $0xee,%ah
     d1c:	a0 a0 5b fb 52 52 a4 	movabs 0x3bf6a45252fb5ba0,%al
     d23:	f6 3b 
     d25:	3b 76 4d             	cmp    0x4d(%rsi),%esi
     d28:	d6                   	(bad)  
     d29:	d6                   	(bad)  
     d2a:	b7 61                	mov    $0x61,%bh
     d2c:	b3 b3                	mov    $0xb3,%bl
     d2e:	7d ce                	jge    cfe <Te1+0xfe>
     d30:	29 29                	sub    %ebp,(%rcx)
     d32:	52                   	push   %rdx
     d33:	7b e3                	jnp    d18 <Te1+0x118>
     d35:	e3 dd                	jrcxz  d14 <Te1+0x114>
     d37:	3e 2f                	ds (bad) 
     d39:	2f                   	(bad)  
     d3a:	5e                   	pop    %rsi
     d3b:	71 84                	jno    cc1 <Te1+0xc1>
     d3d:	84 13                	test   %dl,(%rbx)
     d3f:	97                   	xchg   %eax,%edi
     d40:	53                   	push   %rbx
     d41:	53                   	push   %rbx
     d42:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     d43:	f5                   	cmc    
     d44:	d1 d1                	rcl    %ecx
     d46:	b9 68 00 00 00       	mov    $0x68,%ecx
     d4b:	00 ed                	add    %ch,%ch
     d4d:	ed                   	in     (%dx),%eax
     d4e:	c1 2c 20 20          	shrl   $0x20,(%rax,%riz,1)
     d52:	40 60                	rex (bad) 
     d54:	fc                   	cld    
     d55:	fc                   	cld    
     d56:	e3 1f                	jrcxz  d77 <Te1+0x177>
     d58:	b1 b1                	mov    $0xb1,%cl
     d5a:	79 c8                	jns    d24 <Te1+0x124>
     d5c:	5b                   	pop    %rbx
     d5d:	5b                   	pop    %rbx
     d5e:	b6 ed                	mov    $0xed,%dh
     d60:	6a 6a                	pushq  $0x6a
     d62:	d4                   	(bad)  
     d63:	be cb cb 8d 46       	mov    $0x468dcbcb,%esi
     d68:	be be 67 d9 39       	mov    $0x39d967be,%esi
     d6d:	39 72 4b             	cmp    %esi,0x4b(%rdx)
     d70:	4a                   	rex.WX
     d71:	4a 94                	rex.WX xchg %rax,%rsp
     d73:	de 4c 4c 98          	fimul  -0x68(%rsp,%rcx,2)
     d77:	d4                   	(bad)  
     d78:	58                   	pop    %rax
     d79:	58                   	pop    %rax
     d7a:	b0 e8                	mov    $0xe8,%al
     d7c:	cf                   	iret   
     d7d:	cf                   	iret   
     d7e:	85 4a d0             	test   %ecx,-0x30(%rdx)
     d81:	d0 bb 6b ef ef c5    	sarb   -0x3a101095(%rbx)
     d87:	2a aa aa 4f e5 fb    	sub    -0x41ab056(%rdx),%ch
     d8d:	fb                   	sti    
     d8e:	ed                   	in     (%dx),%eax
     d8f:	16                   	(bad)  
     d90:	43                   	rex.XB
     d91:	43 86 c5             	rex.XB xchg %al,%r13b
     d94:	4d                   	rex.WRB
     d95:	4d 9a                	rex.WRB (bad) 
     d97:	d7                   	xlat   %ds:(%rbx)
     d98:	33 33                	xor    (%rbx),%esi
     d9a:	66 55                	push   %bp
     d9c:	85 85 11 94 45 45    	test   %eax,0x45459411(%rbp)
     da2:	8a cf                	mov    %bh,%cl
     da4:	f9                   	stc    
     da5:	f9                   	stc    
     da6:	e9 10 02 02 04       	jmpq   4020fbb <AES_decrypt+0x401e76b>
     dab:	06                   	(bad)  
     dac:	7f 7f                	jg     e2d <Te1+0x22d>
     dae:	fe 81 50 50 a0 f0    	incb   -0xf5fafb0(%rcx)
     db4:	3c 3c                	cmp    $0x3c,%al
     db6:	78 44                	js     dfc <Te1+0x1fc>
     db8:	9f                   	lahf   
     db9:	9f                   	lahf   
     dba:	25 ba a8 a8 4b       	and    $0x4ba8a8ba,%eax
     dbf:	e3 51                	jrcxz  e12 <Te1+0x212>
     dc1:	51                   	push   %rcx
     dc2:	a2 f3 a3 a3 5d fe 40 	movabs %al,0x804040fe5da3a3f3
     dc9:	40 80 
     dcb:	c0 8f 8f 05 8a 92 92 	rorb   $0x92,-0x6d75fa71(%rdi)
     dd2:	3f                   	(bad)  
     dd3:	ad                   	lods   %ds:(%rsi),%eax
     dd4:	9d                   	popfq  
     dd5:	9d                   	popfq  
     dd6:	21 bc 38 38 70 48 f5 	and    %edi,-0xab78fc8(%rax,%rdi,1)
     ddd:	f5                   	cmc    
     dde:	f1                   	icebp  
     ddf:	04 bc                	add    $0xbc,%al
     de1:	bc 63 df b6 b6       	mov    $0xb6b6df63,%esp
     de6:	77 c1                	ja     da9 <Te1+0x1a9>
     de8:	da da                	fcmovu %st(2),%st
     dea:	af                   	scas   %es:(%rdi),%eax
     deb:	75 21                	jne    e0e <Te1+0x20e>
     ded:	21 42 63             	and    %eax,0x63(%rdx)
     df0:	10 10                	adc    %dl,(%rax)
     df2:	20 30                	and    %dh,(%rax)
     df4:	ff                   	(bad)  
     df5:	ff e5                	jmpq   *%rbp
     df7:	1a f3                	sbb    %bl,%dh
     df9:	f3 fd                	repz std 
     dfb:	0e                   	(bad)  
     dfc:	d2 d2                	rcl    %cl,%dl
     dfe:	bf 6d cd cd 81       	mov    $0x81cdcd6d,%edi
     e03:	4c 0c 0c             	rex.WR or $0xc,%al
     e06:	18 14 13             	sbb    %dl,(%rbx,%rdx,1)
     e09:	13 26                	adc    (%rsi),%esp
     e0b:	35 ec ec c3 2f       	xor    $0x2fc3ecec,%eax
     e10:	5f                   	pop    %rdi
     e11:	5f                   	pop    %rdi
     e12:	be e1 97 97 35       	mov    $0x359797e1,%esi
     e17:	a2 44 44 88 cc 17 17 	movabs %al,0x392e1717cc884444
     e1e:	2e 39 
     e20:	c4                   	(bad)  
     e21:	c4                   	(bad)  
     e22:	93                   	xchg   %eax,%ebx
     e23:	57                   	push   %rdi
     e24:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     e25:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
     e26:	55                   	push   %rbp
     e27:	f2 7e 7e             	bnd jle ea8 <Te1+0x2a8>
     e2a:	fc                   	cld    
     e2b:	82                   	(bad)  
     e2c:	3d 3d 7a 47 64       	cmp    $0x64477a3d,%eax
     e31:	64 c8 ac 5d 5d       	fs enterq $0x5dac,$0x5d
     e36:	ba e7 19 19 32       	mov    $0x321919e7,%edx
     e3b:	2b 73 73             	sub    0x73(%rbx),%esi
     e3e:	e6 95                	out    %al,$0x95
     e40:	60                   	(bad)  
     e41:	60                   	(bad)  
     e42:	c0 a0 81 81 19 98 4f 	shlb   $0x4f,-0x67e67e7f(%rax)
     e49:	4f 9e                	rex.WRXB sahf 
     e4b:	d1 dc                	rcr    %esp
     e4d:	dc a3 7f 22 22 44    	fsubl  0x4422227f(%rbx)
     e53:	66 2a 2a             	data16 sub (%rdx),%ch
     e56:	54                   	push   %rsp
     e57:	7e 90                	jle    de9 <Te1+0x1e9>
     e59:	90                   	nop
     e5a:	3b ab 88 88 0b 83    	cmp    -0x7cf47778(%rbx),%ebp
     e60:	46                   	rex.RX
     e61:	46 8c ca             	rex.RX mov %cs,%edx
     e64:	ee                   	out    %al,(%dx)
     e65:	ee                   	out    %al,(%dx)
     e66:	c7                   	(bad)  
     e67:	29 b8 b8 6b d3 14    	sub    %edi,0x14d36bb8(%rax)
     e6d:	14 28                	adc    $0x28,%al
     e6f:	3c de                	cmp    $0xde,%al
     e71:	de a7 79 5e 5e bc    	fisub  -0x43a1a187(%rdi)
     e77:	e2 0b                	loop   e84 <Te1+0x284>
     e79:	0b 16                	or     (%rsi),%edx
     e7b:	1d db db ad 76       	sbb    $0x76addbdb,%eax
     e80:	e0 e0                	loopne e62 <Te1+0x262>
     e82:	db 3b                	fstpt  (%rbx)
     e84:	32 32                	xor    (%rdx),%dh
     e86:	64 56                	fs push %rsi
     e88:	3a 3a                	cmp    (%rdx),%bh
     e8a:	74 4e                	je     eda <Te1+0x2da>
     e8c:	0a 0a                	or     (%rdx),%cl
     e8e:	14 1e                	adc    $0x1e,%al
     e90:	49                   	rex.WB
     e91:	49 92                	xchg   %rax,%r10
     e93:	db 06                	fildl  (%rsi)
     e95:	06                   	(bad)  
     e96:	0c 0a                	or     $0xa,%al
     e98:	24 24                	and    $0x24,%al
     e9a:	48 6c                	rex.W insb (%dx),%es:(%rdi)
     e9c:	5c                   	pop    %rsp
     e9d:	5c                   	pop    %rsp
     e9e:	b8 e4 c2 c2 9f       	mov    $0x9fc2c2e4,%eax
     ea3:	5d                   	pop    %rbp
     ea4:	d3 d3                	rcl    %cl,%ebx
     ea6:	bd 6e ac ac 43       	mov    $0x43acac6e,%ebp
     eab:	ef                   	out    %eax,(%dx)
     eac:	62 62 c4 a6 91       	(bad)  {%k6}{z}
     eb1:	91                   	xchg   %eax,%ecx
     eb2:	39 a8 95 95 31 a4    	cmp    %ebp,-0x5bce6a6b(%rax)
     eb8:	e4 e4                	in     $0xe4,%al
     eba:	d3                   	(bad)  
     ebb:	37                   	(bad)  
     ebc:	79 79                	jns    f37 <Te1+0x337>
     ebe:	f2 8b e7             	repnz mov %edi,%esp
     ec1:	e7 d5                	out    %eax,$0xd5
     ec3:	32 c8                	xor    %al,%cl
     ec5:	c8 8b 43 37          	enterq $0x438b,$0x37
     ec9:	37                   	(bad)  
     eca:	6e                   	outsb  %ds:(%rsi),(%dx)
     ecb:	59                   	pop    %rcx
     ecc:	6d                   	insl   (%dx),%es:(%rdi)
     ecd:	6d                   	insl   (%dx),%es:(%rdi)
     ece:	da b7 8d 8d 01 8c    	fidivl -0x73fe7273(%rdi)
     ed4:	d5                   	(bad)  
     ed5:	d5                   	(bad)  
     ed6:	b1 64                	mov    $0x64,%cl
     ed8:	4e                   	rex.WRX
     ed9:	4e 9c                	rex.WRX pushfq 
     edb:	d2 a9 a9 49 e0 6c    	shrb   %cl,0x6ce049a9(%rcx)
     ee1:	6c                   	insb   (%dx),%es:(%rdi)
     ee2:	d8 b4 56 56 ac fa f4 	fdivs  -0xb0553aa(%rsi,%rdx,2)
     ee9:	f4                   	hlt    
     eea:	f3 07                	repz (bad) 
     eec:	ea                   	(bad)  
     eed:	ea                   	(bad)  
     eee:	cf                   	iret   
     eef:	25 65 65 ca af       	and    $0xafca6565,%eax
     ef4:	7a 7a                	jp     f70 <Te1+0x370>
     ef6:	f4                   	hlt    
     ef7:	8e ae ae 47 e9 08    	mov    0x8e947ae(%rsi),%gs
     efd:	08 10                	or     %dl,(%rax)
     eff:	18 ba ba 6f d5 78    	sbb    %bh,0x78d56fba(%rdx)
     f05:	78 f0                	js     ef7 <Te1+0x2f7>
     f07:	88 25 25 4a 6f 2e    	mov    %ah,0x2e6f4a25(%rip)        # 2e6f5932 <AES_decrypt+0x2e6f30e2>
     f0d:	2e 5c                	cs pop %rsp
     f0f:	72 1c                	jb     f2d <Te1+0x32d>
     f11:	1c 38                	sbb    $0x38,%al
     f13:	24 a6                	and    $0xa6,%al
     f15:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
     f16:	57                   	push   %rdi
     f17:	f1                   	icebp  
     f18:	b4 b4                	mov    $0xb4,%ah
     f1a:	73 c7                	jae    ee3 <Te1+0x2e3>
     f1c:	c6 c6 97             	mov    $0x97,%dh
     f1f:	51                   	push   %rcx
     f20:	e8 e8 cb 23 dd       	callq  ffffffffdd23db0d <AES_decrypt+0xffffffffdd23b2bd>
     f25:	dd a1 7c 74 74 e8    	frstor -0x178b8b84(%rcx)
     f2b:	9c                   	pushfq 
     f2c:	1f                   	(bad)  
     f2d:	1f                   	(bad)  
     f2e:	3e 21 4b 4b          	and    %ecx,%ds:0x4b(%rbx)
     f32:	96                   	xchg   %eax,%esi
     f33:	dd bd bd 61 dc 8b    	fnstsw -0x74239e43(%rbp)
     f39:	8b 0d 86 8a 8a 0f    	mov    0xf8a8a86(%rip),%ecx        # f8a99c5 <AES_decrypt+0xf8a7175>
     f3f:	85 70 70             	test   %esi,0x70(%rax)
     f42:	e0 90                	loopne ed4 <Te1+0x2d4>
     f44:	3e 3e 7c 42          	ds jl,pt f8a <Te1+0x38a>
     f48:	b5 b5                	mov    $0xb5,%ch
     f4a:	71 c4                	jno    f10 <Te1+0x310>
     f4c:	66 66 cc             	data16 data16 int3 
     f4f:	aa                   	stos   %al,%es:(%rdi)
     f50:	48                   	rex.W
     f51:	48 90                	rex.W nop
     f53:	d8 03                	fadds  (%rbx)
     f55:	03 06                	add    (%rsi),%eax
     f57:	05 f6 f6 f7 01       	add    $0x1f7f6f6,%eax
     f5c:	0e                   	(bad)  
     f5d:	0e                   	(bad)  
     f5e:	1c 12                	sbb    $0x12,%al
     f60:	61                   	(bad)  
     f61:	61                   	(bad)  
     f62:	c2 a3 35             	retq   $0x35a3
     f65:	35 6a 5f 57 57       	xor    $0x57575f6a,%eax
     f6a:	ae                   	scas   %es:(%rdi),%al
     f6b:	f9                   	stc    
     f6c:	b9 b9 69 d0 86       	mov    $0x86d069b9,%ecx
     f71:	86 17                	xchg   %dl,(%rdi)
     f73:	91                   	xchg   %eax,%ecx
     f74:	c1 c1 99             	rol    $0x99,%ecx
     f77:	58                   	pop    %rax
     f78:	1d 1d 3a 27 9e       	sbb    $0x9e273a1d,%eax
     f7d:	9e                   	sahf   
     f7e:	27                   	(bad)  
     f7f:	b9 e1 e1 d9 38       	mov    $0x38d9e1e1,%ecx
     f84:	f8                   	clc    
     f85:	f8                   	clc    
     f86:	eb 13                	jmp    f9b <Te1+0x39b>
     f88:	98                   	cwtl   
     f89:	98                   	cwtl   
     f8a:	2b b3 11 11 22 33    	sub    0x33221111(%rbx),%esi
     f90:	69 69 d2 bb d9 d9 a9 	imul   $0xa9d9d9bb,-0x2e(%rcx),%ebp
     f97:	70 8e                	jo     f27 <Te1+0x327>
     f99:	8e 07                	mov    (%rdi),%es
     f9b:	89 94 94 33 a7 9b 9b 	mov    %edx,-0x646458cd(%rsp,%rdx,4)
     fa2:	2d b6 1e 1e 3c       	sub    $0x3c1e1eb6,%eax
     fa7:	22 87 87 15 92 e9    	and    -0x166dea79(%rdi),%al
     fad:	e9 c9 20 ce ce       	jmpq   ffffffffcece307b <AES_decrypt+0xffffffffcece082b>
     fb2:	87 49 55             	xchg   %ecx,0x55(%rcx)
     fb5:	55                   	push   %rbp
     fb6:	aa                   	stos   %al,%es:(%rdi)
     fb7:	ff 28                	ljmp   *(%rax)
     fb9:	28 50 78             	sub    %dl,0x78(%rax)
     fbc:	df df                	(bad)  
     fbe:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
     fbf:	7a 8c                	jp     f4d <Te1+0x34d>
     fc1:	8c 03                	mov    %es,(%rbx)
     fc3:	8f                   	(bad)  
     fc4:	a1 a1 59 f8 89 89 09 	movabs 0xd80098989f859a1,%eax
     fcb:	80 0d 
     fcd:	0d 1a 17 bf bf       	or     $0xbfbf171a,%eax
     fd2:	65 da e6             	gs (bad) 
     fd5:	e6 d7                	out    %al,$0xd7
     fd7:	31 42 42             	xor    %eax,0x42(%rdx)
     fda:	84 c6                	test   %al,%dh
     fdc:	68 68 d0 b8 41       	pushq  $0x41b8d068
     fe1:	41 82                	rex.B (bad) 
     fe3:	c3                   	retq   
     fe4:	99                   	cltd   
     fe5:	99                   	cltd   
     fe6:	29 b0 2d 2d 5a 77    	sub    %esi,0x775a2d2d(%rax)
     fec:	0f                   	(bad)  
     fed:	0f 1e 11             	nopl   (%rcx)
     ff0:	b0 b0                	mov    $0xb0,%al
     ff2:	7b cb                	jnp    fbf <Te1+0x3bf>
     ff4:	54                   	push   %rsp
     ff5:	54                   	push   %rsp
     ff6:	a8 fc                	test   $0xfc,%al
     ff8:	bb bb 6d d6 16       	mov    $0x16d66dbb,%ebx
     ffd:	16                   	(bad)  
     ffe:	2c 3a                	sub    $0x3a,%al

0000000000001000 <rcon>:
    1000:	00 00                	add    %al,(%rax)
    1002:	00 01                	add    %al,(%rcx)
    1004:	00 00                	add    %al,(%rax)
    1006:	00 02                	add    %al,(%rdx)
    1008:	00 00                	add    %al,(%rax)
    100a:	00 04 00             	add    %al,(%rax,%rax,1)
    100d:	00 00                	add    %al,(%rax)
    100f:	08 00                	or     %al,(%rax)
    1011:	00 00                	add    %al,(%rax)
    1013:	10 00                	adc    %al,(%rax)
    1015:	00 00                	add    %al,(%rax)
    1017:	20 00                	and    %al,(%rax)
    1019:	00 00                	add    %al,(%rax)
    101b:	40 00 00             	add    %al,(%rax)
    101e:	00 80 00 00 00 1b    	add    %al,0x1b000000(%rax)
    1024:	00 00                	add    %al,(%rax)
    1026:	00 36                	add    %dh,(%rsi)
	...

0000000000001030 <Td0>:
    1030:	50                   	push   %rax
    1031:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    1032:	f4                   	hlt    
    1033:	51                   	push   %rcx
    1034:	53                   	push   %rbx
    1035:	65 41 7e c3          	gs rex.B jle ffc <Te1+0x3fc>
    1039:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    103a:	17                   	(bad)  
    103b:	1a 96 5e 27 3a cb    	sbb    -0x34c5d8a2(%rsi),%dl
    1041:	6b ab 3b f1 45 9d 1f 	imul   $0x1f,-0x62ba0ec5(%rbx),%ebp
    1048:	ab                   	stos   %eax,%es:(%rdi)
    1049:	58                   	pop    %rax
    104a:	fa                   	cli    
    104b:	ac                   	lods   %ds:(%rsi),%al
    104c:	93                   	xchg   %eax,%ebx
    104d:	03 e3                	add    %ebx,%esp
    104f:	4b 55                	rex.WXB push %r13
    1051:	fa                   	cli    
    1052:	30 20                	xor    %ah,(%rax)
    1054:	f6 6d 76             	imulb  0x76(%rbp)
    1057:	ad                   	lods   %ds:(%rsi),%eax
    1058:	91                   	xchg   %eax,%ecx
    1059:	76 cc                	jbe    1027 <rcon+0x27>
    105b:	88 25 4c 02 f5 fc    	mov    %ah,-0x30afdb4(%rip)        # fffffffffcf512ad <AES_decrypt+0xfffffffffcf4ea5d>
    1061:	d7                   	xlat   %ds:(%rbx)
    1062:	e5 4f                	in     $0x4f,%eax
    1064:	d7                   	xlat   %ds:(%rbx)
    1065:	cb                   	lret   
    1066:	2a c5                	sub    %ch,%al
    1068:	80 44 35 26 8f       	addb   $0x8f,0x26(%rbp,%rsi,1)
    106d:	a3 62 b5 49 5a b1 de 	movabs %eax,0x1b67deb15a49b562
    1074:	67 1b 
    1076:	ba 25 98 0e ea       	mov    $0xea0e9825,%edx
    107b:	45 e1 c0             	rex.RB loope 103e <Td0+0xe>
    107e:	fe                   	(bad)  
    107f:	5d                   	pop    %rbp
    1080:	02 75 2f             	add    0x2f(%rbp),%dh
    1083:	c3                   	retq   
    1084:	12 f0                	adc    %al,%dh
    1086:	4c 81 a3 97 46 8d c6 	rex.WR andq $0xffffffffe76bd3f9,-0x3972b969(%rbx)
    108d:	f9 d3 6b e7 
    1091:	5f                   	pop    %rdi
    1092:	8f 03                	popq   (%rbx)
    1094:	95                   	xchg   %eax,%ebp
    1095:	9c                   	pushfq 
    1096:	92                   	xchg   %eax,%edx
    1097:	15 eb 7a 6d bf       	adc    $0xbf6d7aeb,%eax
    109c:	da 59 52             	ficompl 0x52(%rcx)
    109f:	95                   	xchg   %eax,%ebp
    10a0:	2d 83 be d4 d3       	sub    $0xd3d4be83,%eax
    10a5:	21 74 58 29          	and    %esi,0x29(%rax,%rbx,2)
    10a9:	69 e0 49 44 c8 c9    	imul   $0xc9c84449,%eax,%esp
    10af:	8e 6a 89             	mov    -0x77(%rdx),%gs
    10b2:	c2 75 78             	retq   $0x7875
    10b5:	79 8e                	jns    1045 <Td0+0x15>
    10b7:	f4                   	hlt    
    10b8:	6b 3e 58             	imul   $0x58,(%rsi),%edi
    10bb:	99                   	cltd   
    10bc:	dd 71 b9             	fnsave -0x47(%rcx)
    10bf:	27                   	(bad)  
    10c0:	b6 4f                	mov    $0x4f,%dh
    10c2:	e1 be                	loope  1082 <Td0+0x52>
    10c4:	17                   	(bad)  
    10c5:	ad                   	lods   %ds:(%rsi),%eax
    10c6:	88 f0                	mov    %dh,%al
    10c8:	66 ac                	data16 lods %ds:(%rsi),%al
    10ca:	20 c9                	and    %cl,%cl
    10cc:	b4 3a                	mov    $0x3a,%ah
    10ce:	ce                   	(bad)  
    10cf:	7d 18                	jge    10e9 <Td0+0xb9>
    10d1:	4a df 63 82          	rex.WX fbld -0x7e(%rbx)
    10d5:	31 1a                	xor    %ebx,(%rdx)
    10d7:	e5 60                	in     $0x60,%eax
    10d9:	33 51 97             	xor    -0x69(%rcx),%edx
    10dc:	45 7f 53             	rex.RB jg 1132 <Td0+0x102>
    10df:	62                   	(bad)  {%k6}{z}
    10e0:	e0 77                	loopne 1159 <Td0+0x129>
    10e2:	64 b1 84             	fs mov $0x84,%cl
    10e5:	ae                   	scas   %es:(%rdi),%al
    10e6:	6b bb 1c a0 81 fe 94 	imul   $0xffffff94,-0x17e5fe4(%rbx),%edi
    10ed:	2b 08                	sub    (%rax),%ecx
    10ef:	f9                   	stc    
    10f0:	58                   	pop    %rax
    10f1:	68 48 70 19 fd       	pushq  $0xfffffffffd197048
    10f6:	45 8f 87 6c de 94 b7 	rex.RB popq -0x486b2194(%r15)
    10fd:	f8                   	clc    
    10fe:	7b 52                	jnp    1152 <Td0+0x122>
    1100:	23 d3                	and    %ebx,%edx
    1102:	73 ab                	jae    10af <Td0+0x7f>
    1104:	e2 02                	loop   1108 <Td0+0xd8>
    1106:	4b 72 57             	rex.WXB jb 1160 <Td0+0x130>
    1109:	8f                   	(bad)  
    110a:	1f                   	(bad)  
    110b:	e3 2a                	jrcxz  1137 <Td0+0x107>
    110d:	ab                   	stos   %eax,%es:(%rdi)
    110e:	55                   	push   %rbp
    110f:	66 07                	data16 (bad) 
    1111:	28 eb                	sub    %ch,%bl
    1113:	b2 03                	mov    $0x3,%dl
    1115:	c2 b5 2f             	retq   $0x2fb5
    1118:	9a                   	(bad)  
    1119:	7b c5                	jnp    10e0 <Td0+0xb0>
    111b:	86 a5 08 37 d3 f2    	xchg   %ah,-0xd2cc8f8(%rbp)
    1121:	87 28                	xchg   %ebp,(%rax)
    1123:	30 b2 a5 bf 23 ba    	xor    %dh,-0x45dc405b(%rdx)
    1129:	6a 03                	pushq  $0x3
    112b:	02 5c 82 16          	add    0x16(%rdx,%rax,4),%bl
    112f:	ed                   	in     (%dx),%eax
    1130:	2b 1c cf             	sub    (%rdi,%rcx,8),%ebx
    1133:	8a 92 b4 79 a7 f0    	mov    -0xf58864c(%rdx),%dl
    1139:	f2 07                	repnz (bad) 
    113b:	f3 a1 e2 69 4e cd f4 	repz movabs 0xd565daf4cd4e69e2,%eax
    1142:	da 65 d5 
    1145:	be 05 06 1f 62       	mov    $0x621f0605,%esi
    114a:	34 d1                	xor    $0xd1,%al
    114c:	8a fe                	mov    %dh,%bh
    114e:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    114f:	c4                   	(bad)  
    1150:	9d                   	popfq  
    1151:	53                   	push   %rbx
    1152:	2e 34 a0             	cs xor $0xa0,%al
    1155:	55                   	push   %rbp
    1156:	f3 a2 32 e1 8a 05 75 	repz movabs %al,0xa4f6eb75058ae132
    115d:	eb f6 a4 
    1160:	39 ec                	cmp    %ebp,%esp
    1162:	83 0b aa             	orl    $0xffffffaa,(%rbx)
    1165:	ef                   	out    %eax,(%dx)
    1166:	60                   	(bad)  
    1167:	40 06                	rex (bad) 
    1169:	9f                   	lahf   
    116a:	71 5e                	jno    11ca <Td0+0x19a>
    116c:	51                   	push   %rcx
    116d:	10 6e bd             	adc    %ch,-0x43(%rsi)
    1170:	f9                   	stc    
    1171:	8a 21                	mov    (%rcx),%ah
    1173:	3e 3d 06 dd 96 ae    	ds cmp $0xae96dd06,%eax
    1179:	05 3e dd 46 bd       	add    $0xbd46dd3e,%eax
    117e:	e6 4d                	out    %al,$0x4d
    1180:	b5 8d                	mov    $0x8d,%ch
    1182:	54                   	push   %rsp
    1183:	91                   	xchg   %eax,%ecx
    1184:	05 5d c4 71 6f       	add    $0x6f71c45d,%eax
    1189:	d4                   	(bad)  
    118a:	06                   	(bad)  
    118b:	04 ff                	add    $0xff,%al
    118d:	15 50 60 24 fb       	adc    $0xfb246050,%eax
    1192:	98                   	cwtl   
    1193:	19 97 e9 bd d6 cc    	sbb    %edx,-0x33294217(%rdi)
    1199:	43                   	rex.XB
    119a:	40 89 77 9e          	rex mov %esi,-0x62(%rdi)
    119e:	d9 67 bd             	fldenv -0x43(%rdi)
    11a1:	42 e8 b0 88 8b 89    	rex.X callq ffffffff898b9a57 <AES_decrypt+0xffffffff898b7207>
    11a7:	07                   	(bad)  
    11a8:	38 5b 19             	cmp    %bl,0x19(%rbx)
    11ab:	e7 db                	out    %eax,$0xdb
    11ad:	ee                   	out    %al,(%dx)
    11ae:	c8 79 47 0a          	enterq $0x4779,$0xa
    11b2:	7c a1                	jl     1155 <Td0+0x125>
    11b4:	e9 0f 42 7c c9       	jmpq   ffffffffc97c53c8 <AES_decrypt+0xffffffffc97c2b78>
    11b9:	1e                   	(bad)  
    11ba:	84 f8                	test   %bh,%al
    11bc:	00 00                	add    %al,(%rax)
    11be:	00 00                	add    %al,(%rax)
    11c0:	83 86 80 09 48 ed 2b 	addl   $0x2b,-0x12b7f680(%rsi)
    11c7:	32 ac 70 11 1e 4e 72 	xor    0x724e1e11(%rax,%rsi,2),%ch
    11ce:	5a                   	pop    %rdx
    11cf:	6c                   	insb   (%dx),%es:(%rdi)
    11d0:	fb                   	sti    
    11d1:	ff 0e                	decl   (%rsi)
    11d3:	fd                   	std    
    11d4:	56                   	push   %rsi
    11d5:	38 85 0f 1e d5 ae    	cmp    %al,-0x512ae1f1(%rbp)
    11db:	3d 27 39 2d 36       	cmp    $0x362d3927,%eax
    11e0:	64 d9 0f             	(bad)  %fs:(%rdi)
    11e3:	0a 21                	or     (%rcx),%ah
    11e5:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    11e6:	5c                   	pop    %rsp
    11e7:	68 d1 54 5b 9b       	pushq  $0xffffffff9b5b54d1
    11ec:	3a 2e                	cmp    (%rsi),%ch
    11ee:	36 24 b1             	ss and $0xb1,%al
    11f1:	67 0a 0c 0f          	or     (%edi,%ecx,1),%cl
    11f5:	e7 57                	out    %eax,$0x57
    11f7:	93                   	xchg   %eax,%ebx
    11f8:	d2 96 ee b4 9e 91    	rclb   %cl,-0x6e614b12(%rsi)
    11fe:	9b                   	fwait
    11ff:	1b 4f c5             	sbb    -0x3b(%rdi),%ecx
    1202:	c0 80 a2 20 dc 61 69 	rolb   $0x69,0x61dc20a2(%rax)
    1209:	4b 77 5a             	rex.WXB ja 1266 <Td0+0x236>
    120c:	16                   	(bad)  
    120d:	1a 12                	sbb    (%rdx),%dl
    120f:	1c 0a                	sbb    $0xa,%al
    1211:	ba 93 e2 e5 2a       	mov    $0x2ae5e293,%edx
    1216:	a0 c0 43 e0 22 3c 1d 	movabs 0x1b171d3c22e043c0,%al
    121d:	17 1b 
    121f:	12 0b                	adc    (%rbx),%cl
    1221:	0d 09 0e ad c7       	or     $0xc7ad0e09,%eax
    1226:	8b f2                	mov    %edx,%esi
    1228:	b9 a8 b6 2d c8       	mov    $0xc82db6a8,%ecx
    122d:	a9 1e 14 85 19       	test   $0x1985141e,%eax
    1232:	f1                   	icebp  
    1233:	57                   	push   %rdi
    1234:	4c 07                	rex.WR (bad) 
    1236:	75 af                	jne    11e7 <Td0+0x1b7>
    1238:	bb dd 99 ee fd       	mov    $0xfdee99dd,%ebx
    123d:	60                   	(bad)  
    123e:	7f a3                	jg     11e3 <Td0+0x1b3>
    1240:	9f                   	lahf   
    1241:	26 01 f7             	es add %esi,%edi
    1244:	bc f5 72 5c c5       	mov    $0xc55c72f5,%esp
    1249:	3b 66 44             	cmp    0x44(%rsi),%esp
    124c:	34 7e                	xor    $0x7e,%al
    124e:	fb                   	sti    
    124f:	5b                   	pop    %rbx
    1250:	76 29                	jbe    127b <Td0+0x24b>
    1252:	43 8b dc             	rex.XB mov %r12d,%ebx
    1255:	c6                   	(bad)  
    1256:	23 cb                	and    %ebx,%ecx
    1258:	68 fc ed b6 63       	pushq  $0x63b6edfc
    125d:	f1                   	icebp  
    125e:	e4 b8                	in     $0xb8,%al
    1260:	ca dc 31             	lret   $0x31dc
    1263:	d7                   	xlat   %ds:(%rbx)
    1264:	10 85 63 42 40 22    	adc    %al,0x22404263(%rbp)
    126a:	97                   	xchg   %eax,%edi
    126b:	13 20                	adc    (%rax),%esp
    126d:	11 c6                	adc    %eax,%esi
    126f:	84 7d 24             	test   %bh,0x24(%rbp)
    1272:	4a 85 f8             	rex.WX test %rdi,%rax
    1275:	3d bb d2 11 32       	cmp    $0x3211d2bb,%eax
    127a:	f9                   	stc    
    127b:	ae                   	scas   %es:(%rdi),%al
    127c:	6d                   	insl   (%dx),%es:(%rdi)
    127d:	a1 29 c7 4b 2f 9e 1d 	movabs 0x30f31d9e2f4bc729,%eax
    1284:	f3 30 
    1286:	b2 dc                	mov    $0xdc,%dl
    1288:	ec                   	in     (%dx),%al
    1289:	52                   	push   %rdx
    128a:	86 0d d0 e3 c1 77    	xchg   %cl,0x77c1e3d0(%rip)        # 77c1f660 <AES_decrypt+0x77c1ce10>
    1290:	6c                   	insb   (%dx),%es:(%rdi)
    1291:	16                   	(bad)  
    1292:	b3 2b                	mov    $0x2b,%bl
    1294:	99                   	cltd   
    1295:	b9 70 a9 fa 48       	mov    $0x48faa970,%ecx
    129a:	94                   	xchg   %eax,%esp
    129b:	11 22                	adc    %esp,(%rdx)
    129d:	64 e9 47 c4 8c fc    	fs jmpq fffffffffc8cd6ea <AES_decrypt+0xfffffffffc8cae9a>
    12a3:	a8 1a                	test   $0x1a,%al
    12a5:	3f                   	(bad)  
    12a6:	f0 a0 d8 2c 7d 56 ef 	lock movabs 0x223390ef567d2cd8,%al
    12ad:	90 33 22 
    12b0:	c7                   	(bad)  
    12b1:	4e                   	rex.WRX
    12b2:	49 87 c1             	xchg   %rax,%r9
    12b5:	d1 38                	sarl   (%rax)
    12b7:	d9 fe                	fsin   
    12b9:	a2 ca 8c 36 0b d4 98 	movabs %al,0x81cf98d40b368cca
    12c0:	cf 81 
    12c2:	f5                   	cmc    
    12c3:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    12c4:	28 de                	sub    %bl,%dh
    12c6:	7a a5                	jp     126d <Td0+0x23d>
    12c8:	26 8e b7 da a4 bf ad 	mov    %es:-0x52405b26(%rdi),%?
    12cf:	3f                   	(bad)  
    12d0:	e4 9d                	in     $0x9d,%al
    12d2:	3a 2c 0d 92 78 50 9b 	cmp    -0x64af876e(,%rcx,1),%ch
    12d9:	cc                   	int3   
    12da:	5f                   	pop    %rdi
    12db:	6a 62                	pushq  $0x62
    12dd:	46 7e 54             	rex.RX jle 1334 <Td0+0x304>
    12e0:	c2 13 8d             	retq   $0x8d13
    12e3:	f6 e8                	imul   %al
    12e5:	b8 d8 90 5e f7       	mov    $0xf75e90d8,%eax
    12ea:	39 2e                	cmp    %ebp,(%rsi)
    12ec:	f5                   	cmc    
    12ed:	af                   	scas   %es:(%rdi),%eax
    12ee:	c3                   	retq   
    12ef:	82                   	(bad)  
    12f0:	be 80 5d 9f 7c       	mov    $0x7c9f5d80,%esi
    12f5:	93                   	xchg   %eax,%ebx
    12f6:	d0 69 a9             	shrb   -0x57(%rcx)
    12f9:	2d d5 6f b3 12       	sub    $0x12b36fd5,%eax
    12fe:	25 cf 3b 99 ac       	and    $0xac993bcf,%eax
    1303:	c8 a7 7d 18          	enterq $0x7da7,$0x18
    1307:	10 6e 63             	adc    %ch,0x63(%rsi)
    130a:	9c                   	pushfq 
    130b:	e8 7b bb 3b db       	callq  ffffffffdb3bce8b <AES_decrypt+0xffffffffdb3ba63b>
    1310:	09 78 26             	or     %edi,0x26(%rax)
    1313:	cd f4                	int    $0xf4
    1315:	18 59 6e             	sbb    %bl,0x6e(%rcx)
    1318:	01 b7 9a ec a8 9a    	add    %esi,-0x65571366(%rdi)
    131e:	4f 83 65 6e 95       	rex.WRXB andq $0xffffffffffffff95,0x6e(%r13)
    1323:	e6 7e                	out    %al,$0x7e
    1325:	e6 ff                	out    %al,$0xff
    1327:	aa                   	stos   %al,%es:(%rdi)
    1328:	08 cf                	or     %cl,%bh
    132a:	bc 21 e6 e8 15       	mov    $0x15e8e621,%esp
    132f:	ef                   	out    %eax,(%dx)
    1330:	d9 9b e7 ba ce 36    	fstps  0x36cebae7(%rbx)
    1336:	6f                   	outsl  %ds:(%rsi),(%dx)
    1337:	4a d4                	rex.WX (bad) 
    1339:	09 9f ea d6 7c b0    	or     %ebx,-0x4f832916(%rdi)
    133f:	29 af b2 a4 31 31    	sub    %ebp,0x3131a4b2(%rdi)
    1345:	23 3f                	and    (%rdi),%edi
    1347:	2a 30                	sub    (%rax),%dh
    1349:	94                   	xchg   %eax,%esp
    134a:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    134b:	c6 c0 66             	mov    $0x66,%al
    134e:	a2 35 37 bc 4e 74 a6 	movabs %al,0x82caa6744ebc3735
    1355:	ca 82 
    1357:	fc                   	cld    
    1358:	b0 d0                	mov    $0xd0,%al
    135a:	90                   	nop
    135b:	e0 15                	loopne 1372 <Td0+0x342>
    135d:	d8 a7 33 4a 98 04    	fsubs  0x4984a33(%rdi)
    1363:	f1                   	icebp  
    1364:	f7 da                	neg    %edx
    1366:	ec                   	in     (%dx),%al
    1367:	41 0e                	rex.B (bad) 
    1369:	50                   	push   %rax
    136a:	cd 7f                	int    $0x7f
    136c:	2f                   	(bad)  
    136d:	f6 91 17 8d d6 4d    	notb   0x4dd68d17(%rcx)
    1373:	76 4d                	jbe    13c2 <Td0+0x392>
    1375:	b0 ef                	mov    $0xef,%al
    1377:	43 54                	rex.XB push %r12
    1379:	4d aa                	rex.WRB stos %al,%es:(%rdi)
    137b:	cc                   	int3   
    137c:	df 04 96             	fild   (%rsi,%rdx,4)
    137f:	e4 e3                	in     $0xe3,%al
    1381:	b5 d1                	mov    $0xd1,%ch
    1383:	9e                   	sahf   
    1384:	1b 88 6a 4c b8 1f    	sbb    0x1fb84c6a(%rax),%ecx
    138a:	2c c1                	sub    $0xc1,%al
    138c:	7f 51                	jg     13df <Td0+0x3af>
    138e:	65 46 04 ea          	gs rex.RX add $0xea,%al
    1392:	5e                   	pop    %rsi
    1393:	9d                   	popfq  
    1394:	5d                   	pop    %rbp
    1395:	35 8c 01 73 74       	xor    $0x7473018c,%eax
    139a:	87 fa                	xchg   %edi,%edx
    139c:	2e 41 0b fb          	cs or  %r11d,%edi
    13a0:	5a                   	pop    %rdx
    13a1:	1d 67 b3 52 d2       	sbb    $0xd252b367,%eax
    13a6:	db 92 33 56 10 e9    	fistl  -0x16efa9cd(%rdx)
    13ac:	13 47 d6             	adc    -0x2a(%rdi),%eax
    13af:	6d                   	insl   (%dx),%es:(%rdi)
    13b0:	8c 61 d7             	mov    %fs,-0x29(%rcx)
    13b3:	9a                   	(bad)  
    13b4:	7a 0c                	jp     13c2 <Td0+0x392>
    13b6:	a1 37 8e 14 f8 59 89 	movabs 0x133c8959f8148e37,%eax
    13bd:	3c 13 
    13bf:	eb ee                	jmp    13af <Td0+0x37f>
    13c1:	27                   	(bad)  
    13c2:	a9 ce 35 c9 61       	test   $0x61c935ce,%eax
    13c7:	b7 ed                	mov    $0xed,%bh
    13c9:	e5 1c                	in     $0x1c,%eax
    13cb:	e1 3c                	loope  1409 <Td0+0x3d9>
    13cd:	b1 47                	mov    $0x47,%cl
    13cf:	7a 59                	jp     142a <Td0+0x3fa>
    13d1:	df d2                	(bad)  
    13d3:	9c                   	pushfq 
    13d4:	3f                   	(bad)  
    13d5:	73 f2                	jae    13c9 <Td0+0x399>
    13d7:	55                   	push   %rbp
    13d8:	79 ce                	jns    13a8 <Td0+0x378>
    13da:	14 18                	adc    $0x18,%al
    13dc:	bf 37 c7 73 ea       	mov    $0xea73c737,%edi
    13e1:	cd f7                	int    $0xf7
    13e3:	53                   	push   %rbx
    13e4:	5b                   	pop    %rbx
    13e5:	aa                   	stos   %al,%es:(%rdi)
    13e6:	fd                   	std    
    13e7:	5f                   	pop    %rdi
    13e8:	14 6f                	adc    $0x6f,%al
    13ea:	3d df 86 db 44       	cmp    $0x44db86df,%eax
    13ef:	78 81                	js     1372 <Td0+0x342>
    13f1:	f3 af                	repz scas %es:(%rdi),%eax
    13f3:	ca 3e c4             	lret   $0xc43e
    13f6:	68 b9 2c 34 24       	pushq  $0x24342cb9
    13fb:	38 5f 40             	cmp    %bl,0x40(%rdi)
    13fe:	a3 c2 72 c3 1d 16 0c 	movabs %eax,0xe2250c161dc372c2
    1405:	25 e2 
    1407:	bc 8b 49 3c 28       	mov    $0x283c498b,%esp
    140c:	41 95                	xchg   %eax,%r13d
    140e:	0d ff 71 01 a8       	or     $0xa80171ff,%eax
    1413:	39 de                	cmp    %ebx,%esi
    1415:	b3 0c                	mov    $0xc,%bl
    1417:	08 9c e4 b4 d8 90 c1 	or     %bl,-0x3e6f274c(%rsp,%riz,8)
    141e:	56                   	push   %rsi
    141f:	64 61                	fs (bad) 
    1421:	84 cb                	test   %cl,%bl
    1423:	7b 70                	jnp    1495 <Td1+0x65>
    1425:	b6 32                	mov    $0x32,%dh
    1427:	d5                   	(bad)  
    1428:	74 5c                	je     1486 <Td1+0x56>
    142a:	6c                   	insb   (%dx),%es:(%rdi)
    142b:	48                   	rex.W
    142c:	42 57                	rex.X push %rdi
    142e:	b8 d0 a7 f4 51       	mov    $0x51f4a7d0,%eax

0000000000001430 <Td1>:
    1430:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    1431:	f4                   	hlt    
    1432:	51                   	push   %rcx
    1433:	50                   	push   %rax
    1434:	65 41 7e 53          	gs rex.B jle 148b <Td1+0x5b>
    1438:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    1439:	17                   	(bad)  
    143a:	1a c3                	sbb    %bl,%al
    143c:	5e                   	pop    %rsi
    143d:	27                   	(bad)  
    143e:	3a 96 6b ab 3b cb    	cmp    -0x34c45495(%rsi),%dl
    1444:	45 9d                	rex.RB popfq 
    1446:	1f                   	(bad)  
    1447:	f1                   	icebp  
    1448:	58                   	pop    %rax
    1449:	fa                   	cli    
    144a:	ac                   	lods   %ds:(%rsi),%al
    144b:	ab                   	stos   %eax,%es:(%rdi)
    144c:	03 e3                	add    %ebx,%esp
    144e:	4b 93                	rex.WXB xchg %rax,%r11
    1450:	fa                   	cli    
    1451:	30 20                	xor    %ah,(%rax)
    1453:	55                   	push   %rbp
    1454:	6d                   	insl   (%dx),%es:(%rdi)
    1455:	76 ad                	jbe    1404 <Td0+0x3d4>
    1457:	f6 76 cc             	divb   -0x34(%rsi)
    145a:	88 91 4c 02 f5 25    	mov    %dl,0x25f5024c(%rcx)
    1460:	d7                   	xlat   %ds:(%rbx)
    1461:	e5 4f                	in     $0x4f,%eax
    1463:	fc                   	cld    
    1464:	cb                   	lret   
    1465:	2a c5                	sub    %ch,%al
    1467:	d7                   	xlat   %ds:(%rbx)
    1468:	44 35 26 80 a3 62    	rex.R xor $0x62a38026,%eax
    146e:	b5 8f                	mov    $0x8f,%ch
    1470:	5a                   	pop    %rdx
    1471:	b1 de                	mov    $0xde,%cl
    1473:	49 1b ba 25 67 0e ea 	sbb    -0x15f198db(%r10),%rdi
    147a:	45 98                	rex.RB cwtl 
    147c:	c0 fe 5d             	sar    $0x5d,%dh
    147f:	e1 75                	loope  14f6 <Td1+0xc6>
    1481:	2f                   	(bad)  
    1482:	c3                   	retq   
    1483:	02 f0                	add    %al,%dh
    1485:	4c 81 12 97 46 8d a3 	rex.WR adcq $0xffffffffa38d4697,(%rdx)
    148c:	f9                   	stc    
    148d:	d3 6b c6             	shrl   %cl,-0x3a(%rbx)
    1490:	5f                   	pop    %rdi
    1491:	8f 03                	popq   (%rbx)
    1493:	e7 9c                	out    %eax,$0x9c
    1495:	92                   	xchg   %eax,%edx
    1496:	15 95 7a 6d bf       	adc    $0xbf6d7a95,%eax
    149b:	eb 59                	jmp    14f6 <Td1+0xc6>
    149d:	52                   	push   %rdx
    149e:	95                   	xchg   %eax,%ebp
    149f:	da 83 be d4 2d 21    	fiaddl 0x212dd4be(%rbx)
    14a5:	74 58                	je     14ff <Td1+0xcf>
    14a7:	d3 69 e0             	shrl   %cl,-0x20(%rcx)
    14aa:	49 29 c8             	sub    %rcx,%r8
    14ad:	c9                   	leaveq 
    14ae:	8e 44 89 c2          	mov    -0x3e(%rcx,%rcx,4),%es
    14b2:	75 6a                	jne    151e <Td1+0xee>
    14b4:	79 8e                	jns    1444 <Td1+0x14>
    14b6:	f4                   	hlt    
    14b7:	78 3e                	js     14f7 <Td1+0xc7>
    14b9:	58                   	pop    %rax
    14ba:	99                   	cltd   
    14bb:	6b 71 b9 27          	imul   $0x27,-0x47(%rcx),%esi
    14bf:	dd 4f e1             	fisttpll -0x1f(%rdi)
    14c2:	be b6 ad 88 f0       	mov    $0xf088adb6,%esi
    14c7:	17                   	(bad)  
    14c8:	ac                   	lods   %ds:(%rsi),%al
    14c9:	20 c9                	and    %cl,%cl
    14cb:	66 3a ce             	data16 cmp %dh,%cl
    14ce:	7d b4                	jge    1484 <Td1+0x54>
    14d0:	4a df 63 18          	rex.WX fbld 0x18(%rbx)
    14d4:	31 1a                	xor    %ebx,(%rdx)
    14d6:	e5 82                	in     $0x82,%eax
    14d8:	33 51 97             	xor    -0x69(%rcx),%edx
    14db:	60                   	(bad)  
    14dc:	7f 53                	jg     1531 <Td1+0x101>
    14de:	62                   	(bad)  {%k6}{z}
    14df:	45 77 64             	rex.RB ja 1546 <Td1+0x116>
    14e2:	b1 e0                	mov    $0xe0,%cl
    14e4:	ae                   	scas   %es:(%rdi),%al
    14e5:	6b bb 84 a0 81 fe 1c 	imul   $0x1c,-0x17e5f7c(%rbx),%edi
    14ec:	2b 08                	sub    (%rax),%ecx
    14ee:	f9                   	stc    
    14ef:	94                   	xchg   %eax,%esp
    14f0:	68 48 70 58 fd       	pushq  $0xfffffffffd587048
    14f5:	45 8f                	rex.RB (bad) 
    14f7:	19 6c de 94          	sbb    %ebp,-0x6c(%rsi,%rbx,8)
    14fb:	87 f8                	xchg   %edi,%eax
    14fd:	7b 52                	jnp    1551 <Td1+0x121>
    14ff:	b7 d3                	mov    $0xd3,%bh
    1501:	73 ab                	jae    14ae <Td1+0x7e>
    1503:	23 02                	and    (%rdx),%eax
    1505:	4b 72 e2             	rex.WXB jb 14ea <Td1+0xba>
    1508:	8f                   	(bad)  
    1509:	1f                   	(bad)  
    150a:	e3 57                	jrcxz  1563 <Td1+0x133>
    150c:	ab                   	stos   %eax,%es:(%rdi)
    150d:	55                   	push   %rbp
    150e:	66 2a 28             	data16 sub (%rax),%ch
    1511:	eb b2                	jmp    14c5 <Td1+0x95>
    1513:	07                   	(bad)  
    1514:	c2 b5 2f             	retq   $0x2fb5
    1517:	03 7b c5             	add    -0x3b(%rbx),%edi
    151a:	86 9a 08 37 d3 a5    	xchg   %bl,-0x5a2cc8f8(%rdx)
    1520:	87 28                	xchg   %ebp,(%rax)
    1522:	30 f2                	xor    %dh,%dl
    1524:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1525:	bf 23 b2 6a 03       	mov    $0x36ab223,%edi
    152a:	02 ba 82 16 ed 5c    	add    0x5ced1682(%rdx),%bh
    1530:	1c cf                	sbb    $0xcf,%al
    1532:	8a 2b                	mov    (%rbx),%ch
    1534:	b4 79                	mov    $0x79,%ah
    1536:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    1537:	92                   	xchg   %eax,%edx
    1538:	f2 07                	repnz (bad) 
    153a:	f3 f0 e2 69          	repz lock loop 15a7 <Td1+0x177>
    153e:	4e a1 f4 da 65 cd be 	rex.WRX movabs 0xd50605becd65daf4,%rax
    1545:	05 06 d5 
    1548:	62                   	(bad)  {%k6}{z}
    1549:	34 d1                	xor    $0xd1,%al
    154b:	1f                   	(bad)  
    154c:	fe                   	(bad)  
    154d:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    154e:	c4                   	(bad)  
    154f:	8a 53 2e             	mov    0x2e(%rbx),%dl
    1552:	34 9d                	xor    $0x9d,%al
    1554:	55                   	push   %rbp
    1555:	f3 a2 a0 e1 8a 05 32 	repz movabs %al,0xa4f6eb32058ae1a0
    155c:	eb f6 a4 
    155f:	75 ec                	jne    154d <Td1+0x11d>
    1561:	83 0b 39             	orl    $0x39,(%rbx)
    1564:	ef                   	out    %eax,(%dx)
    1565:	60                   	(bad)  
    1566:	40 aa                	stos   %al,%es:(%rdi)
    1568:	9f                   	lahf   
    1569:	71 5e                	jno    15c9 <Td1+0x199>
    156b:	06                   	(bad)  
    156c:	10 6e bd             	adc    %ch,-0x43(%rsi)
    156f:	51                   	push   %rcx
    1570:	8a 21                	mov    (%rcx),%ah
    1572:	3e f9                	ds stc 
    1574:	06                   	(bad)  
    1575:	dd 96 3d 05 3e dd    	fstl   -0x22c1fac3(%rsi)
    157b:	ae                   	scas   %es:(%rdi),%al
    157c:	bd e6 4d 46 8d       	mov    $0x8d464de6,%ebp
    1581:	54                   	push   %rsp
    1582:	91                   	xchg   %eax,%ecx
    1583:	b5 5d                	mov    $0x5d,%ch
    1585:	c4                   	(bad)  
    1586:	71 05                	jno    158d <Td1+0x15d>
    1588:	d4                   	(bad)  
    1589:	06                   	(bad)  
    158a:	04 6f                	add    $0x6f,%al
    158c:	15 50 60 ff fb       	adc    $0xfbff6050,%eax
    1591:	98                   	cwtl   
    1592:	19 24 e9             	sbb    %esp,(%rcx,%rbp,8)
    1595:	bd d6 97 43 40       	mov    $0x404397d6,%ebp
    159a:	89 cc                	mov    %ecx,%esp
    159c:	9e                   	sahf   
    159d:	d9 67 77             	fldenv 0x77(%rdi)
    15a0:	42 e8 b0 bd 8b 89    	rex.X callq ffffffff898bd356 <AES_decrypt+0xffffffff898bab06>
    15a6:	07                   	(bad)  
    15a7:	88 5b 19             	mov    %bl,0x19(%rbx)
    15aa:	e7 38                	out    %eax,$0x38
    15ac:	ee                   	out    %al,(%dx)
    15ad:	c8 79 db 0a          	enterq $0xdb79,$0xa
    15b1:	7c a1                	jl     1554 <Td1+0x124>
    15b3:	47 0f 42 7c e9 1e    	cmovb  0x1e(%r9,%r13,8),%r15d
    15b9:	84 f8                	test   %bh,%al
    15bb:	c9                   	leaveq 
    15bc:	00 00                	add    %al,(%rax)
    15be:	00 00                	add    %al,(%rax)
    15c0:	86 80 09 83 ed 2b    	xchg   %al,0x2bed8309(%rax)
    15c6:	32 48 70             	xor    0x70(%rax),%cl
    15c9:	11 1e                	adc    %ebx,(%rsi)
    15cb:	ac                   	lods   %ds:(%rsi),%al
    15cc:	72 5a                	jb     1628 <Td1+0x1f8>
    15ce:	6c                   	insb   (%dx),%es:(%rdi)
    15cf:	4e ff 0e             	rex.WRX decq (%rsi)
    15d2:	fd                   	std    
    15d3:	fb                   	sti    
    15d4:	38 85 0f 56 d5 ae    	cmp    %al,-0x512aa9f1(%rbp)
    15da:	3d 1e 39 2d 36       	cmp    $0x362d391e,%eax
    15df:	27                   	(bad)  
    15e0:	d9 0f                	(bad)  (%rdi)
    15e2:	0a 64 a6 5c          	or     0x5c(%rsi,%riz,4),%ah
    15e6:	68 21 54 5b 9b       	pushq  $0xffffffff9b5b5421
    15eb:	d1 2e                	shrl   (%rsi)
    15ed:	36 24 3a             	ss and $0x3a,%al
    15f0:	67 0a 0c b1          	or     (%ecx,%esi,4),%cl
    15f4:	e7 57                	out    %eax,$0x57
    15f6:	93                   	xchg   %eax,%ebx
    15f7:	0f 96 ee             	setbe  %dh
    15fa:	b4 d2                	mov    $0xd2,%ah
    15fc:	91                   	xchg   %eax,%ecx
    15fd:	9b                   	fwait
    15fe:	1b 9e c5 c0 80 4f    	sbb    0x4f80c0c5(%rsi),%ebx
    1604:	20 dc                	and    %bl,%ah
    1606:	61                   	(bad)  
    1607:	a2 4b 77 5a 69 1a 12 	movabs %al,0x161c121a695a774b
    160e:	1c 16 
    1610:	ba 93 e2 0a 2a       	mov    $0x2a0ae293,%edx
    1615:	a0 c0 e5 e0 22 3c 43 	movabs 0x1b17433c22e0e5c0,%al
    161c:	17 1b 
    161e:	12 1d 0d 09 0e 0b    	adc    0xb0e090d(%rip),%bl        # b0e1f31 <AES_decrypt+0xb0df6e1>
    1624:	c7                   	(bad)  
    1625:	8b f2                	mov    %edx,%esi
    1627:	ad                   	lods   %ds:(%rsi),%eax
    1628:	a8 b6                	test   $0xb6,%al
    162a:	2d b9 a9 1e 14       	sub    $0x141ea9b9,%eax
    162f:	c8 19 f1 57          	enterq $0xf119,$0x57
    1633:	85 07                	test   %eax,(%rdi)
    1635:	75 af                	jne    15e6 <Td1+0x1b6>
    1637:	4c dd 99 ee bb 60 7f 	rex.WR fstpl 0x7f60bbee(%rcx)
    163e:	a3 fd 26 01 f7 9f f5 	movabs %eax,0x5c72f59ff70126fd
    1645:	72 5c 
    1647:	bc 3b 66 44 c5       	mov    $0xc544663b,%esp
    164c:	7e fb                	jle    1649 <Td1+0x219>
    164e:	5b                   	pop    %rbx
    164f:	34 29                	xor    $0x29,%al
    1651:	43 8b 76 c6          	rex.XB mov -0x3a(%r14),%esi
    1655:	23 cb                	and    %ebx,%ecx
    1657:	dc fc                	fdivr  %st,%st(4)
    1659:	ed                   	in     (%dx),%eax
    165a:	b6 68                	mov    $0x68,%dh
    165c:	f1                   	icebp  
    165d:	e4 b8                	in     $0xb8,%al
    165f:	63 dc                	movslq %esp,%ebx
    1661:	31 d7                	xor    %edx,%edi
    1663:	ca 85 63             	lret   $0x6385
    1666:	42 10 22             	rex.X adc %spl,(%rdx)
    1669:	97                   	xchg   %eax,%edi
    166a:	13 40 11             	adc    0x11(%rax),%eax
    166d:	c6 84 20 24 4a 85 7d 	movb   $0x3d,0x7d854a24(%rax,%riz,1)
    1674:	3d 
    1675:	bb d2 f8 32 f9       	mov    $0xf932f8d2,%ebx
    167a:	ae                   	scas   %es:(%rdi),%al
    167b:	11 a1 29 c7 6d 2f    	adc    %esp,0x2f6dc729(%rcx)
    1681:	9e                   	sahf   
    1682:	1d 4b 30 b2 dc       	sbb    $0xdcb2304b,%eax
    1687:	f3 52                	repz push %rdx
    1689:	86 0d ec e3 c1 77    	xchg   %cl,0x77c1e3ec(%rip)        # 77c1fa7b <AES_decrypt+0x77c1d22b>
    168f:	d0 16                	rclb   (%rsi)
    1691:	b3 2b                	mov    $0x2b,%bl
    1693:	6c                   	insb   (%dx),%es:(%rdi)
    1694:	b9 70 a9 99 48       	mov    $0x4899a970,%ecx
    1699:	94                   	xchg   %eax,%esp
    169a:	11 fa                	adc    %edi,%edx
    169c:	64 e9 47 22 8c fc    	fs jmpq fffffffffc8c38e9 <AES_decrypt+0xfffffffffc8c1099>
    16a2:	a8 c4                	test   $0xc4,%al
    16a4:	3f                   	(bad)  
    16a5:	f0 a0 1a 2c 7d 56 d8 	lock movabs 0x223390d8567d2c1a,%al
    16ac:	90 33 22 
    16af:	ef                   	out    %eax,(%dx)
    16b0:	4e                   	rex.WRX
    16b1:	49 87 c7             	xchg   %rax,%r15
    16b4:	d1 38                	sarl   (%rax)
    16b6:	d9 c1                	fld    %st(1)
    16b8:	a2 ca 8c fe 0b d4 98 	movabs %al,0x813698d40bfe8cca
    16bf:	36 81 
    16c1:	f5                   	cmc    
    16c2:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    16c3:	cf                   	iret   
    16c4:	de 7a a5             	fidivr -0x5b(%rdx)
    16c7:	28 8e b7 da 26 bf    	sub    %cl,-0x40d92549(%rsi)
    16cd:	ad                   	lods   %ds:(%rsi),%eax
    16ce:	3f                   	(bad)  
    16cf:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    16d0:	9d                   	popfq  
    16d1:	3a 2c e4             	cmp    (%rsp,%riz,8),%ch
    16d4:	92                   	xchg   %eax,%edx
    16d5:	78 50                	js     1727 <Td1+0x2f7>
    16d7:	0d cc 5f 6a 9b       	or     $0x9b6a5fcc,%eax
    16dc:	46 7e 54             	rex.RX jle 1733 <Td1+0x303>
    16df:	62 13 8d f6 c2       	(bad)  {%k6}{z}
    16e4:	b8 d8 90 e8 f7       	mov    $0xf7e890d8,%eax
    16e9:	39 2e                	cmp    %ebp,(%rsi)
    16eb:	5e                   	pop    %rsi
    16ec:	af                   	scas   %es:(%rdi),%eax
    16ed:	c3                   	retq   
    16ee:	82                   	(bad)  
    16ef:	f5                   	cmc    
    16f0:	80 5d 9f be          	sbbb   $0xbe,-0x61(%rbp)
    16f4:	93                   	xchg   %eax,%ebx
    16f5:	d0 69 7c             	shrb   0x7c(%rcx)
    16f8:	2d d5 6f a9 12       	sub    $0x12a96fd5,%eax
    16fd:	25 cf b3 99 ac       	and    $0xac99b3cf,%eax
    1702:	c8 3b 7d 18          	enterq $0x7d3b,$0x18
    1706:	10 a7 63 9c e8 6e    	adc    %ah,0x6ee89c63(%rdi)
    170c:	bb 3b db 7b 78       	mov    $0x787bdb3b,%ebx
    1711:	26 cd 09             	es int $0x9
    1714:	18 59 6e             	sbb    %bl,0x6e(%rcx)
    1717:	f4                   	hlt    
    1718:	b7 9a                	mov    $0x9a,%bh
    171a:	ec                   	in     (%dx),%al
    171b:	01 9a 4f 83 a8 6e    	add    %ebx,0x6ea8834f(%rdx)
    1721:	95                   	xchg   %eax,%ebp
    1722:	e6 65                	out    %al,$0x65
    1724:	e6 ff                	out    %al,$0xff
    1726:	aa                   	stos   %al,%es:(%rdi)
    1727:	7e cf                	jle    16f8 <Td1+0x2c8>
    1729:	bc 21 08 e8 15       	mov    $0x15e80821,%esp
    172e:	ef                   	out    %eax,(%dx)
    172f:	e6 9b                	out    %al,$0x9b
    1731:	e7 ba                	out    %eax,$0xba
    1733:	d9 36                	fnstenv (%rsi)
    1735:	6f                   	outsl  %ds:(%rsi),(%dx)
    1736:	4a ce                	rex.WX (bad) 
    1738:	09 9f ea d4 7c b0    	or     %ebx,-0x4f832b16(%rdi)
    173e:	29 d6                	sub    %edx,%esi
    1740:	b2 a4                	mov    $0xa4,%dl
    1742:	31 af 23 3f 2a 31    	xor    %ebp,0x312a3f23(%rdi)
    1748:	94                   	xchg   %eax,%esp
    1749:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    174a:	c6                   	(bad)  
    174b:	30 66 a2             	xor    %ah,-0x5e(%rsi)
    174e:	35 c0 bc 4e 74       	xor    $0x744ebcc0,%eax
    1753:	37                   	(bad)  
    1754:	ca 82 fc             	lret   $0xfc82
    1757:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    1758:	d0 90 e0 b0 d8 a7    	rclb   -0x58274f20(%rax)
    175e:	33 15 98 04 f1 4a    	xor    0x4af10498(%rip),%edx        # 4af11bfc <AES_decrypt+0x4af0f3ac>
    1764:	da ec                	(bad)  
    1766:	41 f7 50 cd          	notl   -0x33(%r8)
    176a:	7f 0e                	jg     177a <Td1+0x34a>
    176c:	f6 91 17 2f d6 4d    	notb   0x4dd62f17(%rcx)
    1772:	76 8d                	jbe    1701 <Td1+0x2d1>
    1774:	b0 ef                	mov    $0xef,%al
    1776:	43                   	rex.XB
    1777:	4d                   	rex.WRB
    1778:	4d aa                	rex.WRB stos %al,%es:(%rdi)
    177a:	cc                   	int3   
    177b:	54                   	push   %rsp
    177c:	04 96                	add    $0x96,%al
    177e:	e4 df                	in     $0xdf,%al
    1780:	b5 d1                	mov    $0xd1,%ch
    1782:	9e                   	sahf   
    1783:	e3 88                	jrcxz  170d <Td1+0x2dd>
    1785:	6a 4c                	pushq  $0x4c
    1787:	1b 1f                	sbb    (%rdi),%ebx
    1789:	2c c1                	sub    $0xc1,%al
    178b:	b8 51 65 46 7f       	mov    $0x7f466551,%eax
    1790:	ea                   	(bad)  
    1791:	5e                   	pop    %rsi
    1792:	9d                   	popfq  
    1793:	04 35                	add    $0x35,%al
    1795:	8c 01                	mov    %es,(%rcx)
    1797:	5d                   	pop    %rbp
    1798:	74 87                	je     1721 <Td1+0x2f1>
    179a:	fa                   	cli    
    179b:	73 41                	jae    17de <Td1+0x3ae>
    179d:	0b fb                	or     %ebx,%edi
    179f:	2e 1d 67 b3 5a d2    	cs sbb $0xd25ab367,%eax
    17a5:	db 92 52 56 10 e9    	fistl  -0x16efa9ae(%rdx)
    17ab:	33 47 d6             	xor    -0x2a(%rdi),%eax
    17ae:	6d                   	insl   (%dx),%es:(%rdi)
    17af:	13 61 d7             	adc    -0x29(%rcx),%esp
    17b2:	9a                   	(bad)  
    17b3:	8c 0c a1             	mov    %cs,(%rcx,%riz,4)
    17b6:	37                   	(bad)  
    17b7:	7a 14                	jp     17cd <Td1+0x39d>
    17b9:	f8                   	clc    
    17ba:	59                   	pop    %rcx
    17bb:	8e 3c 13             	mov    (%rbx,%rdx,1),%?
    17be:	eb 89                	jmp    1749 <Td1+0x319>
    17c0:	27                   	(bad)  
    17c1:	a9 ce ee c9 61       	test   $0x61c9eece,%eax
    17c6:	b7 35                	mov    $0x35,%bh
    17c8:	e5 1c                	in     $0x1c,%eax
    17ca:	e1 ed                	loope  17b9 <Td1+0x389>
    17cc:	b1 47                	mov    $0x47,%cl
    17ce:	7a 3c                	jp     180c <Td1+0x3dc>
    17d0:	df d2                	(bad)  
    17d2:	9c                   	pushfq 
    17d3:	59                   	pop    %rcx
    17d4:	73 f2                	jae    17c8 <Td1+0x398>
    17d6:	55                   	push   %rbp
    17d7:	3f                   	(bad)  
    17d8:	ce                   	(bad)  
    17d9:	14 18                	adc    $0x18,%al
    17db:	79 37                	jns    1814 <Td1+0x3e4>
    17dd:	c7                   	(bad)  
    17de:	73 bf                	jae    179f <Td1+0x36f>
    17e0:	cd f7                	int    $0xf7
    17e2:	53                   	push   %rbx
    17e3:	ea                   	(bad)  
    17e4:	aa                   	stos   %al,%es:(%rdi)
    17e5:	fd                   	std    
    17e6:	5f                   	pop    %rdi
    17e7:	5b                   	pop    %rbx
    17e8:	6f                   	outsl  %ds:(%rsi),(%dx)
    17e9:	3d df 14 db 44       	cmp    $0x44db14df,%eax
    17ee:	78 86                	js     1776 <Td1+0x346>
    17f0:	f3 af                	repz scas %es:(%rdi),%eax
    17f2:	ca 81 c4             	lret   $0xc481
    17f5:	68 b9 3e 34 24       	pushq  $0x24343eb9
    17fa:	38 2c 40             	cmp    %ch,(%rax,%rax,2)
    17fd:	a3 c2 5f c3 1d 16 72 	movabs %eax,0xe22572161dc35fc2
    1804:	25 e2 
    1806:	bc 0c 49 3c 28       	mov    $0x283c490c,%esp
    180b:	8b 95 0d ff 41 01    	mov    0x141ff0d(%rbp),%edx
    1811:	a8 39                	test   $0x39,%al
    1813:	71 b3                	jno    17c8 <Td1+0x398>
    1815:	0c 08                	or     $0x8,%al
    1817:	de e4                	fsubp  %st,%st(4)
    1819:	b4 d8                	mov    $0xd8,%ah
    181b:	9c                   	pushfq 
    181c:	c1 56 64 90          	rcll   $0x90,0x64(%rsi)
    1820:	84 cb                	test   %cl,%bl
    1822:	7b 61                	jnp    1885 <Td2+0x55>
    1824:	b6 32                	mov    $0x32,%dh
    1826:	d5                   	(bad)  
    1827:	70 5c                	jo     1885 <Td2+0x55>
    1829:	6c                   	insb   (%dx),%es:(%rdi)
    182a:	48 74 57             	rex.W je 1884 <Td2+0x54>
    182d:	b8 d0 42 f4 51       	mov    $0x51f442d0,%eax

0000000000001830 <Td2>:
    1830:	f4                   	hlt    
    1831:	51                   	push   %rcx
    1832:	50                   	push   %rax
    1833:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    1834:	41 7e 53             	rex.B jle 188a <Td2+0x5a>
    1837:	65 17                	gs (bad) 
    1839:	1a c3                	sbb    %bl,%al
    183b:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    183c:	27                   	(bad)  
    183d:	3a 96 5e ab 3b cb    	cmp    -0x34c454a2(%rsi),%dl
    1843:	6b 9d 1f f1 45 fa ac 	imul   $0xffffffac,-0x5ba0ee1(%rbp),%ebx
    184a:	ab                   	stos   %eax,%es:(%rdi)
    184b:	58                   	pop    %rax
    184c:	e3 4b                	jrcxz  1899 <Td2+0x69>
    184e:	93                   	xchg   %eax,%ebx
    184f:	03 30                	add    (%rax),%esi
    1851:	20 55 fa             	and    %dl,-0x6(%rbp)
    1854:	76 ad                	jbe    1803 <Td1+0x3d3>
    1856:	f6 6d cc             	imulb  -0x34(%rbp)
    1859:	88 91 76 02 f5 25    	mov    %dl,0x25f50276(%rcx)
    185f:	4c e5 4f             	rex.WR in $0x4f,%eax
    1862:	fc                   	cld    
    1863:	d7                   	xlat   %ds:(%rbx)
    1864:	2a c5                	sub    %ch,%al
    1866:	d7                   	xlat   %ds:(%rbx)
    1867:	cb                   	lret   
    1868:	35 26 80 44 62       	xor    $0x62448026,%eax
    186d:	b5 8f                	mov    $0x8f,%ch
    186f:	a3 b1 de 49 5a ba 25 	movabs %eax,0x1b6725ba5a49deb1
    1876:	67 1b 
    1878:	ea                   	(bad)  
    1879:	45 98                	rex.RB cwtl 
    187b:	0e                   	(bad)  
    187c:	fe                   	(bad)  
    187d:	5d                   	pop    %rbp
    187e:	e1 c0                	loope  1840 <Td2+0x10>
    1880:	2f                   	(bad)  
    1881:	c3                   	retq   
    1882:	02 75 4c             	add    0x4c(%rbp),%dh
    1885:	81 12 f0 46 8d a3    	adcl   $0xa38d46f0,(%rdx)
    188b:	97                   	xchg   %eax,%edi
    188c:	d3 6b c6             	shrl   %cl,-0x3a(%rbx)
    188f:	f9                   	stc    
    1890:	8f 03                	popq   (%rbx)
    1892:	e7 5f                	out    %eax,$0x5f
    1894:	92                   	xchg   %eax,%edx
    1895:	15 95 9c 6d bf       	adc    $0xbf6d9c95,%eax
    189a:	eb 7a                	jmp    1916 <Td2+0xe6>
    189c:	52                   	push   %rdx
    189d:	95                   	xchg   %eax,%ebp
    189e:	da 59 be             	ficompl -0x42(%rcx)
    18a1:	d4                   	(bad)  
    18a2:	2d 83 74 58 d3       	sub    $0xd3587483,%eax
    18a7:	21 e0                	and    %esp,%eax
    18a9:	49 29 69 c9          	sub    %rbp,-0x37(%r9)
    18ad:	8e 44 c8 c2          	mov    -0x3e(%rax,%rcx,8),%es
    18b1:	75 6a                	jne    191d <Td2+0xed>
    18b3:	89 8e f4 78 79 58    	mov    %ecx,0x587978f4(%rsi)
    18b9:	99                   	cltd   
    18ba:	6b 3e b9             	imul   $0xffffffb9,(%rsi),%edi
    18bd:	27                   	(bad)  
    18be:	dd 71 e1             	fnsave -0x1f(%rcx)
    18c1:	be b6 4f 88 f0       	mov    $0xf0884fb6,%esi
    18c6:	17                   	(bad)  
    18c7:	ad                   	lods   %ds:(%rsi),%eax
    18c8:	20 c9                	and    %cl,%cl
    18ca:	66 ac                	data16 lods %ds:(%rsi),%al
    18cc:	ce                   	(bad)  
    18cd:	7d b4                	jge    1883 <Td2+0x53>
    18cf:	3a df                	cmp    %bh,%bl
    18d1:	63 18                	movslq (%rax),%ebx
    18d3:	4a 1a e5             	rex.WX sbb %bpl,%spl
    18d6:	82                   	(bad)  
    18d7:	31 51 97             	xor    %edx,-0x69(%rcx)
    18da:	60                   	(bad)  
    18db:	33 53 62             	xor    0x62(%rbx),%edx
    18de:	45 7f 64             	rex.RB jg 1945 <Td2+0x115>
    18e1:	b1 e0                	mov    $0xe0,%cl
    18e3:	77 6b                	ja     1950 <Td2+0x120>
    18e5:	bb 84 ae 81 fe       	mov    $0xfe81ae84,%ebx
    18ea:	1c a0                	sbb    $0xa0,%al
    18ec:	08 f9                	or     %bh,%cl
    18ee:	94                   	xchg   %eax,%esp
    18ef:	2b 48 70             	sub    0x70(%rax),%ecx
    18f2:	58                   	pop    %rax
    18f3:	68 45 8f 19 fd       	pushq  $0xfffffffffd198f45
    18f8:	de 94 87 6c 7b 52 b7 	ficom  -0x48ad8494(%rdi,%rax,4)
    18ff:	f8                   	clc    
    1900:	73 ab                	jae    18ad <Td2+0x7d>
    1902:	23 d3                	and    %ebx,%edx
    1904:	4b 72 e2             	rex.WXB jb 18e9 <Td2+0xb9>
    1907:	02 1f                	add    (%rdi),%bl
    1909:	e3 57                	jrcxz  1962 <Td2+0x132>
    190b:	8f                   	(bad)  
    190c:	55                   	push   %rbp
    190d:	66 2a ab eb b2 07 28 	data16 sub 0x2807b2eb(%rbx),%ch
    1914:	b5 2f                	mov    $0x2f,%ch
    1916:	03 c2                	add    %edx,%eax
    1918:	c5 86 9a             	(bad)  
    191b:	7b 37                	jnp    1954 <Td2+0x124>
    191d:	d3 a5 08 28 30 f2    	shll   %cl,-0xdcfd7f8(%rbp)
    1923:	87 bf 23 b2 a5 03    	xchg   %edi,0x3a5b223(%rdi)
    1929:	02 ba 6a 16 ed 5c    	add    0x5ced166a(%rdx),%bh
    192f:	82                   	(bad)  
    1930:	cf                   	iret   
    1931:	8a 2b                	mov    (%rbx),%ch
    1933:	1c 79                	sbb    $0x79,%al
    1935:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    1936:	92                   	xchg   %eax,%edx
    1937:	b4 07                	mov    $0x7,%ah
    1939:	f3 f0 f2 69 4e a1 e2 	repz lock repnz imul $0xcd65dae2,-0x5f(%rsi),%ecx
    1940:	da 65 cd 
    1943:	f4                   	hlt    
    1944:	05 06 d5 be 34       	add    $0x34bed506,%eax
    1949:	d1 1f                	rcrl   (%rdi)
    194b:	62                   	(bad)  {%k6}{z}
    194c:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    194d:	c4                   	(bad)  
    194e:	8a fe                	mov    %dh,%bh
    1950:	2e 34 9d             	cs xor $0x9d,%al
    1953:	53                   	push   %rbx
    1954:	f3 a2 a0 55 8a 05 32 	repz movabs %al,0xa4f6e132058a55a0
    195b:	e1 f6 a4 
    195e:	75 eb                	jne    194b <Td2+0x11b>
    1960:	83 0b 39             	orl    $0x39,(%rbx)
    1963:	ec                   	in     (%dx),%al
    1964:	60                   	(bad)  
    1965:	40 aa                	stos   %al,%es:(%rdi)
    1967:	ef                   	out    %eax,(%dx)
    1968:	71 5e                	jno    19c8 <Td2+0x198>
    196a:	06                   	(bad)  
    196b:	9f                   	lahf   
    196c:	6e                   	outsb  %ds:(%rsi),(%dx)
    196d:	bd 51 10 21 3e       	mov    $0x3e211051,%ebp
    1972:	f9                   	stc    
    1973:	8a dd                	mov    %ch,%bl
    1975:	96                   	xchg   %eax,%esi
    1976:	3d 06 3e dd ae       	cmp    $0xaedd3e06,%eax
    197b:	05 e6 4d 46 bd       	add    $0xbd464de6,%eax
    1980:	54                   	push   %rsp
    1981:	91                   	xchg   %eax,%ecx
    1982:	b5 8d                	mov    $0x8d,%ch
    1984:	c4                   	(bad)  
    1985:	71 05                	jno    198c <Td2+0x15c>
    1987:	5d                   	pop    %rbp
    1988:	06                   	(bad)  
    1989:	04 6f                	add    $0x6f,%al
    198b:	d4                   	(bad)  
    198c:	50                   	push   %rax
    198d:	60                   	(bad)  
    198e:	ff 15 98 19 24 fb    	callq  *-0x4dbe668(%rip)        # fffffffffb24332c <AES_decrypt+0xfffffffffb240adc>
    1994:	bd d6 97 e9 40       	mov    $0x40e997d6,%ebp
    1999:	89 cc                	mov    %ecx,%esp
    199b:	43 d9 67 77          	rex.XB fldenv 0x77(%r15)
    199f:	9e                   	sahf   
    19a0:	e8 b0 bd 42 89       	callq  ffffffff8942d755 <AES_decrypt+0xffffffff8942af05>
    19a5:	07                   	(bad)  
    19a6:	88 8b 19 e7 38 5b    	mov    %cl,0x5b38e719(%rbx)
    19ac:	c8 79 db ee          	enterq $0xdb79,$0xee
    19b0:	7c a1                	jl     1953 <Td2+0x123>
    19b2:	47 0a 42 7c          	rex.RXB or 0x7c(%r10),%r8b
    19b6:	e9 0f 84 f8 c9       	jmpq   ffffffffc9f89dca <AES_decrypt+0xffffffffc9f8757a>
    19bb:	1e                   	(bad)  
    19bc:	00 00                	add    %al,(%rax)
    19be:	00 00                	add    %al,(%rax)
    19c0:	80 09 83             	orb    $0x83,(%rcx)
    19c3:	86 2b                	xchg   %ch,(%rbx)
    19c5:	32 48 ed             	xor    -0x13(%rax),%cl
    19c8:	11 1e                	adc    %ebx,(%rsi)
    19ca:	ac                   	lods   %ds:(%rsi),%al
    19cb:	70 5a                	jo     1a27 <Td2+0x1f7>
    19cd:	6c                   	insb   (%dx),%es:(%rdi)
    19ce:	4e 72 0e             	rex.WRX jb 19df <Td2+0x1af>
    19d1:	fd                   	std    
    19d2:	fb                   	sti    
    19d3:	ff 85 0f 56 38 ae    	incl   -0x51c7a9f1(%rbp)
    19d9:	3d 1e d5 2d 36       	cmp    $0x362dd51e,%eax
    19de:	27                   	(bad)  
    19df:	39 0f                	cmp    %ecx,(%rdi)
    19e1:	0a 64 d9 5c          	or     0x5c(%rcx,%rbx,8),%ah
    19e5:	68 21 a6 5b 9b       	pushq  $0xffffffff9b5ba621
    19ea:	d1 54 36 24          	rcll   0x24(%rsi,%rsi,1)
    19ee:	3a 2e                	cmp    (%rsi),%ch
    19f0:	0a 0c b1             	or     (%rcx,%rsi,4),%cl
    19f3:	67 57                	addr32 push %rdi
    19f5:	93                   	xchg   %eax,%ebx
    19f6:	0f                   	movntq %mm5,(bad)
    19f7:	e7 ee                	out    %eax,$0xee
    19f9:	b4 d2                	mov    $0xd2,%ah
    19fb:	96                   	xchg   %eax,%esi
    19fc:	9b                   	fwait
    19fd:	1b 9e 91 c0 80 4f    	sbb    0x4f80c091(%rsi),%ebx
    1a03:	c5 dc 61             	(bad)  
    1a06:	a2 20 77 5a 69 4b 12 	movabs %al,0x161c124b695a7720
    1a0d:	1c 16 
    1a0f:	1a 93 e2 0a ba a0    	sbb    -0x5f45f51e(%rbx),%dl
    1a15:	c0 e5 2a             	shl    $0x2a,%ch
    1a18:	22 3c 43             	and    (%rbx,%rax,2),%bh
    1a1b:	e0 1b                	loopne 1a38 <Td2+0x208>
    1a1d:	12 1d 17 09 0e 0b    	adc    0xb0e0917(%rip),%bl        # b0e233a <AES_decrypt+0xb0dfaea>
    1a23:	0d 8b f2 ad c7       	or     $0xc7adf28b,%eax
    1a28:	b6 2d                	mov    $0x2d,%dh
    1a2a:	b9 a8 1e 14 c8       	mov    $0xc8141ea8,%ecx
    1a2f:	a9 f1 57 85 19       	test   $0x198557f1,%eax
    1a34:	75 af                	jne    19e5 <Td2+0x1b5>
    1a36:	4c 07                	rex.WR (bad) 
    1a38:	99                   	cltd   
    1a39:	ee                   	out    %al,(%dx)
    1a3a:	bb dd 7f a3 fd       	mov    $0xfda37fdd,%ebx
    1a3f:	60                   	(bad)  
    1a40:	01 f7                	add    %esi,%edi
    1a42:	9f                   	lahf   
    1a43:	26 72 5c             	es jb  1aa2 <Td2+0x272>
    1a46:	bc f5 66 44 c5       	mov    $0xc54466f5,%esp
    1a4b:	3b fb                	cmp    %ebx,%edi
    1a4d:	5b                   	pop    %rbx
    1a4e:	34 7e                	xor    $0x7e,%al
    1a50:	43 8b 76 29          	rex.XB mov 0x29(%r14),%esi
    1a54:	23 cb                	and    %ebx,%ecx
    1a56:	dc c6                	fadd   %st,%st(6)
    1a58:	ed                   	in     (%dx),%eax
    1a59:	b6 68                	mov    $0x68,%dh
    1a5b:	fc                   	cld    
    1a5c:	e4 b8                	in     $0xb8,%al
    1a5e:	63 f1                	movslq %ecx,%esi
    1a60:	31 d7                	xor    %edx,%edi
    1a62:	ca dc 63             	lret   $0x63dc
    1a65:	42 10 85 97 13 40 22 	rex.X adc %al,0x22401397(%rbp)
    1a6c:	c6 84 20 11 4a 85 7d 	movb   $0x24,0x7d854a11(%rax,%riz,1)
    1a73:	24 
    1a74:	bb d2 f8 3d f9       	mov    $0xf93df8d2,%ebx
    1a79:	ae                   	scas   %es:(%rdi),%al
    1a7a:	11 32                	adc    %esi,(%rdx)
    1a7c:	29 c7                	sub    %eax,%edi
    1a7e:	6d                   	insl   (%dx),%es:(%rdi)
    1a7f:	a1 9e 1d 4b 2f b2 dc 	movabs 0x30f3dcb22f4b1d9e,%eax
    1a86:	f3 30 
    1a88:	86 0d ec 52 c1 77    	xchg   %cl,0x77c152ec(%rip)        # 77c16d7a <AES_decrypt+0x77c1452a>
    1a8e:	d0 e3                	shl    %bl
    1a90:	b3 2b                	mov    $0x2b,%bl
    1a92:	6c                   	insb   (%dx),%es:(%rdi)
    1a93:	16                   	(bad)  
    1a94:	70 a9                	jo     1a3f <Td2+0x20f>
    1a96:	99                   	cltd   
    1a97:	b9 94 11 fa 48       	mov    $0x48fa1194,%ecx
    1a9c:	e9 47 22 64 fc       	jmpq   fffffffffc643ce8 <AES_decrypt+0xfffffffffc641498>
    1aa1:	a8 c4                	test   $0xc4,%al
    1aa3:	8c f0                	mov    %?,%eax
    1aa5:	a0 1a 3f 7d 56 d8 2c 	movabs 0x22332cd8567d3f1a,%al
    1aac:	33 22 
    1aae:	ef                   	out    %eax,(%dx)
    1aaf:	90                   	nop
    1ab0:	49 87 c7             	xchg   %rax,%r15
    1ab3:	4e 38 d9             	rex.WRX cmp %r11b,%cl
    1ab6:	c1 d1 ca             	rcl    $0xca,%ecx
    1ab9:	8c fe                	mov    %?,%esi
    1abb:	a2 d4 98 36 0b f5 a6 	movabs %al,0x81cfa6f50b3698d4
    1ac2:	cf 81 
    1ac4:	7a a5                	jp     1a6b <Td2+0x23b>
    1ac6:	28 de                	sub    %bl,%dh
    1ac8:	b7 da                	mov    $0xda,%bh
    1aca:	26 8e ad 3f a4 bf 3a 	mov    %es:0x3abfa43f(%rbp),%gs
    1ad1:	2c e4                	sub    $0xe4,%al
    1ad3:	9d                   	popfq  
    1ad4:	78 50                	js     1b26 <Td2+0x2f6>
    1ad6:	0d 92 5f 6a 9b       	or     $0x9b6a5f92,%eax
    1adb:	cc                   	int3   
    1adc:	7e 54                	jle    1b32 <Td2+0x302>
    1ade:	62                   	(bad)  {%k6}{z}
    1adf:	46 8d                	rex.RX (bad) 
    1ae1:	f6 c2 13             	test   $0x13,%dl
    1ae4:	d8 90 e8 b8 39 2e    	fcoms  0x2e39b8e8(%rax)
    1aea:	5e                   	pop    %rsi
    1aeb:	f7 c3 82 f5 af 5d    	test   $0x5daff582,%ebx
    1af1:	9f                   	lahf   
    1af2:	be 80 d0 69 7c       	mov    $0x7c69d080,%esi
    1af7:	93                   	xchg   %eax,%ebx
    1af8:	d5                   	(bad)  
    1af9:	6f                   	outsl  %ds:(%rsi),(%dx)
    1afa:	a9 2d 25 cf b3       	test   $0xb3cf252d,%eax
    1aff:	12 ac c8 3b 99 18 10 	adc    0x1018993b(%rax,%rcx,8),%ch
    1b06:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    1b07:	7d 9c                	jge    1aa5 <Td2+0x275>
    1b09:	e8 6e 63 3b db       	callq  ffffffffdb3b7e7c <AES_decrypt+0xffffffffdb3b562c>
    1b0e:	7b bb                	jnp    1acb <Td2+0x29b>
    1b10:	26 cd 09             	es int $0x9
    1b13:	78 59                	js     1b6e <Td2+0x33e>
    1b15:	6e                   	outsb  %ds:(%rsi),(%dx)
    1b16:	f4                   	hlt    
    1b17:	18 9a ec 01 b7 4f    	sbb    %bl,0x4fb701ec(%rdx)
    1b1d:	83 a8 9a 95 e6 65 6e 	subl   $0x6e,0x65e6959a(%rax)
    1b24:	ff aa 7e e6 bc 21    	ljmp   *0x21bce67e(%rdx)
    1b2a:	08 cf                	or     %cl,%bh
    1b2c:	15 ef e6 e8 e7       	adc    $0xe7e8e6ef,%eax
    1b31:	ba d9 9b 6f 4a       	mov    $0x4a6f9bd9,%edx
    1b36:	ce                   	(bad)  
    1b37:	36 9f                	ss lahf 
    1b39:	ea                   	(bad)  
    1b3a:	d4                   	(bad)  
    1b3b:	09 b0 29 d6 7c a4    	or     %esi,-0x5b8329d7(%rax)
    1b41:	31 af b2 3f 2a 31    	xor    %ebp,0x312a3fb2(%rdi)
    1b47:	23 a5 c6 30 94 a2    	and    -0x5d6bcf3a(%rbp),%esp
    1b4d:	35 c0 66 4e 74       	xor    $0x744e66c0,%eax
    1b52:	37                   	(bad)  
    1b53:	bc 82 fc a6 ca       	mov    $0xcaa6fc82,%esp
    1b58:	90                   	nop
    1b59:	e0 b0                	loopne 1b0b <Td2+0x2db>
    1b5b:	d0 a7 33 15 d8 04    	shlb   0x4d81533(%rdi)
    1b61:	f1                   	icebp  
    1b62:	4a 98                	rex.WX cltq 
    1b64:	ec                   	in     (%dx),%al
    1b65:	41 f7 da             	neg    %r10d
    1b68:	cd 7f                	int    $0x7f
    1b6a:	0e                   	(bad)  
    1b6b:	50                   	push   %rax
    1b6c:	91                   	xchg   %eax,%ecx
    1b6d:	17                   	(bad)  
    1b6e:	2f                   	(bad)  
    1b6f:	f6                   	(bad)  
    1b70:	4d 76 8d             	rex.WRB jbe 1b00 <Td2+0x2d0>
    1b73:	d6                   	(bad)  
    1b74:	ef                   	out    %eax,(%dx)
    1b75:	43                   	rex.XB
    1b76:	4d b0 aa             	rex.WRB mov $0xaa,%r8b
    1b79:	cc                   	int3   
    1b7a:	54                   	push   %rsp
    1b7b:	4d 96                	rex.WRB xchg %rax,%r14
    1b7d:	e4 df                	in     $0xdf,%al
    1b7f:	04 d1                	add    $0xd1,%al
    1b81:	9e                   	sahf   
    1b82:	e3 b5                	jrcxz  1b39 <Td2+0x309>
    1b84:	6a 4c                	pushq  $0x4c
    1b86:	1b 88 2c c1 b8 1f    	sbb    0x1fb8c12c(%rax),%ecx
    1b8c:	65 46 7f 51          	gs rex.RX jg 1be1 <Td2+0x3b1>
    1b90:	5e                   	pop    %rsi
    1b91:	9d                   	popfq  
    1b92:	04 ea                	add    $0xea,%al
    1b94:	8c 01                	mov    %es,(%rcx)
    1b96:	5d                   	pop    %rbp
    1b97:	35 87 fa 73 74       	xor    $0x7473fa87,%eax
    1b9c:	0b fb                	or     %ebx,%edi
    1b9e:	2e 41                	cs rex.B
    1ba0:	67 b3 5a             	addr32 mov $0x5a,%bl
    1ba3:	1d db 92 52 d2       	sbb    $0xd25292db,%eax
    1ba8:	10 e9                	adc    %ch,%cl
    1baa:	33 56 d6             	xor    -0x2a(%rsi),%edx
    1bad:	6d                   	insl   (%dx),%es:(%rdi)
    1bae:	13 47 d7             	adc    -0x29(%rdi),%eax
    1bb1:	9a                   	(bad)  
    1bb2:	8c 61 a1             	mov    %fs,-0x5f(%rcx)
    1bb5:	37                   	(bad)  
    1bb6:	7a 0c                	jp     1bc4 <Td2+0x394>
    1bb8:	f8                   	clc    
    1bb9:	59                   	pop    %rcx
    1bba:	8e 14 13             	mov    (%rbx,%rdx,1),%ss
    1bbd:	eb 89                	jmp    1b48 <Td2+0x318>
    1bbf:	3c a9                	cmp    $0xa9,%al
    1bc1:	ce                   	(bad)  
    1bc2:	ee                   	out    %al,(%dx)
    1bc3:	27                   	(bad)  
    1bc4:	61                   	(bad)  
    1bc5:	b7 35                	mov    $0x35,%bh
    1bc7:	c9                   	leaveq 
    1bc8:	1c e1                	sbb    $0xe1,%al
    1bca:	ed                   	in     (%dx),%eax
    1bcb:	e5 47                	in     $0x47,%eax
    1bcd:	7a 3c                	jp     1c0b <Td2+0x3db>
    1bcf:	b1 d2                	mov    $0xd2,%cl
    1bd1:	9c                   	pushfq 
    1bd2:	59                   	pop    %rcx
    1bd3:	df f2                	fcomip %st(2),%st
    1bd5:	55                   	push   %rbp
    1bd6:	3f                   	(bad)  
    1bd7:	73 14                	jae    1bed <Td2+0x3bd>
    1bd9:	18 79 ce             	sbb    %bh,-0x32(%rcx)
    1bdc:	c7                   	(bad)  
    1bdd:	73 bf                	jae    1b9e <Td2+0x36e>
    1bdf:	37                   	(bad)  
    1be0:	f7 53 ea             	notl   -0x16(%rbx)
    1be3:	cd fd                	int    $0xfd
    1be5:	5f                   	pop    %rdi
    1be6:	5b                   	pop    %rbx
    1be7:	aa                   	stos   %al,%es:(%rdi)
    1be8:	3d df 14 6f 44       	cmp    $0x446f14df,%eax
    1bed:	78 86                	js     1b75 <Td2+0x345>
    1bef:	db af ca 81 f3 68    	fldt   0x68f381ca(%rdi)
    1bf5:	b9 3e c4 24 38       	mov    $0x3824c43e,%ecx
    1bfa:	2c 34                	sub    $0x34,%al
    1bfc:	a3 c2 5f 40 1d 16 72 	movabs %eax,0xe2c372161d405fc2
    1c03:	c3 e2 
    1c05:	bc 0c 25 3c 28       	mov    $0x283c250c,%esp
    1c0a:	8b 49 0d             	mov    0xd(%rcx),%ecx
    1c0d:	ff 41 95             	incl   -0x6b(%rcx)
    1c10:	a8 39                	test   $0x39,%al
    1c12:	71 01                	jno    1c15 <Td2+0x3e5>
    1c14:	0c 08                	or     $0x8,%al
    1c16:	de b3 b4 d8 9c e4    	fidiv  -0x1b63274c(%rbx)
    1c1c:	56                   	push   %rsi
    1c1d:	64 90                	fs nop
    1c1f:	c1 cb 7b             	ror    $0x7b,%ebx
    1c22:	61                   	(bad)  
    1c23:	84 32                	test   %dh,(%rdx)
    1c25:	d5                   	(bad)  
    1c26:	70 b6                	jo     1bde <Td2+0x3ae>
    1c28:	6c                   	insb   (%dx),%es:(%rdi)
    1c29:	48 74 5c             	rex.W je 1c88 <Td3+0x58>
    1c2c:	b8 d0 42 57 51       	mov    $0x515742d0,%eax

0000000000001c30 <Td3>:
    1c30:	51                   	push   %rcx
    1c31:	50                   	push   %rax
    1c32:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    1c33:	f4                   	hlt    
    1c34:	7e 53                	jle    1c89 <Td3+0x59>
    1c36:	65 41 1a c3          	gs sbb %r11b,%al
    1c3a:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    1c3b:	17                   	(bad)  
    1c3c:	3a 96 5e 27 3b cb    	cmp    -0x34c4d8a2(%rsi),%dl
    1c42:	6b ab 1f f1 45 9d ac 	imul   $0xffffffac,-0x62ba0ee1(%rbx),%ebp
    1c49:	ab                   	stos   %eax,%es:(%rdi)
    1c4a:	58                   	pop    %rax
    1c4b:	fa                   	cli    
    1c4c:	4b 93                	rex.WXB xchg %rax,%r11
    1c4e:	03 e3                	add    %ebx,%esp
    1c50:	20 55 fa             	and    %dl,-0x6(%rbp)
    1c53:	30 ad f6 6d 76 88    	xor    %ch,-0x7789920a(%rbp)
    1c59:	91                   	xchg   %eax,%ecx
    1c5a:	76 cc                	jbe    1c28 <Td2+0x3f8>
    1c5c:	f5                   	cmc    
    1c5d:	25 4c 02 4f fc       	and    $0xfc4f024c,%eax
    1c62:	d7                   	xlat   %ds:(%rbx)
    1c63:	e5 c5                	in     $0xc5,%eax
    1c65:	d7                   	xlat   %ds:(%rbx)
    1c66:	cb                   	lret   
    1c67:	2a 26                	sub    (%rsi),%ah
    1c69:	80 44 35 b5 8f       	addb   $0x8f,-0x4b(%rbp,%rsi,1)
    1c6e:	a3 62 de 49 5a b1 25 	movabs %eax,0x1b6725b15a49de62
    1c75:	67 1b 
    1c77:	ba 45 98 0e ea       	mov    $0xea0e9845,%edx
    1c7c:	5d                   	pop    %rbp
    1c7d:	e1 c0                	loope  1c3f <Td3+0xf>
    1c7f:	fe c3                	inc    %bl
    1c81:	02 75 2f             	add    0x2f(%rbp),%dh
    1c84:	81 12 f0 4c 8d a3    	adcl   $0xa38d4cf0,(%rdx)
    1c8a:	97                   	xchg   %eax,%edi
    1c8b:	46 6b c6 f9          	rex.RX imul $0xfffffff9,%esi,%r8d
    1c8f:	d3 03                	roll   %cl,(%rbx)
    1c91:	e7 5f                	out    %eax,$0x5f
    1c93:	8f                   	(bad)  
    1c94:	15 95 9c 92 bf       	adc    $0xbf929c95,%eax
    1c99:	eb 7a                	jmp    1d15 <Td3+0xe5>
    1c9b:	6d                   	insl   (%dx),%es:(%rdi)
    1c9c:	95                   	xchg   %eax,%ebp
    1c9d:	da 59 52             	ficompl 0x52(%rcx)
    1ca0:	d4                   	(bad)  
    1ca1:	2d 83 be 58 d3       	sub    $0xd358be83,%eax
    1ca6:	21 74 49 29          	and    %esi,0x29(%rcx,%rcx,2)
    1caa:	69 e0 8e 44 c8 c9    	imul   $0xc9c8448e,%eax,%esp
    1cb0:	75 6a                	jne    1d1c <Td3+0xec>
    1cb2:	89 c2                	mov    %eax,%edx
    1cb4:	f4                   	hlt    
    1cb5:	78 79                	js     1d30 <Td3+0x100>
    1cb7:	8e 99 6b 3e 58 27    	mov    0x27583e6b(%rcx),%ds
    1cbd:	dd 71 b9             	fnsave -0x47(%rcx)
    1cc0:	be b6 4f e1 f0       	mov    $0xf0e14fb6,%esi
    1cc5:	17                   	(bad)  
    1cc6:	ad                   	lods   %ds:(%rsi),%eax
    1cc7:	88 c9                	mov    %cl,%cl
    1cc9:	66 ac                	data16 lods %ds:(%rsi),%al
    1ccb:	20 7d b4             	and    %bh,-0x4c(%rbp)
    1cce:	3a ce                	cmp    %dh,%cl
    1cd0:	63 18                	movslq (%rax),%ebx
    1cd2:	4a df e5             	rex.WX (bad) 
    1cd5:	82                   	(bad)  
    1cd6:	31 1a                	xor    %ebx,(%rdx)
    1cd8:	97                   	xchg   %eax,%edi
    1cd9:	60                   	(bad)  
    1cda:	33 51 62             	xor    0x62(%rcx),%edx
    1cdd:	45 7f 53             	rex.RB jg 1d33 <Td3+0x103>
    1ce0:	b1 e0                	mov    $0xe0,%cl
    1ce2:	77 64                	ja     1d48 <Td3+0x118>
    1ce4:	bb 84 ae 6b fe       	mov    $0xfe6bae84,%ebx
    1ce9:	1c a0                	sbb    $0xa0,%al
    1ceb:	81 f9 94 2b 08 70    	cmp    $0x70082b94,%ecx
    1cf1:	58                   	pop    %rax
    1cf2:	68 48 8f 19 fd       	pushq  $0xfffffffffd198f48
    1cf7:	45 94                	rex.RB xchg %eax,%r12d
    1cf9:	87 6c de 52          	xchg   %ebp,0x52(%rsi,%rbx,8)
    1cfd:	b7 f8                	mov    $0xf8,%bh
    1cff:	7b ab                	jnp    1cac <Td3+0x7c>
    1d01:	23 d3                	and    %ebx,%edx
    1d03:	73 72                	jae    1d77 <Td3+0x147>
    1d05:	e2 02                	loop   1d09 <Td3+0xd9>
    1d07:	4b e3 57             	rex.WXB jrcxz 1d61 <Td3+0x131>
    1d0a:	8f                   	(bad)  
    1d0b:	1f                   	(bad)  
    1d0c:	66 2a ab 55 b2 07 28 	data16 sub 0x2807b255(%rbx),%ch
    1d13:	eb 2f                	jmp    1d44 <Td3+0x114>
    1d15:	03 c2                	add    %edx,%eax
    1d17:	b5 86                	mov    $0x86,%ch
    1d19:	9a                   	(bad)  
    1d1a:	7b c5                	jnp    1ce1 <Td3+0xb1>
    1d1c:	d3 a5 08 37 30 f2    	shll   %cl,-0xdcfc8f8(%rbp)
    1d22:	87 28                	xchg   %ebp,(%rax)
    1d24:	23 b2 a5 bf 02 ba    	and    -0x45fd405b(%rdx),%esi
    1d2a:	6a 03                	pushq  $0x3
    1d2c:	ed                   	in     (%dx),%eax
    1d2d:	5c                   	pop    %rsp
    1d2e:	82                   	(bad)  
    1d2f:	16                   	(bad)  
    1d30:	8a 2b                	mov    (%rbx),%ch
    1d32:	1c cf                	sbb    $0xcf,%al
    1d34:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    1d35:	92                   	xchg   %eax,%edx
    1d36:	b4 79                	mov    $0x79,%ah
    1d38:	f3 f0 f2 07          	repz lock repnz (bad) 
    1d3c:	4e a1 e2 69 65 cd f4 	rex.WRX movabs 0xd506daf4cd6569e2,%rax
    1d43:	da 06 d5 
    1d46:	be 05 d1 1f 62       	mov    $0x621fd105,%esi
    1d4b:	34 c4                	xor    $0xc4,%al
    1d4d:	8a fe                	mov    %dh,%bh
    1d4f:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    1d50:	34 9d                	xor    $0x9d,%al
    1d52:	53                   	push   %rbx
    1d53:	2e a2 a0 55 f3 05 32 	movabs %al,%cs:0xa48ae13205f355a0
    1d5a:	e1 8a a4 
    1d5d:	75 eb                	jne    1d4a <Td3+0x11a>
    1d5f:	f6                   	(bad)  
    1d60:	0b 39                	or     (%rcx),%edi
    1d62:	ec                   	in     (%dx),%al
    1d63:	83 40 aa ef          	addl   $0xffffffef,-0x56(%rax)
    1d67:	60                   	(bad)  
    1d68:	5e                   	pop    %rsi
    1d69:	06                   	(bad)  
    1d6a:	9f                   	lahf   
    1d6b:	71 bd                	jno    1d2a <Td3+0xfa>
    1d6d:	51                   	push   %rcx
    1d6e:	10 6e 3e             	adc    %ch,0x3e(%rsi)
    1d71:	f9                   	stc    
    1d72:	8a 21                	mov    (%rcx),%ah
    1d74:	96                   	xchg   %eax,%esi
    1d75:	3d 06 dd dd ae       	cmp    $0xaedddd06,%eax
    1d7a:	05 3e 4d 46 bd       	add    $0xbd464d3e,%eax
    1d7f:	e6 91                	out    %al,$0x91
    1d81:	b5 8d                	mov    $0x8d,%ch
    1d83:	54                   	push   %rsp
    1d84:	71 05                	jno    1d8b <Td3+0x15b>
    1d86:	5d                   	pop    %rbp
    1d87:	c4                   	(bad)  
    1d88:	04 6f                	add    $0x6f,%al
    1d8a:	d4                   	(bad)  
    1d8b:	06                   	(bad)  
    1d8c:	60                   	(bad)  
    1d8d:	ff 15 50 19 24 fb    	callq  *-0x4dbe6b0(%rip)        # fffffffffb2436e3 <AES_decrypt+0xfffffffffb240e93>
    1d93:	98                   	cwtl   
    1d94:	d6                   	(bad)  
    1d95:	97                   	xchg   %eax,%edi
    1d96:	e9 bd 89 cc 43       	jmpq   43cca758 <AES_decrypt+0x43cc7f08>
    1d9b:	40                   	rex
    1d9c:	67 77 9e             	addr32 ja 1d3d <Td3+0x10d>
    1d9f:	d9 b0 bd 42 e8 07    	fnstenv 0x7e842bd(%rax)
    1da5:	88 8b 89 e7 38 5b    	mov    %cl,0x5b38e789(%rbx)
    1dab:	19 79 db             	sbb    %edi,-0x25(%rcx)
    1dae:	ee                   	out    %al,(%dx)
    1daf:	c8 a1 47 0a          	enterq $0x47a1,$0xa
    1db3:	7c 7c                	jl     1e31 <Td3+0x201>
    1db5:	e9 0f 42 f8 c9       	jmpq   ffffffffc9f85fc9 <AES_decrypt+0xffffffffc9f83779>
    1dba:	1e                   	(bad)  
    1dbb:	84 00                	test   %al,(%rax)
    1dbd:	00 00                	add    %al,(%rax)
    1dbf:	00 09                	add    %cl,(%rcx)
    1dc1:	83 86 80 32 48 ed 2b 	addl   $0x2b,-0x12b7cd80(%rsi)
    1dc8:	1e                   	(bad)  
    1dc9:	ac                   	lods   %ds:(%rsi),%al
    1dca:	70 11                	jo     1ddd <Td3+0x1ad>
    1dcc:	6c                   	insb   (%dx),%es:(%rdi)
    1dcd:	4e 72 5a             	rex.WRX jb 1e2a <Td3+0x1fa>
    1dd0:	fd                   	std    
    1dd1:	fb                   	sti    
    1dd2:	ff 0e                	decl   (%rsi)
    1dd4:	0f 56 38             	orps   (%rax),%xmm7
    1dd7:	85 3d 1e d5 ae 36    	test   %edi,0x36aed51e(%rip)        # 36aef2fb <AES_decrypt+0x36aecaab>
    1ddd:	27                   	(bad)  
    1dde:	39 2d 0a 64 d9 0f    	cmp    %ebp,0xfd9640a(%rip)        # fd981ee <AES_decrypt+0xfd9599e>
    1de4:	68 21 a6 5c 9b       	pushq  $0xffffffff9b5ca621
    1de9:	d1 54 5b 24          	rcll   0x24(%rbx,%rbx,2)
    1ded:	3a 2e                	cmp    (%rsi),%ch
    1def:	36 0c b1             	ss or  $0xb1,%al
    1df2:	67 0a 93 0f e7 57 b4 	or     -0x4ba818f1(%ebx),%dl
    1df9:	d2 96 ee 1b 9e 91    	rclb   %cl,-0x6e61e412(%rsi)
    1dff:	9b                   	fwait
    1e00:	80 4f c5 c0          	orb    $0xc0,-0x3b(%rdi)
    1e04:	61                   	(bad)  
    1e05:	a2 20 dc 5a 69 4b 77 	movabs %al,0x161c774b695adc20
    1e0c:	1c 16 
    1e0e:	1a 12                	sbb    (%rdx),%dl
    1e10:	e2 0a                	loop   1e1c <Td3+0x1ec>
    1e12:	ba 93 c0 e5 2a       	mov    $0x2ae5c093,%edx
    1e17:	a0 3c 43 e0 22 12 1d 	movabs 0x1b171d1222e0433c,%al
    1e1e:	17 1b 
    1e20:	0e                   	(bad)  
    1e21:	0b 0d 09 f2 ad c7    	or     -0x38520df7(%rip),%ecx        # ffffffffc7ae1030 <AES_decrypt+0xffffffffc7ade7e0>
    1e27:	8b 2d b9 a8 b6 14    	mov    0x14b6a8b9(%rip),%ebp        # 14b6c6e6 <AES_decrypt+0x14b69e96>
    1e2d:	c8 a9 1e 57          	enterq $0x1ea9,$0x57
    1e31:	85 19                	test   %ebx,(%rcx)
    1e33:	f1                   	icebp  
    1e34:	af                   	scas   %es:(%rdi),%eax
    1e35:	4c 07                	rex.WR (bad) 
    1e37:	75 ee                	jne    1e27 <Td3+0x1f7>
    1e39:	bb dd 99 a3 fd       	mov    $0xfda399dd,%ebx
    1e3e:	60                   	(bad)  
    1e3f:	7f f7                	jg     1e38 <Td3+0x208>
    1e41:	9f                   	lahf   
    1e42:	26 01 5c bc f5       	add    %ebx,%es:-0xb(%rsp,%rdi,4)
    1e47:	72 44                	jb     1e8d <Td3+0x25d>
    1e49:	c5 3b 66             	(bad)  
    1e4c:	5b                   	pop    %rbx
    1e4d:	34 7e                	xor    $0x7e,%al
    1e4f:	fb                   	sti    
    1e50:	8b 76 29             	mov    0x29(%rsi),%esi
    1e53:	43 cb                	rex.XB lret 
    1e55:	dc c6                	fadd   %st,%st(6)
    1e57:	23 b6 68 fc ed b8    	and    -0x47120398(%rsi),%esi
    1e5d:	63 f1                	movslq %ecx,%esi
    1e5f:	e4 d7                	in     $0xd7,%al
    1e61:	ca dc 31             	lret   $0x31dc
    1e64:	42 10 85 63 13 40 22 	rex.X adc %al,0x22401363(%rbp)
    1e6b:	97                   	xchg   %eax,%edi
    1e6c:	84 20                	test   %ah,(%rax)
    1e6e:	11 c6                	adc    %eax,%esi
    1e70:	85 7d 24             	test   %edi,0x24(%rbp)
    1e73:	4a d2 f8             	rex.WX sar %cl,%al
    1e76:	3d bb ae 11 32       	cmp    $0x3211aebb,%eax
    1e7b:	f9                   	stc    
    1e7c:	c7                   	(bad)  
    1e7d:	6d                   	insl   (%dx),%es:(%rdi)
    1e7e:	a1 29 1d 4b 2f 9e dc 	movabs 0x30f3dc9e2f4b1d29,%eax
    1e85:	f3 30 
    1e87:	b2 0d                	mov    $0xd,%dl
    1e89:	ec                   	in     (%dx),%al
    1e8a:	52                   	push   %rdx
    1e8b:	86 77 d0             	xchg   %dh,-0x30(%rdi)
    1e8e:	e3 c1                	jrcxz  1e51 <Td3+0x221>
    1e90:	2b 6c 16 b3          	sub    -0x4d(%rsi,%rdx,1),%ebp
    1e94:	a9 99 b9 70 11       	test   $0x1170b999,%eax
    1e99:	fa                   	cli    
    1e9a:	48 94                	xchg   %rax,%rsp
    1e9c:	47 22 64 e9 a8       	and    -0x58(%r9,%r13,8),%r12b
    1ea1:	c4                   	(bad)  
    1ea2:	8c fc                	mov    %?,%esp
    1ea4:	a0 1a 3f f0 56 d8 2c 	movabs 0x227d2cd856f03f1a,%al
    1eab:	7d 22 
    1ead:	ef                   	out    %eax,(%dx)
    1eae:	90                   	nop
    1eaf:	33 87 c7 4e 49 d9    	xor    -0x26b6b139(%rdi),%eax
    1eb5:	c1 d1 38             	rcl    $0x38,%ecx
    1eb8:	8c fe                	mov    %?,%esi
    1eba:	a2 ca 98 36 0b d4 a6 	movabs %al,0x81cfa6d40b3698ca
    1ec1:	cf 81 
    1ec3:	f5                   	cmc    
    1ec4:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    1ec5:	28 de                	sub    %bl,%dh
    1ec7:	7a da                	jp     1ea3 <Td3+0x273>
    1ec9:	26 8e b7 3f a4 bf ad 	mov    %es:-0x52405bc1(%rdi),%?
    1ed0:	2c e4                	sub    $0xe4,%al
    1ed2:	9d                   	popfq  
    1ed3:	3a 50 0d             	cmp    0xd(%rax),%dl
    1ed6:	92                   	xchg   %eax,%edx
    1ed7:	78 6a                	js     1f43 <Td3+0x313>
    1ed9:	9b                   	fwait
    1eda:	cc                   	int3   
    1edb:	5f                   	pop    %rdi
    1edc:	54                   	push   %rsp
    1edd:	62                   	(bad)  {%k6}{z}
    1ede:	46 7e f6             	rex.RX jle 1ed7 <Td3+0x2a7>
    1ee1:	c2 13 8d             	retq   $0x8d13
    1ee4:	90                   	nop
    1ee5:	e8 b8 d8 2e 5e       	callq  5e2ef7a2 <AES_decrypt+0x5e2ecf52>
    1eea:	f7 39                	idivl  (%rcx)
    1eec:	82                   	(bad)  
    1eed:	f5                   	cmc    
    1eee:	af                   	scas   %es:(%rdi),%eax
    1eef:	c3                   	retq   
    1ef0:	9f                   	lahf   
    1ef1:	be 80 5d 69 7c       	mov    $0x7c695d80,%esi
    1ef6:	93                   	xchg   %eax,%ebx
    1ef7:	d0 6f a9             	shrb   -0x57(%rdi)
    1efa:	2d d5 cf b3 12       	sub    $0x12b3cfd5,%eax
    1eff:	25 c8 3b 99 ac       	and    $0xac993bc8,%eax
    1f04:	10 a7 7d 18 e8 6e    	adc    %ah,0x6ee8187d(%rdi)
    1f0a:	63 9c db 7b bb 3b cd 	movslq -0x32c44485(%rbx,%rbx,8),%ebx
    1f11:	09 78 26             	or     %edi,0x26(%rax)
    1f14:	6e                   	outsb  %ds:(%rsi),(%dx)
    1f15:	f4                   	hlt    
    1f16:	18 59 ec             	sbb    %bl,-0x14(%rcx)
    1f19:	01 b7 9a 83 a8 9a    	add    %esi,-0x65577c66(%rdi)
    1f1f:	4f e6 65             	rex.WRXB out %al,$0x65
    1f22:	6e                   	outsb  %ds:(%rsi),(%dx)
    1f23:	95                   	xchg   %eax,%ebp
    1f24:	aa                   	stos   %al,%es:(%rdi)
    1f25:	7e e6                	jle    1f0d <Td3+0x2dd>
    1f27:	ff 21                	jmpq   *(%rcx)
    1f29:	08 cf                	or     %cl,%bh
    1f2b:	bc ef e6 e8 15       	mov    $0x15e8e6ef,%esp
    1f30:	ba d9 9b e7 4a       	mov    $0x4ae79bd9,%edx
    1f35:	ce                   	(bad)  
    1f36:	36 6f                	outsl  %ss:(%rsi),(%dx)
    1f38:	ea                   	(bad)  
    1f39:	d4                   	(bad)  
    1f3a:	09 9f 29 d6 7c b0    	or     %ebx,-0x4f8329d7(%rdi)
    1f40:	31 af b2 a4 2a 31    	xor    %ebp,0x312aa4b2(%rdi)
    1f46:	23 3f                	and    (%rdi),%edi
    1f48:	c6                   	(bad)  
    1f49:	30 94 a5 35 c0 66 a2 	xor    %dl,-0x5d993fcb(%rbp,%riz,4)
    1f50:	74 37                	je     1f89 <Td3+0x359>
    1f52:	bc 4e fc a6 ca       	mov    $0xcaa6fc4e,%esp
    1f57:	82                   	(bad)  
    1f58:	e0 b0                	loopne 1f0a <Td3+0x2da>
    1f5a:	d0 90 33 15 d8 a7    	rclb   -0x5827eacd(%rax)
    1f60:	f1                   	icebp  
    1f61:	4a 98                	rex.WX cltq 
    1f63:	04 41                	add    $0x41,%al
    1f65:	f7 da                	neg    %edx
    1f67:	ec                   	in     (%dx),%al
    1f68:	7f 0e                	jg     1f78 <Td3+0x348>
    1f6a:	50                   	push   %rax
    1f6b:	cd 17                	int    $0x17
    1f6d:	2f                   	(bad)  
    1f6e:	f6 91 76 8d d6 4d    	notb   0x4dd68d76(%rcx)
    1f74:	43                   	rex.XB
    1f75:	4d b0 ef             	rex.WRB mov $0xef,%r8b
    1f78:	cc                   	int3   
    1f79:	54                   	push   %rsp
    1f7a:	4d aa                	rex.WRB stos %al,%es:(%rdi)
    1f7c:	e4 df                	in     $0xdf,%al
    1f7e:	04 96                	add    $0x96,%al
    1f80:	9e                   	sahf   
    1f81:	e3 b5                	jrcxz  1f38 <Td3+0x308>
    1f83:	d1 4c 1b 88          	rorl   -0x78(%rbx,%rbx,1)
    1f87:	6a c1                	pushq  $0xffffffffffffffc1
    1f89:	b8 1f 2c 46 7f       	mov    $0x7f462c1f,%eax
    1f8e:	51                   	push   %rcx
    1f8f:	65 9d                	gs popfq 
    1f91:	04 ea                	add    $0xea,%al
    1f93:	5e                   	pop    %rsi
    1f94:	01 5d 35             	add    %ebx,0x35(%rbp)
    1f97:	8c fa                	mov    %?,%edx
    1f99:	73 74                	jae    200f <Td3+0x3df>
    1f9b:	87 fb                	xchg   %edi,%ebx
    1f9d:	2e 41 0b b3 5a 1d 67 	or     %cs:-0x6d98e2a6(%r11),%esi
    1fa4:	92 
    1fa5:	52                   	push   %rdx
    1fa6:	d2 db                	rcr    %cl,%bl
    1fa8:	e9 33 56 10 6d       	jmpq   6d1075e0 <AES_decrypt+0x6d104d90>
    1fad:	13 47 d6             	adc    -0x2a(%rdi),%eax
    1fb0:	9a                   	(bad)  
    1fb1:	8c 61 d7             	mov    %fs,-0x29(%rcx)
    1fb4:	37                   	(bad)  
    1fb5:	7a 0c                	jp     1fc3 <Td3+0x393>
    1fb7:	a1 59 8e 14 f8 eb 89 	movabs 0x133c89ebf8148e59,%eax
    1fbe:	3c 13 
    1fc0:	ce                   	(bad)  
    1fc1:	ee                   	out    %al,(%dx)
    1fc2:	27                   	(bad)  
    1fc3:	a9 b7 35 c9 61       	test   $0x61c935b7,%eax
    1fc8:	e1 ed                	loope  1fb7 <Td3+0x387>
    1fca:	e5 1c                	in     $0x1c,%eax
    1fcc:	7a 3c                	jp     200a <Td3+0x3da>
    1fce:	b1 47                	mov    $0x47,%cl
    1fd0:	9c                   	pushfq 
    1fd1:	59                   	pop    %rcx
    1fd2:	df d2                	(bad)  
    1fd4:	55                   	push   %rbp
    1fd5:	3f                   	(bad)  
    1fd6:	73 f2                	jae    1fca <Td3+0x39a>
    1fd8:	18 79 ce             	sbb    %bh,-0x32(%rcx)
    1fdb:	14 73                	adc    $0x73,%al
    1fdd:	bf 37 c7 53 ea       	mov    $0xea53c737,%edi
    1fe2:	cd f7                	int    $0xf7
    1fe4:	5f                   	pop    %rdi
    1fe5:	5b                   	pop    %rbx
    1fe6:	aa                   	stos   %al,%es:(%rdi)
    1fe7:	fd                   	std    
    1fe8:	df 14 6f             	fist   (%rdi,%rbp,2)
    1feb:	3d 78 86 db 44       	cmp    $0x44db8678,%eax
    1ff0:	ca 81 f3             	lret   $0xf381
    1ff3:	af                   	scas   %es:(%rdi),%eax
    1ff4:	b9 3e c4 68 38       	mov    $0x3868c43e,%ecx
    1ff9:	2c 34                	sub    $0x34,%al
    1ffb:	24 c2                	and    $0xc2,%al
    1ffd:	5f                   	pop    %rdi
    1ffe:	40 a3 16 72 c3 1d bc 	rex movabs %eax,0xe2250cbc1dc37216
    2005:	0c 25 e2 
    2008:	28 8b 49 3c ff 41    	sub    %cl,0x41ff3c49(%rbx)
    200e:	95                   	xchg   %eax,%ebp
    200f:	0d 39 71 01 a8       	or     $0xa8017139,%eax
    2014:	08 de                	or     %bl,%dh
    2016:	b3 0c                	mov    $0xc,%bl
    2018:	d8 9c e4 b4 64 90 c1 	fcomps -0x3e6f9b4c(%rsp,%riz,8)
    201f:	56                   	push   %rsi
    2020:	7b 61                	jnp    2083 <Td4+0x53>
    2022:	84 cb                	test   %cl,%bl
    2024:	d5                   	(bad)  
    2025:	70 b6                	jo     1fdd <Td3+0x3ad>
    2027:	32 48 74             	xor    0x74(%rax),%cl
    202a:	5c                   	pop    %rsp
    202b:	6c                   	insb   (%dx),%es:(%rdi)
    202c:	d0 42 57             	rolb   0x57(%rdx)
    202f:	b8 52 09 6a d5       	mov    $0xd56a0952,%eax

0000000000002030 <Td4>:
    2030:	52                   	push   %rdx
    2031:	09 6a d5             	or     %ebp,-0x2b(%rdx)
    2034:	30 36                	xor    %dh,(%rsi)
    2036:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
    2037:	38 bf 40 a3 9e 81    	cmp    %bh,-0x7e615cc0(%rdi)
    203d:	f3 d7                	repz xlat %ds:(%rbx)
    203f:	fb                   	sti    
    2040:	7c e3                	jl     2025 <Td3+0x3f5>
    2042:	39 82 9b 2f ff 87    	cmp    %eax,-0x7800d065(%rdx)
    2048:	34 8e                	xor    $0x8e,%al
    204a:	43                   	rex.XB
    204b:	44 c4                	rex.R (bad) 
    204d:	de e9                	fsubrp %st,%st(1)
    204f:	cb                   	lret   
    2050:	54                   	push   %rsp
    2051:	7b 94                	jnp    1fe7 <Td3+0x3b7>
    2053:	32 a6 c2 23 3d ee    	xor    -0x11c2dc3e(%rsi),%ah
    2059:	4c 95                	rex.WR xchg %rax,%rbp
    205b:	0b 42 fa             	or     -0x6(%rdx),%eax
    205e:	c3                   	retq   
    205f:	4e 08 2e             	rex.WRX or %r13b,(%rsi)
    2062:	a1 66 28 d9 24 b2 76 	movabs 0xa25b76b224d92866,%eax
    2069:	5b a2 
    206b:	49 6d                	rex.WB insl (%dx),%es:(%rdi)
    206d:	8b d1                	mov    %ecx,%edx
    206f:	25 72 f8 f6 64       	and    $0x64f6f872,%eax
    2074:	86 68 98             	xchg   %ch,-0x68(%rax)
    2077:	16                   	(bad)  
    2078:	d4                   	(bad)  
    2079:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    207a:	5c                   	pop    %rsp
    207b:	cc                   	int3   
    207c:	5d                   	pop    %rbp
    207d:	65 b6 92             	gs mov $0x92,%dh
    2080:	6c                   	insb   (%dx),%es:(%rdi)
    2081:	70 48                	jo     20cb <Td4+0x9b>
    2083:	50                   	push   %rax
    2084:	fd                   	std    
    2085:	ed                   	in     (%dx),%eax
    2086:	b9 da 5e 15 46       	mov    $0x46155eda,%ecx
    208b:	57                   	push   %rdi
    208c:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
    208d:	8d 9d 84 90 d8 ab    	lea    -0x54276f7c(%rbp),%ebx
    2093:	00 8c bc d3 0a f7 e4 	add    %cl,-0x1b08f52d(%rsp,%rdi,4)
    209a:	58                   	pop    %rax
    209b:	05 b8 b3 45 06       	add    $0x645b3b8,%eax
    20a0:	d0 2c 1e             	shrb   (%rsi,%rbx,1)
    20a3:	8f ca 3f 0f          	(bad)  
    20a7:	02 c1                	add    %cl,%al
    20a9:	af                   	scas   %es:(%rdi),%eax
    20aa:	bd 03 01 13 8a       	mov    $0x8a130103,%ebp
    20af:	6b 3a 91             	imul   $0xffffff91,(%rdx),%edi
    20b2:	11 41 4f             	adc    %eax,0x4f(%rcx)
    20b5:	67 dc ea             	addr32 fsubr %st,%st(2)
    20b8:	97                   	xchg   %eax,%edi
    20b9:	f2 cf                	repnz iret 
    20bb:	ce                   	(bad)  
    20bc:	f0 b4 e6             	lock mov $0xe6,%ah
    20bf:	73 96                	jae    2057 <Td4+0x27>
    20c1:	ac                   	lods   %ds:(%rsi),%al
    20c2:	74 22                	je     20e6 <Td4+0xb6>
    20c4:	e7 ad                	out    %eax,$0xad
    20c6:	35 85 e2 f9 37       	xor    $0x37f9e285,%eax
    20cb:	e8 1c 75 df 6e       	callq  6edf95ec <AES_decrypt+0x6edf6d9c>
    20d0:	47 f1                	rex.RXB icebp 
    20d2:	1a 71 1d             	sbb    0x1d(%rcx),%dh
    20d5:	29 c5                	sub    %eax,%ebp
    20d7:	89 6f b7             	mov    %ebp,-0x49(%rdi)
    20da:	62                   	(bad)  {%k6}{z}
    20db:	0e                   	(bad)  
    20dc:	aa                   	stos   %al,%es:(%rdi)
    20dd:	18 be 1b fc 56 3e    	sbb    %bh,0x3e56fc1b(%rsi)
    20e3:	4b c6                	rex.WXB (bad) 
    20e5:	d2 79 20             	sarb   %cl,0x20(%rcx)
    20e8:	9a                   	(bad)  
    20e9:	db c0                	fcmovnb %st(0),%st
    20eb:	fe                   	(bad)  
    20ec:	78 cd                	js     20bb <Td4+0x8b>
    20ee:	5a                   	pop    %rdx
    20ef:	f4                   	hlt    
    20f0:	1f                   	(bad)  
    20f1:	dd a8 33 88 07 c7    	(bad)  -0x38f877cd(%rax)
    20f7:	31 b1 12 10 59 27    	xor    %esi,0x27591012(%rcx)
    20fd:	80 ec 5f             	sub    $0x5f,%ah
    2100:	60                   	(bad)  
    2101:	51                   	push   %rcx
    2102:	7f a9                	jg     20ad <Td4+0x7d>
    2104:	19 b5 4a 0d 2d e5    	sbb    %esi,-0x1ad2f2b6(%rbp)
    210a:	7a 9f                	jp     20ab <Td4+0x7b>
    210c:	93                   	xchg   %eax,%ebx
    210d:	c9                   	leaveq 
    210e:	9c                   	pushfq 
    210f:	ef                   	out    %eax,(%dx)
    2110:	a0 e0 3b 4d ae 2a f5 	movabs 0xc8b0f52aae4d3be0,%al
    2117:	b0 c8 
    2119:	eb bb                	jmp    20d6 <Td4+0xa6>
    211b:	3c 83                	cmp    $0x83,%al
    211d:	53                   	push   %rbx
    211e:	99                   	cltd   
    211f:	61                   	(bad)  
    2120:	17                   	(bad)  
    2121:	2b 04 7e             	sub    (%rsi,%rdi,2),%eax
    2124:	ba 77 d6 26 e1       	mov    $0xe126d677,%edx
    2129:	69 14 63 55 21 0c 7d 	imul   $0x7d0c2155,(%rbx,%riz,2),%edx

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 63 6c             	add    %ah,0x6c(%rbx)
   3:	61                   	(bad)  
   4:	6e                   	outsb  %ds:(%rsi),(%dx)
   5:	67 20 76 65          	and    %dh,0x65(%esi)
   9:	72 73                	jb     7e <.comment+0x7e>
   b:	69 6f 6e 20 37 2e 30 	imul   $0x302e3720,0x6e(%rdi),%ebp
  12:	2e 31 20             	xor    %esp,%cs:(%rax)
  15:	28 67 69             	sub    %ah,0x69(%rdi)
  18:	74 40                	je     5a <.comment+0x5a>
  1a:	67 69 74 2e 63 73 2e 	imul   $0x6e752e73,0x63(%esi,%ebp,1),%esi
  21:	75 6e 
  23:	63 2e                	movslq (%rsi),%ebp
  25:	65 64 75 3a          	gs fs jne 63 <.comment+0x63>
  29:	63 6c 69 76          	movslq 0x76(%rcx,%rbp,2),%ebp
  2d:	65 72 2f             	gs jb  5f <.comment+0x5f>
  30:	63 6c 61 6e          	movslq 0x6e(%rcx,%riz,2),%ebp
  34:	67 20 34 35 31 39 65 	and    %dh,0x32653931(,%esi,1)
  3b:	32 
  3c:	36 33 37             	xor    %ss:(%rdi),%esi
  3f:	66 63 63 34          	movslq 0x34(%rbx),%sp
  43:	62                   	(bad)  {%k6}{z}
  44:	66 36 65 33 30       	ss xor %gs:(%rax),%si
  49:	34 39                	xor    $0x39,%al
  4b:	61                   	(bad)  
  4c:	30 61 38             	xor    %ah,0x38(%rcx)
  4f:	30 65 36             	xor    %ah,0x36(%rbp)
  52:	61                   	(bad)  
  53:	35 65 37 62 39       	xor    $0x39623765,%eax
  58:	37                   	(bad)  
  59:	36 36 37             	ss ss (bad) 
  5c:	63 62 29             	movslq 0x29(%rdx),%esp
  5f:	20 28                	and    %ch,(%rax)
  61:	67 69 74 40 67 69 74 	imul   $0x632e7469,0x67(%eax,%eax,2),%esi
  68:	2e 63 
  6a:	73 2e                	jae    9a <.comment+0x9a>
  6c:	75 6e                	jne    dc <private_AES_set_encrypt_key+0xdc>
  6e:	63 2e                	movslq (%rsi),%ebp
  70:	65 64 75 3a          	gs fs jne ae <private_AES_set_encrypt_key+0xae>
  74:	63 6c 69 76          	movslq 0x76(%rcx,%rbp,2),%ebp
  78:	65 72 2f             	gs jb  aa <private_AES_set_encrypt_key+0xaa>
  7b:	6c                   	insb   (%dx),%es:(%rdi)
  7c:	6c                   	insb   (%dx),%es:(%rdi)
  7d:	76 6d                	jbe    ec <private_AES_set_encrypt_key+0xec>
  7f:	20 63 64             	and    %ah,0x64(%rbx)
  82:	37                   	(bad)  
  83:	30 32                	xor    %dh,(%rdx)
  85:	30 66 63             	xor    %ah,0x63(%rsi)
  88:	37                   	(bad)  
  89:	36 63 64 38 62       	movslq %ss:0x62(%rax,%rdi,1),%esp
  8e:	34 30                	xor    $0x30,%al
  90:	39 32                	cmp    %esi,(%rdx)
  92:	62 61 34 36 31       	(bad)  {%k6}
  97:	65 32 65 34          	xor    %gs:0x34(%rbp),%ah
  9b:	39 39                	cmp    %edi,(%rcx)
  9d:	36 37                	ss (bad) 
  9f:	34 62                	xor    $0x62,%al
  a1:	37                   	(bad)  
  a2:	31 61 65             	xor    %esp,0x65(%rcx)
  a5:	38 65 31             	cmp    %ah,0x31(%rbp)
  a8:	29 00                	sub    %eax,(%rax)

Disassembly of section .rodata.tase_records:

0000000000000000 <.rodata.tase_records>:
   0:	00 00                	add    %al,(%rax)
			0: R_X86_64_32	.text
   2:	00 00                	add    %al,(%rax)
   4:	0e                   	(bad)  
   5:	00 62 00             	add    %ah,0x0(%rdx)
   8:	00 00                	add    %al,(%rax)
			8: R_X86_64_32	.text+0x70
   a:	00 00                	add    %al,(%rax)
   c:	0e                   	(bad)  
   d:	00 14 00             	add    %dl,(%rax,%rax,1)
  10:	00 00                	add    %al,(%rax)
			10: R_X86_64_32	.text+0x92
  12:	00 00                	add    %al,(%rax)
  14:	0e                   	(bad)  
  15:	00 13                	add    %dl,(%rbx)
  17:	00 00                	add    %al,(%rax)
			18: R_X86_64_32	.text+0xb3
  19:	00 00                	add    %al,(%rax)
  1b:	00 0e                	add    %cl,(%rsi)
  1d:	00 14 00             	add    %dl,(%rax,%rax,1)
  20:	00 00                	add    %al,(%rax)
			20: R_X86_64_32	.text+0xd5
  22:	00 00                	add    %al,(%rax)
  24:	0e                   	(bad)  
  25:	00 14 00             	add    %dl,(%rax,%rax,1)
  28:	00 00                	add    %al,(%rax)
			28: R_X86_64_32	.text+0xf7
  2a:	00 00                	add    %al,(%rax)
  2c:	0e                   	(bad)  
  2d:	00 14 00             	add    %dl,(%rax,%rax,1)
  30:	00 00                	add    %al,(%rax)
			30: R_X86_64_32	.text+0x119
  32:	00 00                	add    %al,(%rax)
  34:	0e                   	(bad)  
  35:	00 13                	add    %dl,(%rbx)
  37:	00 00                	add    %al,(%rax)
			38: R_X86_64_32	.text+0x13a
  39:	00 00                	add    %al,(%rax)
  3b:	00 0e                	add    %cl,(%rsi)
  3d:	00 34 00             	add    %dh,(%rax,%rax,1)
  40:	00 00                	add    %al,(%rax)
			40: R_X86_64_32	.text+0x17c
  42:	00 00                	add    %al,(%rax)
  44:	0e                   	(bad)  
  45:	00 23                	add    %ah,(%rbx)
  47:	00 00                	add    %al,(%rax)
			48: R_X86_64_32	.text+0x1ad
  49:	00 00                	add    %al,(%rax)
  4b:	00 0e                	add    %cl,(%rsi)
  4d:	00 14 00             	add    %dl,(%rax,%rax,1)
  50:	00 00                	add    %al,(%rax)
			50: R_X86_64_32	.text+0x1cf
  52:	00 00                	add    %al,(%rax)
  54:	0e                   	(bad)  
  55:	00 23                	add    %ah,(%rbx)
  57:	00 00                	add    %al,(%rax)
			58: R_X86_64_32	.text+0x200
  59:	00 00                	add    %al,(%rax)
  5b:	00 0e                	add    %cl,(%rsi)
  5d:	00 1e                	add    %bl,(%rsi)
  5f:	00 00                	add    %al,(%rax)
			60: R_X86_64_32	.text+0x22c
  61:	00 00                	add    %al,(%rax)
  63:	00 0e                	add    %cl,(%rsi)
  65:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 6b <.rodata.tase_records+0x6b>
			68: R_X86_64_32	.text+0x23f
  6b:	00 0e                	add    %cl,(%rsi)
  6d:	00 bb 03 00 00 00    	add    %bh,0x3(%rbx)
			70: R_X86_64_32	.text+0x608
  73:	00 0e                	add    %cl,(%rsi)
  75:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 7b <.rodata.tase_records+0x7b>
			78: R_X86_64_32	.text+0x61b
  7b:	00 0e                	add    %cl,(%rsi)
  7d:	00 60 02             	add    %ah,0x2(%rax)
  80:	00 00                	add    %al,(%rax)
			80: R_X86_64_32	.text+0x889
  82:	00 00                	add    %al,(%rax)
  84:	0e                   	(bad)  
  85:	00 13                	add    %dl,(%rbx)
  87:	00 00                	add    %al,(%rax)
			88: R_X86_64_32	.text+0x8aa
  89:	00 00                	add    %al,(%rax)
  8b:	00 0e                	add    %cl,(%rsi)
  8d:	00 1e                	add    %bl,(%rsi)
  8f:	00 00                	add    %al,(%rax)
			90: R_X86_64_32	.text+0x8d6
  91:	00 00                	add    %al,(%rax)
  93:	00 0e                	add    %cl,(%rsi)
  95:	00 e5                	add    %ah,%ch
  97:	01 00                	add    %eax,(%rax)
			98: R_X86_64_32	.text+0xac9
  99:	00 00                	add    %al,(%rax)
  9b:	00 0e                	add    %cl,(%rsi)
  9d:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # a3 <.rodata.tase_records+0xa3>
			a0: R_X86_64_32	.text+0xadc
  a3:	00 0e                	add    %cl,(%rsi)
  a5:	00 60 02             	add    %ah,0x2(%rax)
  a8:	00 00                	add    %al,(%rax)
			a8: R_X86_64_32	.text+0xd4a
  aa:	00 00                	add    %al,(%rax)
  ac:	0e                   	(bad)  
  ad:	00 13                	add    %dl,(%rbx)
  af:	00 00                	add    %al,(%rax)
			b0: R_X86_64_32	.text+0xd6b
  b1:	00 00                	add    %al,(%rax)
  b3:	00 0e                	add    %cl,(%rsi)
  b5:	00 d2                	add    %dl,%dl
  b7:	00 00                	add    %al,(%rax)
			b8: R_X86_64_32	.text+0xe4b
  b9:	00 00                	add    %al,(%rax)
  bb:	00 0e                	add    %cl,(%rsi)
  bd:	00 e5                	add    %ah,%ch
  bf:	01 00                	add    %eax,(%rax)
			c0: R_X86_64_32	.text+0x103e
  c1:	00 00                	add    %al,(%rax)
  c3:	00 0e                	add    %cl,(%rsi)
  c5:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # cb <.rodata.tase_records+0xcb>
			c8: R_X86_64_32	.text+0x1051
  cb:	00 0e                	add    %cl,(%rsi)
  cd:	00 60 02             	add    %ah,0x2(%rax)
  d0:	00 00                	add    %al,(%rax)
			d0: R_X86_64_32	.text+0x12bf
  d2:	00 00                	add    %al,(%rax)
  d4:	0e                   	(bad)  
  d5:	00 13                	add    %dl,(%rbx)
  d7:	00 00                	add    %al,(%rax)
			d8: R_X86_64_32	.text+0x12e0
  d9:	00 00                	add    %al,(%rax)
  db:	00 0e                	add    %cl,(%rsi)
  dd:	00 45 02             	add    %al,0x2(%rbp)
  e0:	00 00                	add    %al,(%rax)
			e0: R_X86_64_32	.text+0x1533
  e2:	00 00                	add    %al,(%rax)
  e4:	0e                   	(bad)  
  e5:	00 0e                	add    %cl,(%rsi)
  e7:	00 00                	add    %al,(%rax)
			e8: R_X86_64_32	.text+0x154f
  e9:	00 00                	add    %al,(%rax)
  eb:	00 0e                	add    %cl,(%rsi)
  ed:	00 11                	add    %dl,(%rcx)
  ef:	00 00                	add    %al,(%rax)
			f0: R_X86_64_32	.text+0x1570
  f1:	00 00                	add    %al,(%rax)
  f3:	00 0e                	add    %cl,(%rsi)
  f5:	00 70 00             	add    %dh,0x0(%rax)
  f8:	00 00                	add    %al,(%rax)
			f8: R_X86_64_32	.text+0x15ee
  fa:	00 00                	add    %al,(%rax)
  fc:	0e                   	(bad)  
  fd:	00 1c 00             	add    %bl,(%rax,%rax,1)
 100:	00 00                	add    %al,(%rax)
			100: R_X86_64_32	.text+0x1618
 102:	00 00                	add    %al,(%rax)
 104:	0e                   	(bad)  
 105:	00 18                	add    %bl,(%rax)
 107:	00 00                	add    %al,(%rax)
			108: R_X86_64_32	.text+0x163e
 109:	00 00                	add    %al,(%rax)
 10b:	00 0e                	add    %cl,(%rsi)
 10d:	00 5a 00             	add    %bl,0x0(%rdx)
 110:	00 00                	add    %al,(%rax)
			110: R_X86_64_32	.text+0x16a6
 112:	00 00                	add    %al,(%rax)
 114:	0e                   	(bad)  
 115:	00 1a                	add    %bl,(%rdx)
 117:	00 00                	add    %al,(%rax)
			118: R_X86_64_32	.text+0x16ce
 119:	00 00                	add    %al,(%rax)
 11b:	00 0e                	add    %cl,(%rsi)
 11d:	00 1c 03             	add    %bl,(%rbx,%rax,1)
 120:	00 00                	add    %al,(%rax)
			120: R_X86_64_32	.text+0x19f8
 122:	00 00                	add    %al,(%rax)
 124:	0e                   	(bad)  
 125:	00 31                	add    %dh,(%rcx)
 127:	00 00                	add    %al,(%rax)
			128: R_X86_64_32	.text+0x1a37
 129:	00 00                	add    %al,(%rax)
 12b:	00 0e                	add    %cl,(%rsi)
 12d:	00 0e                	add    %cl,(%rsi)
 12f:	00 00                	add    %al,(%rax)
			130: R_X86_64_32	.text+0x1a53
 131:	00 00                	add    %al,(%rax)
 133:	00 0e                	add    %cl,(%rsi)
 135:	00 27                	add    %ah,(%rdi)
 137:	00 00                	add    %al,(%rax)
			138: R_X86_64_32	.text+0x1a88
 139:	00 00                	add    %al,(%rax)
 13b:	00 0e                	add    %cl,(%rsi)
 13d:	00 87 05 00 00 00    	add    %al,0x5(%rdi)
			140: R_X86_64_32	.text+0x201d
 143:	00 0e                	add    %cl,(%rsi)
 145:	00 1b                	add    %bl,(%rbx)
 147:	00 00                	add    %al,(%rax)
			148: R_X86_64_32	.text+0x2046
 149:	00 00                	add    %al,(%rax)
 14b:	00 0e                	add    %cl,(%rsi)
 14d:	00 0e                	add    %cl,(%rsi)
 14f:	00 00                	add    %al,(%rax)
			150: R_X86_64_32	.text+0x2062
 151:	00 00                	add    %al,(%rax)
 153:	00 0e                	add    %cl,(%rsi)
 155:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 15b <.rodata.tase_records+0x15b>
			158: R_X86_64_32	.text+0x2090
 15b:	00 0e                	add    %cl,(%rsi)
 15d:	00 6b 01             	add    %ch,0x1(%rbx)
 160:	00 00                	add    %al,(%rax)
			160: R_X86_64_32	.text+0x2850
 162:	00 00                	add    %al,(%rax)
 164:	0e                   	(bad)  
 165:	00 88 04 00 00 00    	add    %cl,0x4(%rax)
			168: R_X86_64_32	.text+0x2ce6
 16b:	00 0e                	add    %cl,(%rsi)
 16d:	00 5a 03             	add    %bl,0x3(%rdx)
 170:	00 00                	add    %al,(%rax)
			170: R_X86_64_32	.text+0x304e
 172:	00 00                	add    %al,(%rax)
 174:	0e                   	(bad)  
 175:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 17b <.rodata.tase_records+0x17b>
			178: R_X86_64_32	.text+0x3061
 17b:	00 0e                	add    %cl,(%rsi)
 17d:	00 12                	add    %dl,(%rdx)
 17f:	03 00                	add    (%rax),%eax
			180: R_X86_64_32	.text+0x3381
 181:	00 00                	add    %al,(%rax)
 183:	00 0e                	add    %cl,(%rsi)
 185:	00 41 08             	add    %al,0x8(%rcx)

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	01 7a 52             	add    %edi,0x52(%rdx)
   b:	00 01                	add    %al,(%rcx)
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    %ebx,(%rbx)
  11:	0c 07                	or     $0x7,%al
  13:	08 90 01 00 00 1c    	or     %dl,0x1c000001(%rax)
  19:	00 00                	add    %al,(%rax)
  1b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  1e:	00 00                	add    %al,(%rax)
  20:	00 00                	add    %al,(%rax)
			20: R_X86_64_PC32	.text
  22:	00 00                	add    %al,(%rax)
  24:	6e                   	outsb  %ds:(%rsi),(%dx)
  25:	15 00 00 00 57       	adc    $0x57000000,%eax
  2a:	0e                   	(bad)  
  2b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  31:	03 53 15             	add    0x15(%rbx),%edx
  34:	0c 07                	or     $0x7,%al
  36:	08 00                	or     %al,(%rax)
  38:	1c 00                	sbb    $0x0,%al
  3a:	00 00                	add    %al,(%rax)
  3c:	3c 00                	cmp    $0x0,%al
  3e:	00 00                	add    %al,(%rax)
  40:	00 00                	add    %al,(%rax)
			40: R_X86_64_PC32	.text+0x1570
  42:	00 00                	add    %al,(%rax)
  44:	15 0b 00 00 00       	adc    $0xb,%eax
  49:	57                   	push   %rdi
  4a:	0e                   	(bad)  
  4b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  51:	03 fa                	add    %edx,%edi
  53:	0a 0c 07             	or     (%rdi,%rax,1),%cl
  56:	08 00                	or     %al,(%rax)
  58:	1c 00                	sbb    $0x0,%al
  5a:	00 00                	add    %al,(%rax)
  5c:	5c                   	pop    %rsp
  5d:	00 00                	add    %al,(%rax)
  5f:	00 00                	add    %al,(%rax)
			60: R_X86_64_PC32	.text+0x2090
  61:	00 00                	add    %al,(%rax)
  63:	00 bc 07 00 00 00 60 	add    %bh,0x60000000(%rdi,%rax,1)
  6a:	0e                   	(bad)  
  6b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  71:	03 98 07 0c 07 08    	add    0x8070c07(%rax),%ebx
  77:	00 1c 00             	add    %bl,(%rax,%rax,1)
  7a:	00 00                	add    %al,(%rax)
  7c:	7c 00                	jl     7e <.eh_frame+0x7e>
  7e:	00 00                	add    %al,(%rax)
  80:	00 00                	add    %al,(%rax)
			80: R_X86_64_PC32	.text+0x2850
  82:	00 00                	add    %al,(%rax)
  84:	80 13 00             	adcb   $0x0,(%rbx)
  87:	00 00                	add    %al,(%rax)
  89:	57                   	push   %rdi
  8a:	0e                   	(bad)  
  8b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  91:	03 65 13             	add    0x13(%rbp),%esp
  94:	0c 07                	or     $0x7,%al
  96:	08 00                	or     %al,(%rax)

Disassembly of section .llvm_addrsig:

0000000000000000 <.llvm_addrsig>:
   0:	11 10                	adc    %edx,(%rax)
   2:	0f 0e                	femms  
   4:	09 0a                	or     %ecx,(%rdx)
   6:	07                   	(bad)  
   7:	08 0b                	or     %cl,(%rbx)
   9:	02 03                	add    (%rbx),%al
   b:	04 05                	add    $0x5,%al
   d:	06                   	(bad)  
